from typing import *	##line:(1)
def minPath(grid, k):	##line:(2)
    n = len(grid)	##line:(3)
    val = n * n + 1	##line:(4)
    for i in range(n):	##line:(5)
        for j in range(n):	##line:(6)
            if grid[i][j] == 1:	##line:(7)
                temp = []	##line:(8)
                if i != 0:	##line:(9)
                    temp.append(grid[i - 1][j])	##line:(10)
	##line:(11)
                if j != 0:	##line:(12)
                    temp.append(grid[i][j - 1])	##line:(13)
	##line:(14)
                if i != n - 1:	##line:(15)
                    temp.append(grid[i + 1][j])	##line:(16)
	##line:(17)
                if j != n - 1:	##line:(18)
                    temp.append(grid[i][j + 1])	##line:(19)
	##line:(20)
                val = min(temp)	##line:(21)
	##line:(22)
    ans = []	##line:(23)
    for i in range(k):	##line:(24)
        if i % 2 == 0:	##line:(25)
            ans.append(1)	##line:(26)
        else:	##line:(27)
            ans.append(val)	##line:(28)
    return ans	##line:(29)

minPath([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3) 