{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN",
        "predict": "mon\nEND-OF-OUTPUT"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.PrintWriter;\nimport java.util.Set;\nimport java.util.TreeSet;\n\npublic class Main {\n\tfinal int _intMax = Integer.MAX_VALUE; // =2147483647>10^9\n\tfinal int _intMin = Integer.MIN_VALUE;\n\tfinal long _longMax = Long.MAX_VALUE; // =9223372036854775807L>10^18\n\tfinal long _longMin = Long.MIN_VALUE;\n\n\tvoid solve() {\n\t\tSet<Character> set = new TreeSet<>();\n\t\tfor (char ch = 'a'; ch <= 'z'; ch++)\n\t\t\tset.add(ch);\n\t\tString line = readLine();\n\t\tfor (int i = 0; i < line.length(); i++) {\n\t\t\tchar ch = line.charAt(i);\n\t\t\tset.remove(ch);\n\t\t}\n\t\tif (set.size() > 0) {\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tsb.append(line);\n\t\t\tsb.append(set.iterator().next());\n\t\t\tpln(sb.toString());\n\t\t\treturn;\n\t\t}\n\t\tif (\"zyxwvutsrqponmlkjihgfedcba\".equals(line)) {\n\t\t\tpln(-1);\n\t\t\treturn;\n\t\t}\n\t\tnext(line, \"\");\n\t}\n\n\tboolean next(String line, String cur) {\n\t\tif (line.substring(0, cur.length()).compareTo(cur) > 0)\n\t\t\treturn false;\n\t\tif (line.length() == cur.length()) {\n\t\t\tif (line.compareTo(cur) < 0) {\n\t\t\t\tfor (int i = 0; i < line.length(); i++) {\n\t\t\t\t\tp(cur.charAt(i));\n\t\t\t\t\tif (line.charAt(i) != cur.charAt(i)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpln(\"\");\n\t\t\t\treturn true;\n\t\t\t} else\n\t\t\t\treturn false;\n\t\t}\n\t\tfor (char ch = 'a'; ch <= 'z'; ch++) {\n\t\t\tif (cur.indexOf(ch) < 0) {\n\t\t\t\tif (next(line, cur + String.valueOf(ch)))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// -----------------------------------------------------\n\t// 2018/04/26 r2\n\t// -----------------------------------------------------\n\tint abs(int a) {\n\t\treturn (a >= 0) ? a : -a;\n\t}\n\n\tlong abs(long a) {\n\t\treturn (a >= 0) ? a : -a;\n\t}\n\n\tint max(int a, int b) {\n\t\treturn (a > b) ? a : b;\n\t}\n\n\tlong max(long a, long b) {\n\t\treturn (a > b) ? a : b;\n\t}\n\n\tint min(int a, int b) {\n\t\treturn (a < b) ? a : b;\n\t}\n\n\tlong min(long a, long b) {\n\t\treturn (a < b) ? a : b;\n\t}\n\n\tint pint(String s) {\n\t\treturn Integer.parseInt(s);\n\t}\n\n\tlong plong(String s) {\n\t\treturn Long.parseLong(s);\n\t}\n\n\tString readLine() {\n\t\ttry {\n\t\t\treturn _in.readLine();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n\tint readNum() {\n\t\tString line = readLine();\n\t\treturn pint(line);\n\t}\n\n\tlong readLong() {\n\t\tString line = readLine();\n\t\treturn plong(line);\n\t}\n\n\tString[] readFlds() {\n\t\tString line = readLine();\n\t\treturn line.split(\" \");\n\t}\n\n\tint[] readNums() {\n\t\tString[] flds = readFlds();\n\t\tint[] nums = new int[flds.length];\n\t\tfor (int i = 0; i < flds.length; i++)\n\t\t\tnums[i] = pint(flds[i]);\n\t\treturn nums;\n\t}\n\n\tlong[] readLongs() {\n\t\tString[] flds = readFlds();\n\t\tlong[] nums = new long[flds.length];\n\t\tfor (int i = 0; i < flds.length; i++)\n\t\t\tnums[i] = plong(flds[i]);\n\t\treturn nums;\n\t}\n\n\tvoid p(char c) {\n\t\t_out.print(c);\n\t}\n\n\tvoid pln(char c) {\n\t\t_out.println(c);\n\t}\n\n\tvoid p(double d) {\n\t\t_out.print(d);\n\t}\n\n\tvoid pln(double d) {\n\t\t_out.println(d);\n\t}\n\n\tvoid p(long l) {\n\t\t_out.print(l);\n\t}\n\n\tvoid pln(long l) {\n\t\t_out.println(l);\n\t}\n\n\tvoid p(String s) {\n\t\t_out.print(s);\n\t}\n\n\tvoid pln(String s) {\n\t\t_out.println(s);\n\t}\n\n\tvoid pln(int[] ia) {\n\t\tfor (int i = 0; i < ia.length; i++)\n\t\t\tpln(ia[i]);\n\t}\n\n\tvoid pln(long[] la) {\n\t\tfor (int i = 0; i < la.length; i++)\n\t\t\tpln(la[i]);\n\t}\n\n\tstatic BufferedReader _in;\n\tstatic PrintWriter _out;\n\tstatic boolean _bElapsed = false;\n\n\tpublic static void main(String[] args) {\n\t\tlong start = System.currentTimeMillis();\n\t\t_in = new BufferedReader(new InputStreamReader(System.in));\n\t\t_out = new PrintWriter(System.out);\n\t\tnew Main().solve();\n\t\t_out.flush();\n\t\tlong end = System.currentTimeMillis();\n\t\tif (_bElapsed)\n\t\t\tSystem.err.println((end - start) + \"ms\");\n\t}\n}\nGicen the following input:\natcoder\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "atcoderb\n",
        "predict": "atcoderb\nEND-OF-OUTPUT"
    }
}