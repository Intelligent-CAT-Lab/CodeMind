some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=13 bci=0
13    	static String INPUT = "";

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=84 bci=5
84    	private static byte[] inbuf = new byte[1024];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=85 bci=13
85    	static int lenbuf = 0, ptrbuf = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=51 bci=0
51    		long S = System.currentTimeMillis();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=52 bci=4
52    		is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1693781145978
main[1] > 
Step completed: "thread=main", Main.main(), line=53 bci=35
53    		out = new PrintWriter(System.out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1693781145978
main[1] > 
Step completed: "thread=main", Main.main(), line=55 bci=48
55    		solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1693781145978
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=0
17    		long n = nl();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nl(), line=163 bci=0
163    		long num = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nl(), line=165 bci=2
165    		boolean minus = false;

main[1] Method arguments:
Local variables:
num = 0
main[1] > 
Step completed: "thread=main", Main.nl(), line=166 bci=4
166    		while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.readByte(), line=89 bci=0
89    		if(lenbuf == -1)throw new InputMismatchException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=90 bci=15
90    		if(ptrbuf >= lenbuf){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=91 bci=24
91    			ptrbuf = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=92 bci=28
92    			try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=93 bci=52
93    			if(lenbuf <= 0)return -1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=95 bci=60
95    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nl(), line=166 bci=7
166    		while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.nl(), line=167 bci=34
167    		if(b == '-'){

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 55
main[1] > 
Step completed: "thread=main", Main.nl(), line=173 bci=46
173    			if(b >= '0' && b <= '9'){

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 55
main[1] > 
Step completed: "thread=main", Main.nl(), line=174 bci=58
174    				num = num * 10 + (b - '0');

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 55
main[1] > 
Step completed: "thread=main", Main.nl(), line=178 bci=84
178    			b = readByte();

main[1] Method arguments:
Local variables:
num = 7
minus = false
b = 55
main[1] > 
Step completed: "thread=main", Main.readByte(), line=89 bci=0
89    		if(lenbuf == -1)throw new InputMismatchException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=90 bci=15
90    		if(ptrbuf >= lenbuf){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=95 bci=60
95    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nl(), line=178 bci=87
178    			b = readByte();

main[1] Method arguments:
Local variables:
num = 7
minus = false
b = 55
main[1] > 
Step completed: "thread=main", Main.nl(), line=173 bci=46
173    			if(b >= '0' && b <= '9'){

main[1] Method arguments:
Local variables:
num = 7
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main.nl(), line=176 bci=73
176    				return minus ? -num : num;

main[1] Method arguments:
Local variables:
num = 7
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=3
17    		long n = nl();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=4
18    		List<Integer> perm = permutationWhoseNumberOfIncreasingSequenceIsK(n);

main[1] Method arguments:
Local variables:
n = 7
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=33 bci=0
33    		long cur = Long.highestOneBit(K+1)-1;

main[1] Method arguments:
K = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=34 bci=9
34    		List<Integer> list = new ArrayList<>();

main[1] Method arguments:
K = 7
Local variables:
cur = 7
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=35 bci=18
35    		for(int i = 0;i < Long.bitCount(cur);i++){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=36 bci=30
36    			list.add(i);

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
i = 0
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=35 bci=43
35    		for(int i = 0;i < Long.bitCount(cur);i++){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
i = 0
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=36 bci=30
36    			list.add(i);

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
i = 1
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=35 bci=43
35    		for(int i = 0;i < Long.bitCount(cur);i++){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
i = 1
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=36 bci=30
36    			list.add(i);

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
i = 2
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=35 bci=43
35    		for(int i = 0;i < Long.bitCount(cur);i++){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
i = 2
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=38 bci=49
38    		int p = Long.bitCount(cur);

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=39 bci=55
39    		for(int d = Long.bitCount(cur)-1;d >= 0;d--){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=40 bci=68
40    			long x = 1L<<d;

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
d = 2
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=41 bci=74
41    			if(cur + x <= K){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
d = 2
x = 4
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=39 bci=105
39    		for(int d = Long.bitCount(cur)-1;d >= 0;d--){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
d = 2
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=40 bci=68
40    			long x = 1L<<d;

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
d = 1
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=41 bci=74
41    			if(cur + x <= K){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
d = 1
x = 2
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=39 bci=105
39    		for(int d = Long.bitCount(cur)-1;d >= 0;d--){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
d = 1
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=40 bci=68
40    			long x = 1L<<d;

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
d = 0
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=41 bci=74
41    			if(cur + x <= K){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
d = 0
x = 1
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=39 bci=105
39    		for(int d = Long.bitCount(cur)-1;d >= 0;d--){

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
d = 0
main[1] > 
Step completed: "thread=main", Main.permutationWhoseNumberOfIncreasingSequenceIsK(), line=46 bci=111
46    		return list;

main[1] Method arguments:
K = 7
Local variables:
cur = 7
list = instance of java.util.ArrayList(id=445)
p = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=8
18    		List<Integer> perm = permutationWhoseNumberOfIncreasingSequenceIsK(n);

main[1] Method arguments:
Local variables:
n = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=19 bci=9
19    		out.println(perm.size()*2);

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=23
20    		for(int i = 1;i <= perm.size();i++){

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=35
21    			if(i > 1)out.print(" ");

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=22 bci=48
22    			out.print(i);

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=55
20    		for(int i = 1;i <= perm.size();i++){

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=35
21    			if(i > 1)out.print(" ");

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=22 bci=48
22    			out.print(i);

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=55
20    		for(int i = 1;i <= perm.size();i++){

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=35
21    			if(i > 1)out.print(" ");

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=22 bci=48
22    			out.print(i);

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=55
20    		for(int i = 1;i <= perm.size();i++){

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=24 bci=61
24    		for(int i = 0;i < perm.size();i++){

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=73
25    			out.print(" ");

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=81
26    			out.print(perm.get(i)+1);

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=24 bci=102
24    		for(int i = 0;i < perm.size();i++){

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=73
25    			out.print(" ");

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=81
26    			out.print(perm.get(i)+1);

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=24 bci=102
24    		for(int i = 0;i < perm.size();i++){

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=73
25    			out.print(" ");

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=81
26    			out.print(perm.get(i)+1);

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=24 bci=102
24    		for(int i = 0;i < perm.size();i++){

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=108
28    		out.println();

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=114
29    	}

main[1] Method arguments:
Local variables:
n = 7
perm = instance of java.util.ArrayList(id=445)
main[1] > 
Step completed: "thread=main", Main.main(), line=56 bci=51
56    		out.flush();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1693781145978
main[1] > 
Step completed: "thread=main", Main.main(), line=57 bci=57
57    		long G = System.currentTimeMillis();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1693781145978
main[1] > 
Step completed: "thread=main", Main.main(), line=58 bci=61
58    		tr(G-S+"ms");

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1693781145978
G = 1693781175206
main[1] > 
Step completed: "thread=main", Main.tr(), line=182 bci=0
182    	private static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }

main[1] Method arguments:
o = instance of java.lang.Object[1] (id=446)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=59 bci=92
59    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1693781145978
G = 1693781175206
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
