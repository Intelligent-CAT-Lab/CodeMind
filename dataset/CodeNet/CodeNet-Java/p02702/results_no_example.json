{
    "0": {
        "prompt": "Consider the following code:\nimport java.util.*;\n\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        // Your code here!\n        Scanner sc = new Scanner(System.in);\n        String str = sc.next();\n        char c[] = str.toCharArray();\n        int n = str.length();\n        int p = 2019;\n        \n        // ans: i\u6841\u76ee\uff5ej\u6841\u76ee\u306e\u90e8\u5206\u5217\u304c2019\u306e\u500d\u6570\u3067\u3042\u308b\u30d1\u30bf\u30fc\u30f3\u6570\n        // ex. 1817181712114\n        //         ^^^^^\n        long ans = 0;\n        \n        // 2019\u306e\u500d\u6570\u306b\u306a\u308b\u6841i, j\u306e\u7d44\u307f\u5408\u308f\u305b\u5168\u63a2\u7d22\u306fO(N^2)\n        // -> \u5404\u6841\u306e\u300c2019\u306e\u4f59\u308a\u300d\u3092O(N)\u3067\u8a08\u7b97\u3059\u308b\u3002\n        \n        // d'[i]: \u53f3\u304b\u3089i\u6841\u76ee\u306e\u5024 * 10^i (mod 2019)\n        // ex. 1817181712114\n        // d'[0]: 4 % 2019 -> 4\n        // d'[1]: 10 % 2019 -> 10\n        // d'[5]: 700000 (mod 2019) -> ?\n        // \u2261 7 * 10 * 10^4\n        // \u2261 7 * 19240\n        // \u2261 7 * 1069 = 7483 % 2019 = 1426\n        \n        // d[i]: d'[i]\u306e\u7d2f\u7a4d\u548c\n        // d = {4,14,114,95}\n        int[] d = new int[n+1];\n        // ten: 10^i (mod 2019)\n        int ten = 1;\n        \n        // d[i]\u3092\u8a08\u7b97\u3059\u308b\n        // (\u53f3\u306e\u6841(c[n-1])\u304b\u3089\u9806\u306b\u898b\u308b)\n        for (int i = n - 1; i >= 0; i--) {\n            // 1000000 % 2019\u306f\u8a08\u7b97\u3057\u3093\u3069\u3044\u306e\u3067\u3001\n            int a = ((c[i] - '0') * ten) % p;\n            d[i] = (d[i+1] + a) % p;\n            ten = (ten * 10) % p;\n        }\n        \n        // \u300cd[i] = d[j]\u3068\u306a\u308b\u300d\u3068\u306f\u3001\n        // \u300cex. 181712114 % 2019 = 2114 % 2019\u300d\u3002\n        // -> 181710000 \u2261 0 (mod 2019)\n        // -> (\u5408\u540c\u5f0f\u3067\u5272\u308a\u7b97\u306fmod p\u3068\u4e92\u3044\u306b\u7d20\u3067\u306a\u3044\u3068\u4e0d\u80fd)\n        // -> (gcd(2019, 10) = 1)\n        // -> 18171 \u2261 0 (mod 2019)\n        // -> 18171 % 2019 = 0\n        // -> 18171\u306f2019\u306e\u500d\u6570\n        \n        // map: d[]\u306e\u5024\u306e\u983b\u5ea6\n        Map<Integer, Integer> map = new HashMap<Integer, Integer>();\n        for (int i = n; i >= 0; i--) {\n            int key = d[i];\n            if (!map.containsKey(key)) {\n                map.put(key, 1);\n            } else {\n                int val = map.get(key);\n                map.put(key, val + 1);\n            }\n        }\n        // \u540c\u3058\u5024\u306e\u500b\u6570n\u304b\u30892\u3064\u9078\u3076\u30d1\u30bf\u30fc\u30f3\u6570 = nC2\n        for (Integer key : map.keySet()) {\n            int val = map.get(key);\n            ans += (long)val * (val-1) / 2;\n        }\n        System.out.println(ans);\n    }\n}Gicen the following input:\n1817181712114\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "3\n",
        "predict": "END-OF-OUTPUT"
    }
}