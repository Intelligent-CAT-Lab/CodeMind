{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tMyScanner sc = new MyScanner();\n\tScanner sc2 = new Scanner(System.in);\n\tlong start = System.currentTimeMillis();\n\tlong fin = System.currentTimeMillis();\n\tfinal int MOD = 1000000007;\n\tint[] dx = { 1, 0, 0, -1 };\n\tint[] dy = { 0, 1, -1, 0 };\n\n\tvoid run() {\n\t\tString s = sc.next();\n\t\tint N = s.length();\n\t\tRollingHash rh = new RollingHash();\n\t\trh.init(s);\n\t\tint ans = Integer.MAX_VALUE;\n\t\tString res = \"mitomerarenaiWA\";\n\t\tint l = 0;\n\t\tint r = 0;\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tint t = N - (i + 1) * 3;\n\t\t\tif (t > 0 && t % 2 == 0) {\n\t\t\t\tint A = i + 1;\n\t\t\t\tint B = t / 2;\n\t\t\t\tlong a1 = rh.getHash2(0, A - 1);\n\t\t\t\tlong b1 = rh.getHash2(A, A + B - 1);\n\t\t\t\tlong a2 = rh.getHash2(A + B, A + B + A - 1);\n\t\t\t\tlong b2 = rh.getHash2(A + B + A, A + B + A + B - 1);\n\t\t\t\tlong a3 = rh.getHash2(A + B + A + B, N - 1);\n\t\t\t\tif (a1 == a2 && a2 == a3 && b1 == b2) {\n\t\t\t\t\tans = Math.min(ans, i + t);\n\t\t\t\t\tl = A;\n\t\t\t\t\tr = B;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (l != 0 && r != 0) res = \"Love \" + s.substring(0, l) + s.substring(l, l + r) + \"!\";\n\t\tSystem.out.println(res);\n\t}\n\n\tpublic class RollingHash {\n\n\t\tString S;\n\t\tint N, l, r;\n\n\t\tlong B1 = 1007;\n\t\tlong B2 = 1009;\n\t\tlong H1 = 1000000007;\n\t\tlong H2 = 1000000009;\n\n\t\tlong[] Base1, Base2;\n\t\tlong[] Hash1, Hash2;\n\n\t\tvoid init(String s) {\n\t\t\tS = s;\n\t\t\tN = s.length();\n\t\t\tl = 0;\n\t\t\tr = s.length() - 1;\n\t\t\tBase1 = new long[N + 1];\n\t\t\tBase2 = new long[N + 1];\n\t\t\tHash1 = new long[N];\n\t\t\tHash2 = new long[N];\n\n\t\t\tBase1[0] = Base2[0] = 1;\n\t\t\tHash1[0] = Hash2[0] = s.charAt(0);\n\t\t\tfor (int i = 1; i <= N; i++) Base1[i] = (Base1[i - 1] * B1) % H1;\n\t\t\tfor (int i = 1; i <= N; i++) Base2[i] = (Base2[i - 1] * B2) % H2;\n\t\t\tfor (int i = 1; i < N; i++) Hash1[i] = (Hash1[i - 1] * B1 + s.charAt(i)) % H1;\n\t\t\tfor (int i = 1; i < N; i++) Hash2[i] = (Hash2[i - 1] * B2 + s.charAt(i)) % H2;\n\t\t}\n\n\t\t/*\n\t\t * S(this)???T??????????????????(?????\u00ac??????RollingHash)\n\t\t */\n\t\tboolean contain1(String T) {\n\t\t\tint sl = S.length();\n\t\t\tint tl = T.length();\n\t\t\tif (tl > sl) return false;\n\n\t\t\tlong b = 1;\n\t\t\tfor (int i = 0; i < tl; i++) b = (b * B1) % H1;\n\n\t\t\tlong sh = 0;\n\t\t\tlong th = 0;\n\t\t\tfor (int i = 0; i < tl; i++) sh = (sh * B1 + (S.charAt(i))) % H1;\n\t\t\tfor (int i = 0; i < tl; i++) th = (th * B1 + (T.charAt(i))) % H1;\n\n\t\t\tfor (int i = 0; i + tl <= sl; i++) {\n\t\t\t\tif (sh == th) return true;\n\t\t\t\tif (i + tl < sl) sh = sh * B1 - (S.charAt(i)) * b + (S.charAt(i + tl));\n\t\t\t\tsh = (sh + H1) % H1;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tboolean contain2(String T) {\n\t\t\tint sl = N;\n\t\t\tint tl = T.length();\n\t\t\tif (tl > sl) return false;\n\n\t\t\tlong th = 0;\n\t\t\tfor (int i = 0; i < tl; i++) th = (th * B1 + (T.charAt(i))) % H1;\n\n\t\t\tr = tl - 1;\n\t\t\tl = 0;\n\t\t\tfor (; r < N; r++, l++) {\n\t\t\t\tif (getHash1() == th) return true;\n\t\t\t}\n\t\t\tl = 0;\n\t\t\tr = S.length() - 1;\n\t\t\treturn false;\n\t\t}\n\n\t\tlong getHash1() {\n\t\t\tlong res = Hash1[r] - ((l == 0) ? 0 : Hash1[l - 1] * Base1[r - l + 1]);\n\t\t\tif (res < 0) res = (res + ((-res / H1) + 1) * H1) % H1;\n\t\t\treturn res;\n\t\t}\n\n\t\tlong getHash1(int l, int r) {\n\t\t\tlong res = Hash1[r] - ((l == 0) ? 0 : Hash1[l - 1] * Base1[r - l + 1]);\n\t\t\tif (res < 0) res = (res + ((-res / H1) + 1) * H1) % H1;\n\t\t\treturn res;\n\t\t}\n\n\t\tlong getHash2() {\n\t\t\tlong res = Hash2[r] - ((l == 0) ? 0 : Hash2[l - 1] * Base2[r - l + 1]);\n\t\t\tif (res < 0) res = (res + ((-res / H2) + 1) * H2) % H2;\n\t\t\treturn res;\n\t\t}\n\n\t\tlong getHash2(int l, int r) {\n\t\t\tlong res = Hash2[r] - ((l == 0) ? 0 : Hash2[l - 1] * Base2[r - l + 1]);\n\t\t\tif (res < 0) res = (res + ((-res / H2) + 1) * H2) % H2;\n\t\t\treturn res;\n\t\t}\n\n\t\tvoid show() {\n\t\t\tSystem.out.println(\"---------show---------\");\n\t\t\tSystem.out.println(\"String = \" + S.substring(l, r + 1));\n\t\t\tSystem.out.println(\"l = \" + l + \" r = \" + r);\n\t\t\tSystem.out.println(\"Hash1 = \" + getHash1() + \" Hash2 = \" + getHash2());\n\t\t\tSystem.out.println(\"----------------------\");\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n\n\tvoid debug2(char[][] array) {\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tfor (int j = 0; j < array[i].length; j++) {\n\t\t\t\tSystem.out.print(array[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n\tboolean inner(int h, int w, int limH, int limW) {\n\t\treturn 0 <= h && h < limH && 0 <= w && w < limW;\n\t}\n\n\tvoid swap(int[] x, int a, int b) {\n\t\tint tmp = x[a];\n\t\tx[a] = x[b];\n\t\tx[b] = tmp;\n\t}\n\n\t// find minimum i (k <= a[i])\n\tint lower_bound(int a[], int k) {\n\t\tint l = -1;\n\t\tint r = a.length;\n\t\twhile (r - l > 1) {\n\t\t\tint mid = (l + r) / 2;\n\t\t\tif (k <= a[mid])\n\t\t\t\tr = mid;\n\t\t\telse\n\t\t\t\tl = mid;\n\t\t}\n\t\t// r = l + 1\n\t\treturn r;\n\t}\n\n\t// find minimum i (k < a[i])\n\tint upper_bound(int a[], int k) {\n\t\tint l = -1;\n\t\tint r = a.length;\n\t\twhile (r - l > 1) {\n\t\t\tint mid = (l + r) / 2;\n\t\t\tif (k < a[mid])\n\t\t\t\tr = mid;\n\t\t\telse\n\t\t\t\tl = mid;\n\t\t}\n\t\t// r = l + 1\n\t\treturn r;\n\t}\n\n\tlong gcd(long a, long b) {\n\t\treturn a % b == 0 ? b : gcd(b, a % b);\n\t}\n\n\tlong lcm(long a, long b) {\n\t\treturn a * b / gcd(a, b);\n\t}\n\n\tboolean palindrome(String s) {\n\t\tfor (int i = 0; i < s.length() / 2; i++) {\n\t\t\tif (s.charAt(i) != s.charAt(s.length() - 1 - i)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tclass MyScanner {\n\t\tint nextInt() {\n\t\t\ttry {\n\t\t\t\tint c = System.in.read();\n\t\t\t\twhile (c != '-' && (c < '0' || '9' < c))\n\t\t\t\t\tc = System.in.read();\n\t\t\t\tif (c == '-')\n\t\t\t\t\treturn -nextInt();\n\t\t\t\tint res = 0;\n\t\t\t\tdo {\n\t\t\t\t\tres *= 10;\n\t\t\t\t\tres += c - '0';\n\t\t\t\t\tc = System.in.read();\n\t\t\t\t} while ('0' <= c && c <= '9');\n\t\t\t\treturn res;\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tString next() {\n\t\t\ttry {\n\t\t\t\tStringBuilder res = new StringBuilder(\"\");\n\t\t\t\tint c = System.in.read();\n\t\t\t\twhile (Character.isWhitespace(c))\n\t\t\t\t\tc = System.in.read();\n\t\t\t\tdo {\n\t\t\t\t\tres.append((char) c);\n\t\t\t\t} while (!Character.isWhitespace(c = System.in.read()));\n\t\t\t\treturn res.toString();\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] in = new int[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tin[i] = nextInt();\n\t\t\t}\n\t\t\treturn in;\n\t\t}\n\n\t\tint[][] nextInt2dArray(int n, int m) {\n\t\t\tint[][] in = new int[n][m];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tin[i] = nextIntArray(m);\n\t\t\t}\n\t\t\treturn in;\n\t\t}\n\n\t\tdouble[] nextDoubleArray(int n) {\n\t\t\tdouble[] in = new double[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tin[i] = nextDouble();\n\t\t\t}\n\t\t\treturn in;\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] in = new long[n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tin[i] = nextLong();\n\t\t\t}\n\t\t\treturn in;\n\t\t}\n\n\t\tchar[][] nextCharField(int n, int m) {\n\t\t\tchar[][] in = new char[n][m];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tString s = sc.next();\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tin[i][j] = s.charAt(j);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn in;\n\t\t}\n\t}\n}Gicen the following input:\nNicoNicoNi\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "Love Nico!\n"
    }
}