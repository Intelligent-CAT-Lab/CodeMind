some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=6 bci=0
6    	static Scanner sc = new Scanner(System.in);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=10 bci=0
10    		new Main().run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=581)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=4 bci=0
4    public class Main

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=10 bci=7
10    		new Main().run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=581)
Local variables:
main[1] > 
Step completed: "thread=main", Main.run(), line=15 bci=0
15    		String s = sc.nextLine();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=16 bci=7
16    		Parser parser = new Parser(s);

main[1] Method arguments:
Local variables:
s = "?&?|?&?|?&?"
main[1] > 
Step completed: "thread=main", Parser.<clinit>(), line=115 bci=0
115    class Parser {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=16 bci=10
16    		Parser parser = new Parser(s);

main[1] Method arguments:
Local variables:
s = "?&?|?&?|?&?"
main[1] > 
Step completed: "thread=main", Parser.<init>(), line=119 bci=0
119    	public Parser(String s) {

main[1] Method arguments:
s = "?&?|?&?|?&?"
Local variables:
main[1] > 
Step completed: "thread=main", Parser.<init>(), line=120 bci=4
120    		text = s + "$";

main[1] Method arguments:
s = "?&?|?&?|?&?"
Local variables:
main[1] > 
Step completed: "thread=main", Parser.<init>(), line=121 bci=27
121    		cur = 0;

main[1] Method arguments:
s = "?&?|?&?|?&?"
Local variables:
main[1] > 
Step completed: "thread=main", Parser.<init>(), line=122 bci=32
122    	}

main[1] Method arguments:
s = "?&?|?&?|?&?"
Local variables:
main[1] > 
Step completed: "thread=main", Main.run(), line=16 bci=15
16    		Parser parser = new Parser(s);

main[1] Method arguments:
Local variables:
s = "?&?|?&?|?&?"
main[1] > 
Step completed: "thread=main", Main.run(), line=17 bci=16
17    		Node node = parser.getFormula();

main[1] Method arguments:
Local variables:
s = "?&?|?&?|?&?"
parser = instance of Parser(id=594)
main[1] > 
Step completed: "thread=main", Parser.getFormula(), line=161 bci=0
161    		return getOrExpr();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=151 bci=0
151    		Node node = getAndExpr();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=141 bci=0
141    		Node node = getTerm();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=125 bci=0
125    		char c = text.charAt(cur);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=126 bci=12
126    		if(c=='?') {

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=127 bci=18
127    			cur++;

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=28
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=0
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=4
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=35
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=141 bci=4
141    		Node node = getTerm();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=142 bci=5
142    		while(text.charAt(cur)=='&') {

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=597)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=143 bci=21
143    			cur++;

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=597)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=144 bci=31
144    			Node r = getTerm();

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=597)
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=125 bci=0
125    		char c = text.charAt(cur);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=126 bci=12
126    		if(c=='?') {

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=127 bci=18
127    			cur++;

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=28
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=0
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=4
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=35
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=144 bci=35
144    			Node r = getTerm();

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=597)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=145 bci=36
145    			node = new AndNode(node, r);

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=597)
r = instance of VarNode(id=598)
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=64 bci=0
64    	{

main[1] Method arguments:
l = instance of VarNode(id=597)
r = instance of VarNode(id=598)
Local variables:
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=65 bci=4
65    		left = l;

main[1] Method arguments:
l = instance of VarNode(id=597)
r = instance of VarNode(id=598)
Local variables:
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=66 bci=9
66    		right = r;

main[1] Method arguments:
l = instance of VarNode(id=597)
r = instance of VarNode(id=598)
Local variables:
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=67 bci=14
67    	}

main[1] Method arguments:
l = instance of VarNode(id=597)
r = instance of VarNode(id=598)
Local variables:
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=145 bci=45
145    			node = new AndNode(node, r);

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=597)
r = instance of VarNode(id=598)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=146 bci=46
146    		}

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=600)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=142 bci=5
142    		while(text.charAt(cur)=='&') {

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=600)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=147 bci=49
147    		return node;

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=600)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=151 bci=4
151    		Node node = getAndExpr();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=152 bci=5
152    		while(text.charAt(cur)=='|') {

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=600)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=153 bci=21
153    			cur++;

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=600)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=154 bci=31
154    			Node r = getAndExpr();

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=600)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=141 bci=0
141    		Node node = getTerm();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=125 bci=0
125    		char c = text.charAt(cur);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=126 bci=12
126    		if(c=='?') {

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=127 bci=18
127    			cur++;

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=28
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=0
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=4
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=35
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=141 bci=4
141    		Node node = getTerm();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=142 bci=5
142    		while(text.charAt(cur)=='&') {

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=601)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=143 bci=21
143    			cur++;

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=601)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=144 bci=31
144    			Node r = getTerm();

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=601)
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=125 bci=0
125    		char c = text.charAt(cur);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=126 bci=12
126    		if(c=='?') {

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=127 bci=18
127    			cur++;

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=28
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=0
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=4
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=35
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=144 bci=35
144    			Node r = getTerm();

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=601)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=145 bci=36
145    			node = new AndNode(node, r);

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=601)
r = instance of VarNode(id=602)
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=64 bci=0
64    	{

main[1] Method arguments:
l = instance of VarNode(id=601)
r = instance of VarNode(id=602)
Local variables:
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=65 bci=4
65    		left = l;

main[1] Method arguments:
l = instance of VarNode(id=601)
r = instance of VarNode(id=602)
Local variables:
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=66 bci=9
66    		right = r;

main[1] Method arguments:
l = instance of VarNode(id=601)
r = instance of VarNode(id=602)
Local variables:
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=67 bci=14
67    	}

main[1] Method arguments:
l = instance of VarNode(id=601)
r = instance of VarNode(id=602)
Local variables:
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=145 bci=45
145    			node = new AndNode(node, r);

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=601)
r = instance of VarNode(id=602)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=146 bci=46
146    		}

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=603)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=142 bci=5
142    		while(text.charAt(cur)=='&') {

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=603)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=147 bci=49
147    		return node;

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=603)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=154 bci=35
154    			Node r = getAndExpr();

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=600)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=155 bci=36
155    			node = new OrNode(node, r);

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=600)
r = instance of AndNode(id=603)
main[1] > 
Step completed: "thread=main", OrNode.<init>(), line=92 bci=0
92    	{

main[1] Method arguments:
l = instance of AndNode(id=600)
r = instance of AndNode(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.<init>(), line=93 bci=4
93    		left = l;

main[1] Method arguments:
l = instance of AndNode(id=600)
r = instance of AndNode(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", OrNode.<init>(), line=94 bci=9
94    		right = r;

main[1] Method arguments:
l = instance of AndNode(id=600)
r = instance of AndNode(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", OrNode.<init>(), line=95 bci=14
95    	}

main[1] Method arguments:
l = instance of AndNode(id=600)
r = instance of AndNode(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=155 bci=45
155    			node = new OrNode(node, r);

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=600)
r = instance of AndNode(id=603)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=156 bci=46
156    		}

main[1] Method arguments:
Local variables:
node = instance of OrNode(id=605)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=152 bci=5
152    		while(text.charAt(cur)=='|') {

main[1] Method arguments:
Local variables:
node = instance of OrNode(id=605)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=153 bci=21
153    			cur++;

main[1] Method arguments:
Local variables:
node = instance of OrNode(id=605)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=154 bci=31
154    			Node r = getAndExpr();

main[1] Method arguments:
Local variables:
node = instance of OrNode(id=605)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=141 bci=0
141    		Node node = getTerm();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=125 bci=0
125    		char c = text.charAt(cur);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=126 bci=12
126    		if(c=='?') {

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=127 bci=18
127    			cur++;

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=28
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=0
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=4
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=35
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=141 bci=4
141    		Node node = getTerm();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=142 bci=5
142    		while(text.charAt(cur)=='&') {

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=606)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=143 bci=21
143    			cur++;

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=606)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=144 bci=31
144    			Node r = getTerm();

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=606)
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=125 bci=0
125    		char c = text.charAt(cur);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=126 bci=12
126    		if(c=='?') {

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=127 bci=18
127    			cur++;

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=28
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=0
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.<init>(), line=39 bci=4
39    class VarNode extends Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Parser.getTerm(), line=128 bci=35
128    			return new VarNode();

main[1] Method arguments:
Local variables:
c = ?
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=144 bci=35
144    			Node r = getTerm();

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=606)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=145 bci=36
145    			node = new AndNode(node, r);

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=606)
r = instance of VarNode(id=607)
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=64 bci=0
64    	{

main[1] Method arguments:
l = instance of VarNode(id=606)
r = instance of VarNode(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=65 bci=4
65    		left = l;

main[1] Method arguments:
l = instance of VarNode(id=606)
r = instance of VarNode(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=66 bci=9
66    		right = r;

main[1] Method arguments:
l = instance of VarNode(id=606)
r = instance of VarNode(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", AndNode.<init>(), line=67 bci=14
67    	}

main[1] Method arguments:
l = instance of VarNode(id=606)
r = instance of VarNode(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=145 bci=45
145    			node = new AndNode(node, r);

main[1] Method arguments:
Local variables:
node = instance of VarNode(id=606)
r = instance of VarNode(id=607)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=146 bci=46
146    		}

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=608)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=142 bci=5
142    		while(text.charAt(cur)=='&') {

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=608)
main[1] > 
Step completed: "thread=main", Parser.getAndExpr(), line=147 bci=49
147    		return node;

main[1] Method arguments:
Local variables:
node = instance of AndNode(id=608)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=154 bci=35
154    			Node r = getAndExpr();

main[1] Method arguments:
Local variables:
node = instance of OrNode(id=605)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=155 bci=36
155    			node = new OrNode(node, r);

main[1] Method arguments:
Local variables:
node = instance of OrNode(id=605)
r = instance of AndNode(id=608)
main[1] > 
Step completed: "thread=main", OrNode.<init>(), line=92 bci=0
92    	{

main[1] Method arguments:
l = instance of OrNode(id=605)
r = instance of AndNode(id=608)
Local variables:
main[1] > 
Step completed: "thread=main", Node.<init>(), line=21 bci=0
21    abstract class Node {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=22 bci=4
22    	private int cost0 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.<init>(), line=23 bci=9
23    	private int cost1 = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.<init>(), line=93 bci=4
93    		left = l;

main[1] Method arguments:
l = instance of OrNode(id=605)
r = instance of AndNode(id=608)
Local variables:
main[1] > 
Step completed: "thread=main", OrNode.<init>(), line=94 bci=9
94    		right = r;

main[1] Method arguments:
l = instance of OrNode(id=605)
r = instance of AndNode(id=608)
Local variables:
main[1] > 
Step completed: "thread=main", OrNode.<init>(), line=95 bci=14
95    	}

main[1] Method arguments:
l = instance of OrNode(id=605)
r = instance of AndNode(id=608)
Local variables:
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=155 bci=45
155    			node = new OrNode(node, r);

main[1] Method arguments:
Local variables:
node = instance of OrNode(id=605)
r = instance of AndNode(id=608)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=156 bci=46
156    		}

main[1] Method arguments:
Local variables:
node = instance of OrNode(id=609)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=152 bci=5
152    		while(text.charAt(cur)=='|') {

main[1] Method arguments:
Local variables:
node = instance of OrNode(id=609)
main[1] > 
Step completed: "thread=main", Parser.getOrExpr(), line=157 bci=49
157    		return node;

main[1] Method arguments:
Local variables:
node = instance of OrNode(id=609)
main[1] > 
Step completed: "thread=main", Parser.getFormula(), line=161 bci=4
161    		return getOrExpr();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=17 bci=20
17    		Node node = parser.getFormula();

main[1] Method arguments:
Local variables:
s = "?&?|?&?|?&?"
parser = instance of Parser(id=594)
main[1] > 
Step completed: "thread=main", Main.run(), line=18 bci=21
18    		System.out.println(node.get0() + " " + node.get1());

main[1] Method arguments:
Local variables:
s = "?&?|?&?|?&?"
parser = instance of Parser(id=594)
node = instance of OrNode(id=609)
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc0(), line=100 bci=0
100    		return left.get0() + right.get0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc0(), line=100 bci=0
100    		return left.get0() + right.get0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=0
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc0(), line=44 bci=0
44    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=7
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc1(), line=50 bci=0
50    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=14
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc0(), line=44 bci=0
44    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=21
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc0(), line=100 bci=7
100    		return left.get0() + right.get0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=0
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc0(), line=44 bci=0
44    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=7
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc1(), line=50 bci=0
50    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=14
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc0(), line=44 bci=0
44    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=21
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc0(), line=100 bci=14
100    		return left.get0() + right.get0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc0(), line=100 bci=7
100    		return left.get0() + right.get0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=0
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc0(), line=44 bci=0
44    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=7
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc1(), line=50 bci=0
50    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=14
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=12
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc0(), line=44 bci=0
44    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc0(), line=72 bci=21
72    		return Math.min(left.get0(), left.get1() + right.get0());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc0(), line=100 bci=14
100    		return left.get0() + right.get0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=27 bci=17
27    		return cost0 = calc0();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=18 bci=35
18    		System.out.println(node.get0() + " " + node.get1());

main[1] Method arguments:
Local variables:
s = "?&?|?&?|?&?"
parser = instance of Parser(id=594)
node = instance of OrNode(id=609)
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc1(), line=106 bci=0
106    		return Math.min(left.get1(), left.get0() + right.get1());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc1(), line=106 bci=0
106    		return Math.min(left.get1(), left.get0() + right.get1());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc1(), line=78 bci=0
78    		return left.get1() + right.get1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc1(), line=78 bci=7
78    		return left.get1() + right.get1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc1(), line=50 bci=0
50    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc1(), line=78 bci=14
78    		return left.get1() + right.get1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc1(), line=106 bci=7
106    		return Math.min(left.get1(), left.get0() + right.get1());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc1(), line=106 bci=14
106    		return Math.min(left.get1(), left.get0() + right.get1());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc1(), line=78 bci=0
78    		return left.get1() + right.get1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc1(), line=78 bci=7
78    		return left.get1() + right.get1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc1(), line=50 bci=0
50    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc1(), line=78 bci=14
78    		return left.get1() + right.get1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc1(), line=106 bci=21
106    		return Math.min(left.get1(), left.get0() + right.get1());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc1(), line=106 bci=7
106    		return Math.min(left.get1(), left.get0() + right.get1());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get0(), line=26 bci=0
26    		if(cost0>0) return cost0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc1(), line=106 bci=14
106    		return Math.min(left.get1(), left.get0() + right.get1());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc1(), line=78 bci=0
78    		return left.get1() + right.get1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc1(), line=78 bci=7
78    		return left.get1() + right.get1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=31 bci=0
31    		if(cost1>0) return cost1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=12
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", VarNode.calc1(), line=50 bci=0
50    		return 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", AndNode.calc1(), line=78 bci=14
78    		return left.get1() + right.get1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", OrNode.calc1(), line=106 bci=21
106    		return Math.min(left.get1(), left.get0() + right.get1());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Node.get1(), line=32 bci=17
32    		return cost1 = calc1();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=18 bci=47
18    		System.out.println(node.get0() + " " + node.get1());

main[1] Method arguments:
Local variables:
s = "?&?|?&?|?&?"
parser = instance of Parser(id=594)
node = instance of OrNode(id=609)
main[1] > 
Step completed: "thread=main", Main.run(), line=19 bci=56
19    	}

main[1] Method arguments:
Local variables:
s = "?&?|?&?|?&?"
parser = instance of Parser(id=594)
node = instance of OrNode(id=609)
main[1] > 
Step completed: "thread=main", Main.main(), line=11 bci=10
11    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=581)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
