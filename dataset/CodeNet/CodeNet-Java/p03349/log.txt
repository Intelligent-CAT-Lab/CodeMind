some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=19 bci=0
19            InputStream inputStream = System.in;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=20 bci=4
20            OutputStream outputStream = System.out;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
main[1] > 
Step completed: "thread=main", Main.main(), line=21 bci=8
21            InputReader in = new InputReader(inputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
main[1] > 
Step completed: "thread=main", Main$InputReader.<init>(), line=75 bci=0
75            public InputReader(InputStream stream) {

main[1] Method arguments:
stream = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.<init>(), line=76 bci=4
76                reader = new BufferedReader(new InputStreamReader(stream), 32768);

main[1] Method arguments:
stream = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.<init>(), line=77 bci=25
77                tokenizer = null;

main[1] Method arguments:
stream = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.<init>(), line=78 bci=30
78            }

main[1] Method arguments:
stream = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=21 bci=16
21            InputReader in = new InputReader(inputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
main[1] > 
Step completed: "thread=main", Main.main(), line=22 bci=17
22            PrintWriter out = new PrintWriter(outputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=451)
main[1] > 
Step completed: "thread=main", Main.main(), line=23 bci=27
23            ESequenceGrowingHard solver = new ESequenceGrowingHard();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.<init>(), line=28 bci=0
28        static class ESequenceGrowingHard {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.<init>(), line=32 bci=4
32            private long[][] numberOfSequencesOfSizeIwithElementBiggerThenJ = new long[301][301];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.<init>(), line=33 bci=18
33            private long[][] sumValue = new long[301][301];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.<init>(), line=34 bci=32
34            private long[][] nChK = new long[301][301];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=23 bci=34
23            ESequenceGrowingHard solver = new ESequenceGrowingHard();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
main[1] > 
Step completed: "thread=main", Main.main(), line=24 bci=36
24            solver.solve(1, in, out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
solver = instance of Main$ESequenceGrowingHard(id=455)
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=37 bci=0
37                n = in.NextInt();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.NextInt(), line=92 bci=0
92                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.next(), line=81 bci=0
81                while (tokenizer == null || !tokenizer.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.next(), line=83 bci=17
83                        tokenizer = new StringTokenizer(reader.readLine(), " \t\n\r\f,");

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.next(), line=86 bci=37
86                    }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.next(), line=81 bci=0
81                while (tokenizer == null || !tokenizer.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.next(), line=88 bci=50
88                return tokenizer.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.NextInt(), line=92 bci=4
92                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=37 bci=5
37                n = in.NextInt();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=38 bci=8
38                k = in.NextInt();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.NextInt(), line=92 bci=0
92                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.next(), line=81 bci=0
81                while (tokenizer == null || !tokenizer.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.next(), line=88 bci=50
88                return tokenizer.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.NextInt(), line=92 bci=4
92                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=38 bci=13
38                k = in.NextInt();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=39 bci=16
39                MOD = in.NextLong();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.NextLong(), line=96 bci=0
96                return Long.parseLong(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.next(), line=81 bci=0
81                while (tokenizer == null || !tokenizer.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.next(), line=88 bci=50
88                return tokenizer.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.NextLong(), line=96 bci=4
96                return Long.parseLong(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=39 bci=21
39                MOD = in.NextLong();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=40 bci=24
40                nChK = MathExtentions.preComputeNChooseK_MOD_Mod(n, MOD);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=103 bci=0
103                long[][] res = new long[maxn + 1][];

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=104 bci=7
104                for (int i = 0; i <= maxn; i++) {

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=105 bci=16
105                    res[i] = new long[i + 1];

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 0
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=106 bci=26
106                    res[i][0] = 1;

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 0
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=107 bci=33
107                    res[i][i] = 1;

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 0
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=104 bci=41
104                for (int i = 0; i <= maxn; i++) {

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 0
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=105 bci=16
105                    res[i] = new long[i + 1];

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 1
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=106 bci=26
106                    res[i][0] = 1;

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 1
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=107 bci=33
107                    res[i][i] = 1;

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 1
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=104 bci=41
104                for (int i = 0; i <= maxn; i++) {

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 1
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=105 bci=16
105                    res[i] = new long[i + 1];

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 2
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=106 bci=26
106                    res[i][0] = 1;

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 2
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=107 bci=33
107                    res[i][i] = 1;

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 2
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=104 bci=41
104                for (int i = 0; i <= maxn; i++) {

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
i = 2
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=109 bci=47
109                for (int i = 2; i < maxn; i++) {

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
main[1] > 
Step completed: "thread=main", Main$MathExtentions.preComputeNChooseK_MOD_Mod(), line=116 bci=126
116                return res;

main[1] Method arguments:
maxn = 2
MOD = 100
Local variables:
res = instance of long[][3] (id=457)
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=40 bci=36
40                nChK = MathExtentions.preComputeNChooseK_MOD_Mod(n, MOD);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=41 bci=39
41                for (int j = k; j >= 0; j--) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=42 bci=50
42                    numberOfSequencesOfSizeIwithElementBiggerThenJ[0][j] = 1 % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 2
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=43 bci=65
43                    numberOfSequencesOfSizeIwithElementBiggerThenJ[1][j] = (k - j) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 2
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=41 bci=87
41                for (int j = k; j >= 0; j--) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 2
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=42 bci=50
42                    numberOfSequencesOfSizeIwithElementBiggerThenJ[0][j] = 1 % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=43 bci=65
43                    numberOfSequencesOfSizeIwithElementBiggerThenJ[1][j] = (k - j) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=41 bci=87
41                for (int j = k; j >= 0; j--) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=42 bci=50
42                    numberOfSequencesOfSizeIwithElementBiggerThenJ[0][j] = 1 % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=43 bci=65
43                    numberOfSequencesOfSizeIwithElementBiggerThenJ[1][j] = (k - j) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=41 bci=87
41                for (int j = k; j >= 0; j--) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=45 bci=93
45                sumValue[0][k] = 1;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=46 bci=105
46                sumValue[1][k] = 0;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=48 bci=117
48                for (int j = k - 1; j >= 0; j--) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=49 bci=130
49                    sumValue[0][j] = (sumValue[0][j + 1] + numberOfSequencesOfSizeIwithElementBiggerThenJ[0][j]) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=50 bci=165
50                    sumValue[1][j] = (sumValue[1][j + 1] + numberOfSequencesOfSizeIwithElementBiggerThenJ[1][j]) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=48 bci=200
48                for (int j = k - 1; j >= 0; j--) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=49 bci=130
49                    sumValue[0][j] = (sumValue[0][j + 1] + numberOfSequencesOfSizeIwithElementBiggerThenJ[0][j]) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=50 bci=165
50                    sumValue[1][j] = (sumValue[1][j + 1] + numberOfSequencesOfSizeIwithElementBiggerThenJ[1][j]) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=48 bci=200
48                for (int j = k - 1; j >= 0; j--) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
j = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=53 bci=206
53                for (int i = 2; i <= n; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=54 bci=218
54                    for (int j = k - 1; j >= 0; j--) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=55 bci=231
55                        long res = 0;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=56 bci=234
56                        for (int sizeToTheLeft = 0; sizeToTheLeft < i; sizeToTheLeft++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=57 bci=244
57                            long optionLeft = sumValue[sizeToTheLeft][j + 1];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 0
sizeToTheLeft = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=58 bci=258
58                            long optionRight = numberOfSequencesOfSizeIwithElementBiggerThenJ[i - 1 - sizeToTheLeft][j];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 0
sizeToTheLeft = 0
optionLeft = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=59 bci=275
59                            long optionToAddToEachSide = nChK[i - 1][sizeToTheLeft];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 0
sizeToTheLeft = 0
optionLeft = 1
optionRight = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=60 bci=289
60                            res = (res + ((((optionLeft * optionRight) % MOD) * optionToAddToEachSide) % MOD)) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 0
sizeToTheLeft = 0
optionLeft = 1
optionRight = 1
optionToAddToEachSide = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=56 bci=317
56                        for (int sizeToTheLeft = 0; sizeToTheLeft < i; sizeToTheLeft++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 1
sizeToTheLeft = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=57 bci=244
57                            long optionLeft = sumValue[sizeToTheLeft][j + 1];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 1
sizeToTheLeft = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=58 bci=258
58                            long optionRight = numberOfSequencesOfSizeIwithElementBiggerThenJ[i - 1 - sizeToTheLeft][j];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 1
sizeToTheLeft = 1
optionLeft = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=59 bci=275
59                            long optionToAddToEachSide = nChK[i - 1][sizeToTheLeft];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 1
sizeToTheLeft = 1
optionLeft = 0
optionRight = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=60 bci=289
60                            res = (res + ((((optionLeft * optionRight) % MOD) * optionToAddToEachSide) % MOD)) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 1
sizeToTheLeft = 1
optionLeft = 0
optionRight = 1
optionToAddToEachSide = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=56 bci=317
56                        for (int sizeToTheLeft = 0; sizeToTheLeft < i; sizeToTheLeft++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 1
sizeToTheLeft = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=62 bci=323
62                        numberOfSequencesOfSizeIwithElementBiggerThenJ[i][j] = res;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=63 bci=335
63                        sumValue[i][j] = (sumValue[i][j + 1] + res) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
res = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=54 bci=365
54                    for (int j = k - 1; j >= 0; j--) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=55 bci=231
55                        long res = 0;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=56 bci=234
56                        for (int sizeToTheLeft = 0; sizeToTheLeft < i; sizeToTheLeft++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=57 bci=244
57                            long optionLeft = sumValue[sizeToTheLeft][j + 1];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 0
sizeToTheLeft = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=58 bci=258
58                            long optionRight = numberOfSequencesOfSizeIwithElementBiggerThenJ[i - 1 - sizeToTheLeft][j];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 0
sizeToTheLeft = 0
optionLeft = 2
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=59 bci=275
59                            long optionToAddToEachSide = nChK[i - 1][sizeToTheLeft];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 0
sizeToTheLeft = 0
optionLeft = 2
optionRight = 2
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=60 bci=289
60                            res = (res + ((((optionLeft * optionRight) % MOD) * optionToAddToEachSide) % MOD)) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 0
sizeToTheLeft = 0
optionLeft = 2
optionRight = 2
optionToAddToEachSide = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=56 bci=317
56                        for (int sizeToTheLeft = 0; sizeToTheLeft < i; sizeToTheLeft++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 4
sizeToTheLeft = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=57 bci=244
57                            long optionLeft = sumValue[sizeToTheLeft][j + 1];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 4
sizeToTheLeft = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=58 bci=258
58                            long optionRight = numberOfSequencesOfSizeIwithElementBiggerThenJ[i - 1 - sizeToTheLeft][j];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 4
sizeToTheLeft = 1
optionLeft = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=59 bci=275
59                            long optionToAddToEachSide = nChK[i - 1][sizeToTheLeft];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 4
sizeToTheLeft = 1
optionLeft = 1
optionRight = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=60 bci=289
60                            res = (res + ((((optionLeft * optionRight) % MOD) * optionToAddToEachSide) % MOD)) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 4
sizeToTheLeft = 1
optionLeft = 1
optionRight = 1
optionToAddToEachSide = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=56 bci=317
56                        for (int sizeToTheLeft = 0; sizeToTheLeft < i; sizeToTheLeft++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 5
sizeToTheLeft = 1
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=62 bci=323
62                        numberOfSequencesOfSizeIwithElementBiggerThenJ[i][j] = res;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 5
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=63 bci=335
63                        sumValue[i][j] = (sumValue[i][j + 1] + res) % MOD;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
res = 5
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=54 bci=365
54                    for (int j = k - 1; j >= 0; j--) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=53 bci=371
53                for (int i = 2; i <= n; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=66 bci=377
66                out.println(numberOfSequencesOfSizeIwithElementBiggerThenJ[n][0]);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$ESequenceGrowingHard.solve(), line=67 bci=392
67            }

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=25 bci=45
25            out.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
solver = instance of Main$ESequenceGrowingHard(id=455)
main[1] > 
Step completed: "thread=main", Main.main(), line=26 bci=50
26        }

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=451)
out = instance of java.io.PrintWriter(id=453)
solver = instance of Main$ESequenceGrowingHard(id=455)
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
