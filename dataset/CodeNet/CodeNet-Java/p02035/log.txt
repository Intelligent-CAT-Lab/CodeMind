some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=27 bci=0
27            InputStream inputStream = System.in;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=28 bci=4
28            OutputStream outputStream = System.out;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
main[1] > 
Step completed: "thread=main", Main.main(), line=29 bci=8
29            LightScanner in = new LightScanner(inputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
main[1] > 
Step completed: "thread=main", Main$LightScanner.<init>(), line=350 bci=0
350            public LightScanner(InputStream in) {

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightScanner.<init>(), line=347 bci=4
347            private BufferedReader reader = null;

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightScanner.<init>(), line=348 bci=9
348            private StringTokenizer tokenizer = null;

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightScanner.<init>(), line=351 bci=14
351                reader = new BufferedReader(new InputStreamReader(in));

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightScanner.<init>(), line=352 bci=33
352            }

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=29 bci=16
29            LightScanner in = new LightScanner(inputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
main[1] > 
Step completed: "thread=main", Main.main(), line=30 bci=17
30            LightWriter out = new LightWriter(outputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$LightScanner(id=451)
main[1] > 
Step completed: "thread=main", Main$LightWriter.<init>(), line=90 bci=0
90                this(new BufferedWriter(new OutputStreamWriter(out, Charset.defaultCharset())));

main[1] Method arguments:
out = instance of java.io.PrintStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.<init>(), line=85 bci=0
85            public LightWriter(Writer out) {

main[1] Method arguments:
out = instance of java.io.BufferedWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.<init>(), line=82 bci=4
82            private boolean autoflush = false;

main[1] Method arguments:
out = instance of java.io.BufferedWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.<init>(), line=83 bci=9
83            private boolean breaked = true;

main[1] Method arguments:
out = instance of java.io.BufferedWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.<init>(), line=86 bci=14
86                this.out = out;

main[1] Method arguments:
out = instance of java.io.BufferedWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.<init>(), line=87 bci=19
87            }

main[1] Method arguments:
out = instance of java.io.BufferedWriter(id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.<init>(), line=91 bci=22
91            }

main[1] Method arguments:
out = instance of java.io.PrintStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=30 bci=25
30            LightWriter out = new LightWriter(outputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$LightScanner(id=451)
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=27
31            FRedBlackSoulGem solver = new FRedBlackSoulGem();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.<init>(), line=36 bci=0
36        static class FRedBlackSoulGem {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=34
31            FRedBlackSoulGem solver = new FRedBlackSoulGem();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
main[1] > 
Step completed: "thread=main", Main.main(), line=32 bci=36
32            solver.solve(1, in, out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
solver = instance of Main$FRedBlackSoulGem(id=456)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=38 bci=0
38                Debug.enable("src");

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Debug.enable(), line=378 bci=0
378                enabled = true;

main[1] Method arguments:
s = "src"
Local variables:
main[1] > 
Step completed: "thread=main", Main$Debug.enable(), line=379 bci=4
379                src = s;

main[1] Method arguments:
s = "src"
Local variables:
main[1] > 
Step completed: "thread=main", Main$Debug.enable(), line=380 bci=8
380                if (debugRegex == null) {

main[1] Method arguments:
s = "src"
Local variables:
main[1] > 
Step completed: "thread=main", Main$Debug.enable(), line=381 bci=14
381                    debugRegex = Pattern.compile(DEBUG_CALL_PATTERN);

main[1] Method arguments:
s = "src"
Local variables:
main[1] > 
Step completed: "thread=main", Main$Debug.enable(), line=383 bci=22
383            }

main[1] Method arguments:
s = "src"
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=39 bci=5
39                int n = in.ints(), m = in.ints();

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightScanner.ints(), line=366 bci=0
366                return Integer.parseInt(string());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightScanner.string(), line=355 bci=0
355                if (tokenizer == null || !tokenizer.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightScanner.string(), line=357 bci=17
357                        tokenizer = new StringTokenizer(reader.readLine());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightScanner.string(), line=360 bci=35
360                    }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightScanner.string(), line=362 bci=48
362                return tokenizer.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightScanner.ints(), line=366 bci=4
366                return Integer.parseInt(string());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=39 bci=9
39                int n = in.ints(), m = in.ints();

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightScanner.ints(), line=366 bci=0
366                return Integer.parseInt(string());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightScanner.string(), line=355 bci=0
355                if (tokenizer == null || !tokenizer.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightScanner.string(), line=362 bci=48
362                return tokenizer.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightScanner.ints(), line=366 bci=4
366                return Integer.parseInt(string());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=39 bci=15
39                int n = in.ints(), m = in.ints();

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=40 bci=17
40                ModMath mod = new ModMath(m);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
main[1] > 
Step completed: "thread=main", Main$ModMath.<init>(), line=231 bci=0
231            public ModMath(long mod) {

main[1] Method arguments:
mod = 310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.<init>(), line=232 bci=4
232                this.mod = mod;

main[1] Method arguments:
mod = 310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.<init>(), line=233 bci=9
233            }

main[1] Method arguments:
mod = 310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=40 bci=27
40                ModMath mod = new ModMath(m);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=41 bci=29
41                long ans = 0;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=42 bci=32
42                Exponentiation exp2 = mod.getExponentiation(2, n);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.getExponentiation(), line=287 bci=0
287                return new Exponentiation(this, base, max);

main[1] Method arguments:
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=154 bci=0
154            public Exponentiation(ModMath mod, long base, int max) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=155 bci=4
155                this.mod = mod;

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=156 bci=9
156                this.base = base;

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=157 bci=14
157                this.max = max;

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=158 bci=20
158                this.natural = new long[max];

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=159 bci=28
159                this.reverse = new long[max];

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=160 bci=36
160                natural[0] = 1;

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=161 bci=43
161                for (int i = 1; i < max; i++) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=162 bci=53
162                    natural[i] = mod.mod(natural[i - 1] * base);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=162 bci=74
162                    natural[i] = mod.mod(natural[i - 1] * base);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=161 bci=75
161                for (int i = 1; i < max; i++) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=162 bci=53
162                    natural[i] = mod.mod(natural[i - 1] * base);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=162 bci=74
162                    natural[i] = mod.mod(natural[i - 1] * base);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=161 bci=75
161                for (int i = 1; i < max; i++) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=164 bci=81
164                reverse[max - 1] = mod.inv(natural[max - 1]);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=0
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = 4
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 4
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = -310779401
q = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = -310779401
q = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = 4
q = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 4
q = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = -1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=298 bci=6
298                    return new Vec3l(p, 1, p);

main[1] Method arguments:
p = -1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=298 bci=16
298                    return new Vec3l(p, 1, p);

main[1] Method arguments:
p = -1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 4
q = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = 4
q = -1
Local variables:
vals = instance of Main$Vec3l(id=477)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = 4
q = -1
Local variables:
vals = instance of Main$Vec3l(id=477)
a = 1
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 4
q = -1
Local variables:
vals = instance of Main$Vec3l(id=477)
a = 1
b = 3
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 1
y = 3
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 1
y = 3
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 1
y = 3
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 1
y = 3
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 1
y = 3
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 4
q = -1
Local variables:
vals = instance of Main$Vec3l(id=477)
a = 1
b = 3
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = -310779401
q = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = -310779401
q = 4
Local variables:
vals = instance of Main$Vec3l(id=478)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = -310779401
q = 4
Local variables:
vals = instance of Main$Vec3l(id=478)
a = 3
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = -310779401
q = 4
Local variables:
vals = instance of Main$Vec3l(id=478)
a = 3
b = 233084551
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 3
y = 233084551
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 3
y = 233084551
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 3
y = 233084551
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 3
y = 233084551
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 3
y = 233084551
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = -310779401
q = 4
Local variables:
vals = instance of Main$Vec3l(id=478)
a = 3
b = 233084551
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 4
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = 4
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=479)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = 4
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=479)
a = 233084551
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 4
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=479)
a = 233084551
b = 3
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 233084551
y = 3
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 233084551
y = 3
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 233084551
y = 3
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 233084551
y = 3
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 233084551
y = 3
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 4
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=479)
a = 233084551
b = 3
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=10
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 233084551
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 233084551
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=16
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=164 bci=102
164                reverse[max - 1] = mod.inv(natural[max - 1]);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=165 bci=103
165                for (int i = max - 1; i > 0; i--) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=166 bci=114
166                    reverse[i - 1] = mod.mod(reverse[i] * base);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 466169102
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 155389701
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=166 bci=135
166                    reverse[i - 1] = mod.mod(reverse[i] * base);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=165 bci=136
165                for (int i = max - 1; i > 0; i--) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=166 bci=114
166                    reverse[i - 1] = mod.mod(reverse[i] * base);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 310779402
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=166 bci=135
166                    reverse[i - 1] = mod.mod(reverse[i] * base);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=165 bci=136
165                for (int i = max - 1; i > 0; i--) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Exponentiation.<init>(), line=168 bci=142
168            }

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.getExponentiation(), line=287 bci=10
287                return new Exponentiation(this, base, max);

main[1] Method arguments:
base = 2
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=42 bci=42
42                Exponentiation exp2 = mod.getExponentiation(2, n);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=43 bci=44
43                for (int r = 1; r < n; r++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=44 bci=54
44                    int b = n - r;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=46 bci=61
46                    long t = mod.ncr(n, r);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=274 bci=0
274                long div = 1;

main[1] Method arguments:
n = 3
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=275 bci=2
275                for (int i = 2; i <= r; i++) {

main[1] Method arguments:
n = 3
r = 1
Local variables:
div = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=279 bci=30
279                return mod(npr(n, r) * inv(div));

main[1] Method arguments:
n = 3
r = 1
Local variables:
div = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=262 bci=0
262                if (n < r) {

main[1] Method arguments:
n = 3
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=265 bci=7
265                long ans = 1;

main[1] Method arguments:
n = 3
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=266 bci=9
266                for (int i = 0; i < r; i++) {

main[1] Method arguments:
n = 3
r = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=267 bci=18
267                    ans *= (n - i);

main[1] Method arguments:
n = 3
r = 1
Local variables:
ans = 1
i = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=268 bci=26
268                    ans %= mod;

main[1] Method arguments:
n = 3
r = 1
Local variables:
ans = 3
i = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=266 bci=33
266                for (int i = 0; i < r; i++) {

main[1] Method arguments:
n = 3
r = 1
Local variables:
ans = 3
i = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=270 bci=39
270                return ans;

main[1] Method arguments:
n = 3
r = 1
Local variables:
ans = 3
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=279 bci=37
279                return mod(npr(n, r) * inv(div));

main[1] Method arguments:
n = 3
r = 1
Local variables:
div = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=0
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = 1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=298 bci=6
298                    return new Vec3l(p, 1, p);

main[1] Method arguments:
p = 1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=298 bci=16
298                    return new Vec3l(p, 1, p);

main[1] Method arguments:
p = 1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
vals = instance of Main$Vec3l(id=481)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
vals = instance of Main$Vec3l(id=481)
a = 1
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
vals = instance of Main$Vec3l(id=481)
a = 1
b = 310779402
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 1
y = 310779402
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 1
y = 310779402
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 1
y = 310779402
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 1
y = 310779402
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 1
y = 310779402
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
vals = instance of Main$Vec3l(id=481)
a = 1
b = 310779402
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=482)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=482)
a = 310779402
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=482)
a = 310779402
b = 1
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 310779402
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 310779402
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 310779402
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 310779402
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 310779402
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=482)
a = 310779402
b = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=10
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 310779402
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=16
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=279 bci=42
279                return mod(npr(n, r) * inv(div));

main[1] Method arguments:
n = 3
r = 1
Local variables:
div = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=279 bci=46
279                return mod(npr(n, r) * inv(div));

main[1] Method arguments:
n = 3
r = 1
Local variables:
div = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=46 bci=70
46                    long t = mod.ncr(n, r);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=47 bci=72
47                    t *= mod.pow(2, r * (r - 1L) / 2);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 3
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=252 bci=24
252                    return 1;

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=47 bci=95
47                    t *= mod.pow(2, r * (r - 1L) / 2);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 3
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=48 bci=98
48                    t %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 3
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=50 bci=106
50                    t *= mod.pow(2, b * (b - 1L) / 2);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 3
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=253 bci=26
253                } else if (y % 2 == 0) {

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=59
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=252 bci=24
252                    return 1;

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=73
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=50 bci=129
50                    t *= mod.pow(2, b * (b - 1L) / 2);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 3
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=51 bci=132
51                    t %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=53 bci=140
53                    long p = 0;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=54 bci=143
54                    Factorial fact = mod.getFactorial(b + 1);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.getFactorial(), line=283 bci=0
283                return new Factorial(this, n);

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=314 bci=0
314            public Factorial(ModMath mod, int max) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=315 bci=4
315                this.mod = mod;

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=316 bci=9
316                this.max = max;

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=317 bci=14
317                this.natural = new long[max];

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=318 bci=21
318                this.reverse = new long[max];

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=319 bci=28
319                natural[0] = 1;

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=320 bci=35
320                for (int i = 1; i < max; i++) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=321 bci=42
321                    natural[i] = mod.mod(natural[i - 1] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=321 bci=62
321                    natural[i] = mod.mod(natural[i - 1] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=320 bci=63
320                for (int i = 1; i < max; i++) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=321 bci=42
321                    natural[i] = mod.mod(natural[i - 1] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=321 bci=62
321                    natural[i] = mod.mod(natural[i - 1] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=320 bci=63
320                for (int i = 1; i < max; i++) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=323 bci=69
323                reverse[max - 1] = mod.inv(natural[max - 1]);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=0
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = 2
q = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 2
q = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = -1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=298 bci=6
298                    return new Vec3l(p, 1, p);

main[1] Method arguments:
p = -1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=298 bci=16
298                    return new Vec3l(p, 1, p);

main[1] Method arguments:
p = -1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 2
q = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = 2
q = -1
Local variables:
vals = instance of Main$Vec3l(id=484)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = 2
q = -1
Local variables:
vals = instance of Main$Vec3l(id=484)
a = 1
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 2
q = -1
Local variables:
vals = instance of Main$Vec3l(id=484)
a = 1
b = 1
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 2
q = -1
Local variables:
vals = instance of Main$Vec3l(id=484)
a = 1
b = 1
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
vals = instance of Main$Vec3l(id=485)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
vals = instance of Main$Vec3l(id=485)
a = 1
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
vals = instance of Main$Vec3l(id=485)
a = 1
b = 155389701
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 1
y = 155389701
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 1
y = 155389701
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 1
y = 155389701
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 1
y = 155389701
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 1
y = 155389701
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
vals = instance of Main$Vec3l(id=485)
a = 1
b = 155389701
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=486)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=486)
a = 155389701
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=486)
a = 155389701
b = 1
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 155389701
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 155389701
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 155389701
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 155389701
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 155389701
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=486)
a = 155389701
b = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=10
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 155389701
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 155389701
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=16
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=323 bci=88
323                reverse[max - 1] = mod.inv(natural[max - 1]);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=324 bci=89
324                for (int i = max - 1; i > 0; i--) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=325 bci=97
325                    reverse[i - 1] = mod.mod(reverse[i] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 310779402
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=325 bci=117
325                    reverse[i - 1] = mod.mod(reverse[i] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=324 bci=118
324                for (int i = max - 1; i > 0; i--) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=325 bci=97
325                    reverse[i - 1] = mod.mod(reverse[i] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=325 bci=117
325                    reverse[i - 1] = mod.mod(reverse[i] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=324 bci=118
324                for (int i = max - 1; i > 0; i--) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=327 bci=124
327            }

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.getFactorial(), line=283 bci=9
283                return new Factorial(this, n);

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=54 bci=152
54                    Factorial fact = mod.getFactorial(b + 1);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=55 bci=154
55                    for (int i = 0; i <= b; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 0
fact = instance of Main$Factorial(id=487)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=56 bci=164
56                        if (i % 2 == 0) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 0
fact = instance of Main$Factorial(id=487)
i = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=171
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 0
fact = instance of Main$Factorial(id=487)
i = 0
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=0
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 2
r = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.npr(), line=330 bci=0
330                return n < r ? 0 : mod.mod(natural[n] * reverse[n - r]);

main[1] Method arguments:
n = 2
r = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 310779402
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.npr(), line=330 bci=31
330                return n < r ? 0 : mod.mod(natural[n] * reverse[n - r]);

main[1] Method arguments:
n = 2
r = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=10
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 2
r = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=20
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 2
r = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=182
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 0
fact = instance of Main$Factorial(id=487)
i = 0
main[1] > 
Step completed: "thread=main", Main$Exponentiation.pow(), line=171 bci=0
171                if (x >= 0) {

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.pow(), line=172 bci=4
172                    return natural[x];

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=194
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 0
fact = instance of Main$Factorial(id=487)
i = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=253 bci=26
253                } else if (y % 2 == 0) {

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=59
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 3
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 3
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=252 bci=24
252                    return 1;

main[1] Method arguments:
x = 3
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=73
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=202
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 0
fact = instance of Main$Factorial(id=487)
i = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=58 bci=210
58                            p %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 3
fact = instance of Main$Factorial(id=487)
i = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=55 bci=268
55                    for (int i = 0; i <= b; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 3
fact = instance of Main$Factorial(id=487)
i = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=56 bci=164
56                        if (i % 2 == 0) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 3
fact = instance of Main$Factorial(id=487)
i = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=60 bci=221
60                            p -= fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 3
fact = instance of Main$Factorial(id=487)
i = 1
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=0
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 2
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.npr(), line=330 bci=0
330                return n < r ? 0 : mod.mod(natural[n] * reverse[n - r]);

main[1] Method arguments:
n = 2
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.npr(), line=330 bci=31
330                return n < r ? 0 : mod.mod(natural[n] * reverse[n - r]);

main[1] Method arguments:
n = 2
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=10
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 2
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=20
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 2
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=60 bci=232
60                            p -= fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 3
fact = instance of Main$Factorial(id=487)
i = 1
main[1] > 
Step completed: "thread=main", Main$Exponentiation.pow(), line=171 bci=0
171                if (x >= 0) {

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.pow(), line=172 bci=4
172                    return natural[x];

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=60 bci=244
60                            p -= fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 3
fact = instance of Main$Factorial(id=487)
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=253 bci=26
253                } else if (y % 2 == 0) {

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=59
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=252 bci=24
252                    return 1;

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=73
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=60 bci=252
60                            p -= fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 3
fact = instance of Main$Factorial(id=487)
i = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=61 bci=260
61                            p %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
i = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=55 bci=268
55                    for (int i = 0; i <= b; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
i = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=56 bci=164
56                        if (i % 2 == 0) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
i = 2
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=171
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
i = 2
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=0
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 2
r = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.npr(), line=330 bci=0
330                return n < r ? 0 : mod.mod(natural[n] * reverse[n - r]);

main[1] Method arguments:
n = 2
r = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.npr(), line=330 bci=31
330                return n < r ? 0 : mod.mod(natural[n] * reverse[n - r]);

main[1] Method arguments:
n = 2
r = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=10
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 2
r = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 310779402
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=20
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 2
r = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=182
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
i = 2
main[1] > 
Step completed: "thread=main", Main$Exponentiation.pow(), line=171 bci=0
171                if (x >= 0) {

main[1] Method arguments:
x = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.pow(), line=172 bci=4
172                    return natural[x];

main[1] Method arguments:
x = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=194
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
i = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=253 bci=26
253                } else if (y % 2 == 0) {

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=59
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=252 bci=24
252                    return 1;

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=73
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=202
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
i = 2
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=58 bci=210
58                            p %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
i = 2
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=55 bci=268
55                    for (int i = 0; i <= b; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
i = 2
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=64 bci=274
64                    if (p < 0) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=69 bci=289
69                    t *= p;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=70 bci=296
70                    t %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=72 bci=304
72                    ans += t;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 0
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=73 bci=311
73                    ans %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 1
b = 2
t = 6
p = 1
fact = instance of Main$Factorial(id=487)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=43 bci=319
43                for (int r = 1; r < n; r++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=44 bci=54
44                    int b = n - r;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=46 bci=61
46                    long t = mod.ncr(n, r);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=274 bci=0
274                long div = 1;

main[1] Method arguments:
n = 3
r = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=275 bci=2
275                for (int i = 2; i <= r; i++) {

main[1] Method arguments:
n = 3
r = 2
Local variables:
div = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=276 bci=11
276                    div *= i;

main[1] Method arguments:
n = 3
r = 2
Local variables:
div = 1
i = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=277 bci=17
277                    div %= mod;

main[1] Method arguments:
n = 3
r = 2
Local variables:
div = 2
i = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=275 bci=24
275                for (int i = 2; i <= r; i++) {

main[1] Method arguments:
n = 3
r = 2
Local variables:
div = 2
i = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=279 bci=30
279                return mod(npr(n, r) * inv(div));

main[1] Method arguments:
n = 3
r = 2
Local variables:
div = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=262 bci=0
262                if (n < r) {

main[1] Method arguments:
n = 3
r = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=265 bci=7
265                long ans = 1;

main[1] Method arguments:
n = 3
r = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=266 bci=9
266                for (int i = 0; i < r; i++) {

main[1] Method arguments:
n = 3
r = 2
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=267 bci=18
267                    ans *= (n - i);

main[1] Method arguments:
n = 3
r = 2
Local variables:
ans = 1
i = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=268 bci=26
268                    ans %= mod;

main[1] Method arguments:
n = 3
r = 2
Local variables:
ans = 3
i = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=266 bci=33
266                for (int i = 0; i < r; i++) {

main[1] Method arguments:
n = 3
r = 2
Local variables:
ans = 3
i = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=267 bci=18
267                    ans *= (n - i);

main[1] Method arguments:
n = 3
r = 2
Local variables:
ans = 3
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=268 bci=26
268                    ans %= mod;

main[1] Method arguments:
n = 3
r = 2
Local variables:
ans = 6
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=266 bci=33
266                for (int i = 0; i < r; i++) {

main[1] Method arguments:
n = 3
r = 2
Local variables:
ans = 6
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.npr(), line=270 bci=39
270                return ans;

main[1] Method arguments:
n = 3
r = 2
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=279 bci=37
279                return mod(npr(n, r) * inv(div));

main[1] Method arguments:
n = 3
r = 2
Local variables:
div = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=0
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = 2
q = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 2
q = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = -1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=298 bci=6
298                    return new Vec3l(p, 1, p);

main[1] Method arguments:
p = -1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = -1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=298 bci=16
298                    return new Vec3l(p, 1, p);

main[1] Method arguments:
p = -1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 2
q = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = 2
q = -1
Local variables:
vals = instance of Main$Vec3l(id=488)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = 2
q = -1
Local variables:
vals = instance of Main$Vec3l(id=488)
a = 1
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 2
q = -1
Local variables:
vals = instance of Main$Vec3l(id=488)
a = 1
b = 1
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 1
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 2
q = -1
Local variables:
vals = instance of Main$Vec3l(id=488)
a = 1
b = 1
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
vals = instance of Main$Vec3l(id=489)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
vals = instance of Main$Vec3l(id=489)
a = 1
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
vals = instance of Main$Vec3l(id=489)
a = 1
b = 155389701
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 1
y = 155389701
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 1
y = 155389701
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 1
y = 155389701
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 1
y = 155389701
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 1
y = 155389701
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = -310779401
q = 2
Local variables:
vals = instance of Main$Vec3l(id=489)
a = 1
b = 155389701
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=490)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=490)
a = 155389701
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=490)
a = 155389701
b = 1
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 155389701
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 155389701
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 155389701
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 155389701
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 155389701
y = 1
z = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 2
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=490)
a = 155389701
b = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=10
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 155389701
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 155389701
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=16
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=279 bci=42
279                return mod(npr(n, r) * inv(div));

main[1] Method arguments:
n = 3
r = 2
Local variables:
div = 2
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 932338206
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.ncr(), line=279 bci=46
279                return mod(npr(n, r) * inv(div));

main[1] Method arguments:
n = 3
r = 2
Local variables:
div = 2
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=46 bci=70
46                    long t = mod.ncr(n, r);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=47 bci=72
47                    t *= mod.pow(2, r * (r - 1L) / 2);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 3
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=253 bci=26
253                } else if (y % 2 == 0) {

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=59
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=252 bci=24
252                    return 1;

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=73
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=47 bci=95
47                    t *= mod.pow(2, r * (r - 1L) / 2);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 3
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=48 bci=98
48                    t %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=50 bci=106
50                    t *= mod.pow(2, b * (b - 1L) / 2);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=252 bci=24
252                    return 1;

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=50 bci=129
50                    t *= mod.pow(2, b * (b - 1L) / 2);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=51 bci=132
51                    t %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=53 bci=140
53                    long p = 0;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=54 bci=143
54                    Factorial fact = mod.getFactorial(b + 1);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.getFactorial(), line=283 bci=0
283                return new Factorial(this, n);

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=314 bci=0
314            public Factorial(ModMath mod, int max) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=315 bci=4
315                this.mod = mod;

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=316 bci=9
316                this.max = max;

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=317 bci=14
317                this.natural = new long[max];

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=318 bci=21
318                this.reverse = new long[max];

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=319 bci=28
319                natural[0] = 1;

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=320 bci=35
320                for (int i = 1; i < max; i++) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=321 bci=42
321                    natural[i] = mod.mod(natural[i - 1] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=321 bci=62
321                    natural[i] = mod.mod(natural[i - 1] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=320 bci=63
320                for (int i = 1; i < max; i++) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=323 bci=69
323                reverse[max - 1] = mod.inv(natural[max - 1]);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=0
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=17
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=297 bci=0
297                if (q == 0) {

main[1] Method arguments:
p = 1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=298 bci=6
298                    return new Vec3l(p, 1, p);

main[1] Method arguments:
p = 1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=298 bci=16
298                    return new Vec3l(p, 1, p);

main[1] Method arguments:
p = 1
q = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
vals = instance of Main$Vec3l(id=491)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
vals = instance of Main$Vec3l(id=491)
a = 1
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
vals = instance of Main$Vec3l(id=491)
a = 1
b = 310779402
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 1
y = 310779402
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 1
y = 310779402
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 1
y = 310779402
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 1
y = 310779402
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 1
y = 310779402
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = -310779401
q = 1
Local variables:
vals = instance of Main$Vec3l(id=491)
a = 1
b = 310779402
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=300 bci=24
300                Vec3l vals = solve(q, p % q);

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=301 bci=26
301                long a = vals.y;

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=492)
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=302 bci=33
302                long b = vals.x - (p / q) * a;

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=492)
a = 310779402
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=47
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=492)
a = 310779402
b = 1
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=192 bci=0
192            public Vec3l(long x, long y, long z) {

main[1] Method arguments:
x = 310779402
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=193 bci=4
193                this.x = x;

main[1] Method arguments:
x = 310779402
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=194 bci=9
194                this.y = y;

main[1] Method arguments:
x = 310779402
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=195 bci=14
195                this.z = z;

main[1] Method arguments:
x = 310779402
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Vec3l.<init>(), line=196 bci=20
196            }

main[1] Method arguments:
x = 310779402
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$LongEuclidSolver.solve(), line=303 bci=63
303                return new Vec3l(a, b, vals.z);

main[1] Method arguments:
p = 1
q = -310779401
Local variables:
vals = instance of Main$Vec3l(id=492)
a = 310779402
b = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=10
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 310779402
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.inv(), line=245 bci=16
245                return mod(LongEuclidSolver.solve(x, -mod).x);

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=323 bci=88
323                reverse[max - 1] = mod.inv(natural[max - 1]);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=324 bci=89
324                for (int i = max - 1; i > 0; i--) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=325 bci=97
325                    reverse[i - 1] = mod.mod(reverse[i] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=325 bci=117
325                    reverse[i - 1] = mod.mod(reverse[i] * i);

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=324 bci=118
324                for (int i = max - 1; i > 0; i--) {

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main$Factorial.<init>(), line=327 bci=124
327            }

main[1] Method arguments:
mod = instance of Main$ModMath(id=473)
max = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.getFactorial(), line=283 bci=9
283                return new Factorial(this, n);

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=54 bci=152
54                    Factorial fact = mod.getFactorial(b + 1);

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=55 bci=154
55                    for (int i = 0; i <= b; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 0
fact = instance of Main$Factorial(id=493)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=56 bci=164
56                        if (i % 2 == 0) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 0
fact = instance of Main$Factorial(id=493)
i = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=171
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 0
fact = instance of Main$Factorial(id=493)
i = 0
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=0
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 1
r = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.npr(), line=330 bci=0
330                return n < r ? 0 : mod.mod(natural[n] * reverse[n - r]);

main[1] Method arguments:
n = 1
r = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.npr(), line=330 bci=31
330                return n < r ? 0 : mod.mod(natural[n] * reverse[n - r]);

main[1] Method arguments:
n = 1
r = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=10
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 1
r = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=20
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 1
r = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=182
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 0
fact = instance of Main$Factorial(id=493)
i = 0
main[1] > 
Step completed: "thread=main", Main$Exponentiation.pow(), line=171 bci=0
171                if (x >= 0) {

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.pow(), line=172 bci=4
172                    return natural[x];

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=194
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 0
fact = instance of Main$Factorial(id=493)
i = 0
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=253 bci=26
253                } else if (y % 2 == 0) {

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=254 bci=36
254                    long z = pow(x, y / 2);

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=253 bci=26
253                } else if (y % 2 == 0) {

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=59
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=252 bci=24
252                    return 1;

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=73
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=254 bci=46
254                    long z = pow(x, y / 2);

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=255 bci=48
255                    return (z * z) % mod;

main[1] Method arguments:
x = 1
y = 2
Local variables:
z = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=57 bci=202
57                            p += fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 0
fact = instance of Main$Factorial(id=493)
i = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=58 bci=210
58                            p %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
i = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=55 bci=268
55                    for (int i = 0; i <= b; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
i = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=56 bci=164
56                        if (i % 2 == 0) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
i = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=60 bci=221
60                            p -= fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
i = 1
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=0
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 1
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.npr(), line=330 bci=0
330                return n < r ? 0 : mod.mod(natural[n] * reverse[n - r]);

main[1] Method arguments:
n = 1
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.npr(), line=330 bci=31
330                return n < r ? 0 : mod.mod(natural[n] * reverse[n - r]);

main[1] Method arguments:
n = 1
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=10
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 1
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=240 bci=0
240                x %= mod;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.mod(), line=241 bci=7
241                return x < 0 ? x + mod : x;

main[1] Method arguments:
x = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Factorial.ncr(), line=334 bci=20
334                return mod.mod(npr(n, r) * reverse[r]);

main[1] Method arguments:
n = 1
r = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=60 bci=232
60                            p -= fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
i = 1
main[1] > 
Step completed: "thread=main", Main$Exponentiation.pow(), line=171 bci=0
171                if (x >= 0) {

main[1] Method arguments:
x = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Exponentiation.pow(), line=172 bci=4
172                    return natural[x];

main[1] Method arguments:
x = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=60 bci=244
60                            p -= fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
i = 1
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=253 bci=26
253                } else if (y % 2 == 0) {

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=254 bci=36
254                    long z = pow(x, y / 2);

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=253 bci=26
253                } else if (y % 2 == 0) {

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=59
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=249 bci=0
249                if (y < 0) {

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=251 bci=18
251                } else if (y == 0) {

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=252 bci=24
252                    return 1;

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=257 bci=73
257                    return (x % mod) * pow(x, y - 1) % mod;

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=254 bci=46
254                    long z = pow(x, y / 2);

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$ModMath.pow(), line=255 bci=48
255                    return (z * z) % mod;

main[1] Method arguments:
x = 0
y = 2
Local variables:
z = 0
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=60 bci=252
60                            p -= fact.ncr(b, i) * mod.pow(exp2.pow(b - i) - 1, r) % m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
i = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=61 bci=260
61                            p %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
i = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=55 bci=268
55                    for (int i = 0; i <= b; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
i = 1
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=64 bci=274
64                    if (p < 0) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=69 bci=289
69                    t *= p;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=70 bci=296
70                    t %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=72 bci=304
72                    ans += t;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 6
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=73 bci=311
73                    ans %= m;

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 12
exp2 = instance of Main$Exponentiation(id=480)
r = 2
b = 1
t = 6
p = 1
fact = instance of Main$Factorial(id=493)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=43 bci=319
43                for (int r = 1; r < n; r++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 12
exp2 = instance of Main$Exponentiation(id=480)
r = 2
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=75 bci=325
75                out.ans(ans).ln();

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 12
exp2 = instance of Main$Exponentiation(id=480)
main[1] > 
Step completed: "thread=main", Main$LightWriter.ans(), line=121 bci=0
121                return ans(Long.toString(l));

main[1] Method arguments:
l = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.ans(), line=114 bci=0
114                if (!breaked) {

main[1] Method arguments:
s = "12"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.ans(), line=117 bci=14
117                return print(s);

main[1] Method arguments:
s = "12"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.print(), line=105 bci=0
105                    out.write(s, 0, s.length());

main[1] Method arguments:
s = "12"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.print(), line=106 bci=13
106                    breaked = false;

main[1] Method arguments:
s = "12"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.print(), line=109 bci=18
109                }

main[1] Method arguments:
s = "12"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.print(), line=110 bci=31
110                return this;

main[1] Method arguments:
s = "12"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.ans(), line=117 bci=19
117                return print(s);

main[1] Method arguments:
s = "12"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.ans(), line=121 bci=8
121                return ans(Long.toString(l));

main[1] Method arguments:
l = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=75 bci=331
75                out.ans(ans).ln();

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 12
exp2 = instance of Main$Exponentiation(id=480)
main[1] > 
Step completed: "thread=main", Main$LightWriter.ln(), line=125 bci=0
125                print(System.lineSeparator());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightWriter.print(), line=105 bci=0
105                    out.write(s, 0, s.length());

main[1] Method arguments:
s = "
"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.print(), line=106 bci=13
106                    breaked = false;

main[1] Method arguments:
s = "
"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.print(), line=109 bci=18
109                }

main[1] Method arguments:
s = "
"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.print(), line=110 bci=31
110                return this;

main[1] Method arguments:
s = "
"
Local variables:
main[1] > 
Step completed: "thread=main", Main$LightWriter.ln(), line=125 bci=7
125                print(System.lineSeparator());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightWriter.ln(), line=126 bci=8
126                breaked = true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightWriter.ln(), line=127 bci=13
127                if (autoflush) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightWriter.ln(), line=134 bci=40
134                return this;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=75 bci=334
75                out.ans(ans).ln();

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 12
exp2 = instance of Main$Exponentiation(id=480)
main[1] > 
Step completed: "thread=main", Main$FRedBlackSoulGem.solve(), line=76 bci=335
76            }

main[1] Method arguments:
testNumber = 1
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
Local variables:
n = 3
m = 310779401
mod = instance of Main$ModMath(id=473)
ans = 12
exp2 = instance of Main$Exponentiation(id=480)
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=45
33            out.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
solver = instance of Main$FRedBlackSoulGem(id=456)
main[1] > 
Step completed: "thread=main", Main$LightWriter.close(), line=139 bci=0
139                    out.close();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightWriter.close(), line=142 bci=7
142                }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$LightWriter.close(), line=143 bci=20
143            }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=50
34        }

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$LightScanner(id=451)
out = instance of Main$LightWriter(id=454)
solver = instance of Main$FRedBlackSoulGem(id=456)
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
