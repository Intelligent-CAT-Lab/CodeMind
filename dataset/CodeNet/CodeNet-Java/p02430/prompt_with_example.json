{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tvoid solve (FastScanner in, PrintWriter out, Methods ms) {\n\t\t\n\t\tint n = in.nextInt(), k = in.nextInt();\n\t\t\n\t\tfor (int bit=0; bit<(1<<n); bit++) {\n\t\t\tif (Integer.bitCount(bit) != k) continue;\n\t\t\tout.print(bit+\":\");\n\t\t\tfor (int j=0; j<n; j++) {\n\t\t\t\tif (((bit>>j) & 1) == 1) {\n\t\t\t\t\tout.print(\" \"+j);\n\t\t\t\t}\n\t\t\t}\n\t\t\tout.println();\n\t\t}\n\t\t\n\t}\n\n\n\n\tpublic static void main(String[] args) {\n\t\tMain main = new Main();\n\t\tFastScanner in = new FastScanner(System.in);\n\t\tPrintWriter out = new PrintWriter(System.out);\n\t\tMethods ms = new Methods();\n\t\tmain.solve(in, out, ms);\n\t\tin.close();\n\t\tout.close();\n\t}\n\n\tstatic class Methods {\n\n\t\tpublic void print (Object... ar) {System.out.println(Arrays.deepToString(ar));}\n\n\t\tpublic void yesno (PrintWriter out, boolean b) {out.println(b?\"Yes\":\"No\");}\n\n\t\tpublic void YESNO (PrintWriter out, boolean b) {out.println(b?\"YES\":\"NO\");}\n\n\t\tpublic int max (int... ar) {Arrays.sort(ar); return ar[ar.length-1];}\n\n\t\tpublic int min (int... ar) {Arrays.sort(ar); return ar[0];}\n\n\t}\n\n\tstatic class FastScanner {\n\n\t\tprivate InputStream in;\n\t\tprivate byte[] buffer = new byte[1024];\n\t\tprivate  int length = 0, p = 0;\n\n\t\tpublic FastScanner (InputStream stream) {\n\t\t\tin = stream;\n\t\t}\n\n\t\tpublic boolean hasNextByte () {\n\t\t\tif (p < length) return true;\n\t\t\telse {\n\t\t\t\tp = 0;\n\t\t\t\ttry {length = in.read(buffer);}\n\t\t\t\tcatch (Exception e) {e.printStackTrace();}\n\t\t\t\tif (length <= 0) return false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tpublic int readByte () {\n\t\t\tif (hasNextByte() == true) return buffer[p++];\n\t\t\treturn -1;\n\t\t}\n\n\t\tpublic boolean isPrintable (int n) {return 33<=n&&n<=126;}\n\n\t\tpublic void skip () {\n\t\t\twhile (hasNextByte() && !isPrintable(buffer[p])) p++;\n\t\t}\n\n\t\tpublic boolean hasNext () {skip(); return hasNextByte();}\n\n\t\tpublic String next () {\n\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tint t = readByte();\n\t\t\twhile (isPrintable(t)) {\n\t\t\t\tsb.appendCodePoint(t);\n\t\t\t\tt = readByte();\n\t\t\t}\n\t\t\treturn sb.toString();\n\t\t}\n\n\t\tpublic String[] nextArray (int n) {\n\t\t\tString[] ar = new String[n];\n\t\t\tfor (int i=0; i<n; i++) ar[i] = next();\n\t\t\treturn ar;\n\t\t}\n\n\t\tpublic int nextInt () {return Math.toIntExact(nextLong());}\n\n\t\tpublic int[] nextIntArray (int n) {\n\t\t\tint[] ar = new int[n];\n\t\t\tfor (int i=0; i<n; i++) ar[i] = nextInt();\n\t\t\treturn ar;\n\t\t}\n\n\t\tpublic long nextLong () {\n\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\tboolean minus = false;\n\t\t\tint temp = readByte();\n\t\t\tif (temp == '-') {\n\t\t\t\tminus = true;\n\t\t\t\ttemp = readByte();\n\t\t\t}\n\t\t\tif (temp<'0' || '9'<temp) throw new NumberFormatException();\n\t\t\tlong n = 0;\n\t\t\twhile (isPrintable(temp)) {\n\t\t\t\tif ('0'<=temp && temp<='9') {\n\t\t\t\t\tn *= 10;\n\t\t\t\t\tn += temp - '0';\n\t\t\t\t}\n\t\t\t\telse throw new NumberFormatException();\n\t\t\t\ttemp = readByte();\n\t\t\t}\n\t\t\treturn minus? -n : n;\n\t\t}\n\n\t\tpublic long[] nextLongArray (int n) {\n\t\t\tlong[] ar = new long[n];\n\t\t\tfor (int i=0; i<n; i++) ar[i] = nextLong();\n\t\t\treturn ar;\n\t\t}\n\n\t\tpublic double nextDouble () {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tpublic double[] nextDoubleArray (int n) {\n\t\t\tdouble[] ar = new double[n];\n\t\t\tfor (int i=0; i<n; i++) ar[i] = nextDouble();\n\t\t\treturn ar;\n\t\t}\n\n\t\tpublic void close () {\n\t\t\ttry {in.close();}\n\t\t\tcatch(Exception e){}\n\t\t}\n\n\t}\n\n}\nGicen the following input:\n5 3\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "7: 0 1 2\n11: 0 1 3\n13: 0 2 3\n14: 1 2 3\n19: 0 1 4\n21: 0 2 4\n22: 1 2 4\n25: 0 3 4\n26: 1 3 4\n28: 2 3 4\n"
    }
}