some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=26 bci=0
26            InputStream inputStream = System.in;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=27 bci=4
27            OutputStream outputStream = System.out;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
main[1] > 
Step completed: "thread=main", Main.main(), line=28 bci=8
28            InputReader in = new InputReader(inputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
main[1] > 
Step completed: "thread=main", Main$InputReader.<init>(), line=164 bci=0
164            public InputReader(InputStream stream) {

main[1] Method arguments:
stream = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.<init>(), line=160 bci=4
160            private byte[] buf = new byte[1 << 16];

main[1] Method arguments:
stream = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.<init>(), line=165 bci=12
165                this.stream = stream;

main[1] Method arguments:
stream = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.<init>(), line=166 bci=17
166            }

main[1] Method arguments:
stream = instance of java.io.BufferedInputStream(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=28 bci=16
28            InputReader in = new InputReader(inputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
main[1] > 
Step completed: "thread=main", Main.main(), line=29 bci=17
29            OutputWriter out = new OutputWriter(outputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=447)
main[1] > 
Step completed: "thread=main", Main$OutputWriter.<init>(), line=114 bci=0
114            public OutputWriter(OutputStream outputStream) {

main[1] Method arguments:
outputStream = instance of java.io.PrintStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main$OutputWriter.<init>(), line=115 bci=4
115                writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));

main[1] Method arguments:
outputStream = instance of java.io.PrintStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main$OutputWriter.<init>(), line=116 bci=30
116            }

main[1] Method arguments:
outputStream = instance of java.io.PrintStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=29 bci=25
29            OutputWriter out = new OutputWriter(outputStream);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=447)
main[1] > 
Step completed: "thread=main", Main.main(), line=30 bci=27
30            TaskF solver = new TaskF();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
main[1] > 
Step completed: "thread=main", Main$TaskF.<init>(), line=35 bci=0
35        static class TaskF {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$TaskF.<init>(), line=36 bci=4
36            int mod = 1000000007;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=30 bci=34
30            TaskF solver = new TaskF();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=36
31            solver.solve(1, in, out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
solver = instance of Main$TaskF(id=452)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=43 bci=0
43                n = in.nextInt();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=192 bci=0
192                for (c = this.read(); isSpaceChar(c); c = this.read()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.read(), line=169 bci=0
169                if (this.numChars == -1) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.read(), line=172 bci=16
172                    if (this.curChar >= this.numChars) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.read(), line=173 bci=27
173                        this.curChar = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.read(), line=176 bci=32
176                            this.numChars = this.stream.read(this.buf);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.read(), line=179 bci=47
179                        }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.read(), line=181 bci=59
181                        if (this.numChars <= 0) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.read(), line=186 bci=68
186                    return this.buf[this.curChar++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=192 bci=4
192                for (c = this.read(); isSpaceChar(c); c = this.read()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.isSpaceChar(), line=217 bci=0
217                return c == 32 || c == 10 || c == 13 || c == 9 || c == -1;

main[1] Method arguments:
c = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=192 bci=9
192                for (c = this.read(); isSpaceChar(c); c = this.read()) {

main[1] Method arguments:
Local variables:
c = 51
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=196 bci=20
196                byte sgn = 1;

main[1] Method arguments:
Local variables:
c = 51
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=197 bci=22
197                if (c == 45) {

main[1] Method arguments:
Local variables:
c = 51
sgn = 1
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=202 bci=35
202                int res = 0;

main[1] Method arguments:
Local variables:
c = 51
sgn = 1
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=204 bci=37
204                while (c >= 48 && c <= 57) {

main[1] Method arguments:
Local variables:
c = 51
sgn = 1
res = 0
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=205 bci=49
205                    res *= 10;

main[1] Method arguments:
Local variables:
c = 51
sgn = 1
res = 0
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=206 bci=54
206                    res += c - 48;

main[1] Method arguments:
Local variables:
c = 51
sgn = 1
res = 0
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=207 bci=61
207                    c = this.read();

main[1] Method arguments:
Local variables:
c = 51
sgn = 1
res = 3
main[1] > 
Step completed: "thread=main", Main$InputReader.read(), line=169 bci=0
169                if (this.numChars == -1) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.read(), line=172 bci=16
172                    if (this.curChar >= this.numChars) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.read(), line=186 bci=68
186                    return this.buf[this.curChar++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=207 bci=65
207                    c = this.read();

main[1] Method arguments:
Local variables:
c = 51
sgn = 1
res = 3
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=208 bci=66
208                    if (isSpaceChar(c)) {

main[1] Method arguments:
Local variables:
c = 10
sgn = 1
res = 3
main[1] > 
Step completed: "thread=main", Main$InputReader.isSpaceChar(), line=217 bci=0
217                return c == 32 || c == 10 || c == 13 || c == 9 || c == -1;

main[1] Method arguments:
c = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=208 bci=70
208                    if (isSpaceChar(c)) {

main[1] Method arguments:
Local variables:
c = 10
sgn = 1
res = 3
main[1] > 
Step completed: "thread=main", Main$InputReader.nextInt(), line=209 bci=73
209                        return res * sgn;

main[1] Method arguments:
Local variables:
c = 10
sgn = 1
res = 3
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=43 bci=4
43                n = in.nextInt();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=44 bci=7
44                ArrayList<TaskF.Point> ps = new ArrayList<>();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=45 bci=16
45                for (int i = 0; i < n; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=46 bci=27
46                    TaskF.Point p = new TaskF.Point();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 0
main[1] > 
Step completed: "thread=main", Main$TaskF$Point.<init>(), line=81 bci=0
81                public Point() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$TaskF$Point.<init>(), line=82 bci=4
82                    this.coeff = new int[n];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$TaskF$Point.<init>(), line=83 bci=13
83                }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=46 bci=34
46                    TaskF.Point p = new TaskF.Point();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=47 bci=36
47                    p.coeff[i] = 1;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 0
p = instance of Main$TaskF$Point(id=455)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=48 bci=45
48                    ps.add(p);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 0
p = instance of Main$TaskF$Point(id=455)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=45 bci=53
45                for (int i = 0; i < n; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=46 bci=27
46                    TaskF.Point p = new TaskF.Point();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 1
main[1] > 
Step completed: "thread=main", Main$TaskF$Point.<init>(), line=81 bci=0
81                public Point() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$TaskF$Point.<init>(), line=82 bci=4
82                    this.coeff = new int[n];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$TaskF$Point.<init>(), line=83 bci=13
83                }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=46 bci=34
46                    TaskF.Point p = new TaskF.Point();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=47 bci=36
47                    p.coeff[i] = 1;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 1
p = instance of Main$TaskF$Point(id=456)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=48 bci=45
48                    ps.add(p);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 1
p = instance of Main$TaskF$Point(id=456)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=45 bci=53
45                for (int i = 0; i < n; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=46 bci=27
46                    TaskF.Point p = new TaskF.Point();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 2
main[1] > 
Step completed: "thread=main", Main$TaskF$Point.<init>(), line=81 bci=0
81                public Point() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$TaskF$Point.<init>(), line=82 bci=4
82                    this.coeff = new int[n];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$TaskF$Point.<init>(), line=83 bci=13
83                }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=46 bci=34
46                    TaskF.Point p = new TaskF.Point();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=47 bci=36
47                    p.coeff[i] = 1;

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 2
p = instance of Main$TaskF$Point(id=457)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=48 bci=45
48                    ps.add(p);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 2
p = instance of Main$TaskF$Point(id=457)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=45 bci=53
45                for (int i = 0; i < n; i++) {

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
i = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=50 bci=59
50                pp = new HashSet<>();

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=51 bci=70
51                comb = Utils.getComb(n + 10, mod);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=134 bci=0
134                int[][] comb = new int[sz][sz];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=7
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 0
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 0
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 0
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
j = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 11
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 11
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
j = 11
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 11
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=136 bci=14
136                    comb[i][0] = 1;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=20
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 1
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 2
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 3
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 4
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 5
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 6
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 7
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 8
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 9
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 10
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 11
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 11
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 11
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=138 bci=29
138                        comb[i][j] = comb[i - 1][j] + comb[i - 1][j - 1];

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 12
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=139 bci=54
139                        if (comb[i][j] >= mod) comb[i][j] -= mod;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 12
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=137 bci=74
137                    for (int j = 1; j <= i; j++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
j = 12
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=135 bci=80
135                for (int i = 0; i < sz; i++) {

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
i = 12
main[1] > 
Step completed: "thread=main", Main$Utils.getComb(), line=142 bci=86
142                return comb;

main[1] Method arguments:
sz = 13
mod = 1000000007
Local variables:
comb = instance of int[][13] (id=460)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=51 bci=84
51                comb = Utils.getComb(n + 10, mod);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=53 bci=87
53                dp = new long[n + 10][101];

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=54 bci=103
54                AUtils.deepFill(dp, -1);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=0
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=465)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=465)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=466)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=466)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=467)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=467)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=468)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=468)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=469)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=469)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=470)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=470)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=471)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=471)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=472)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=472)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=473)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=473)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=474)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=474)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=475)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=475)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=476)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=476)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=153 bci=0
153                Arrays.fill(x, val);

main[1] Method arguments:
x = instance of long[101] (id=477)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=154 bci=5
154            }

main[1] Method arguments:
x = instance of long[101] (id=477)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=149 bci=28
149                for (long[] y : x) deepFill(y, val);

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$AUtils.deepFill(), line=150 bci=34
150            }

main[1] Method arguments:
x = instance of long[][13] (id=463)
val = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=55 bci=113
55                out.println((n * (dfs(n - 1, 0) + dfs(n - 1, 1))) % mod);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=59 bci=0
59                if (dp[left][excess] != -1) return dp[left][excess];

main[1] Method arguments:
left = 2
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=60 bci=24
60                if (left == 0) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=63 bci=38
63                long ret = 0;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=40
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=49
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
t = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 2
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 2
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 2
take = 2
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=112
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 2
take = 2
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=59 bci=0
59                if (dp[left][excess] != -1) return dp[left][excess];

main[1] Method arguments:
left = 0
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=60 bci=24
60                if (left == 0) {

main[1] Method arguments:
left = 0
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=61 bci=28
61                    return excess == 0 ? 1 : 0;

main[1] Method arguments:
left = 0
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=128
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 2
take = 2
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
neg = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=173
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=49
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
t = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 1
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 1
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 1
take = 2
t = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=112
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 1
take = 2
t = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=59 bci=0
59                if (dp[left][excess] != -1) return dp[left][excess];

main[1] Method arguments:
left = 0
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=60 bci=24
60                if (left == 0) {

main[1] Method arguments:
left = 0
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=61 bci=28
61                    return excess == 0 ? 1 : 0;

main[1] Method arguments:
left = 0
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=128
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 0
pos = 1
neg = 1
take = 2
t = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 1
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=173
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=49
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 2
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 2
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 2
neg = 0
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 2
neg = 0
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 2
neg = 0
take = 2
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=112
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 2
neg = 0
take = 2
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=59 bci=0
59                if (dp[left][excess] != -1) return dp[left][excess];

main[1] Method arguments:
left = 0
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=60 bci=24
60                if (left == 0) {

main[1] Method arguments:
left = 0
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=61 bci=28
61                    return excess == 0 ? 1 : 0;

main[1] Method arguments:
left = 0
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=128
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 2
neg = 0
take = 2
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 2
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=173
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
pos = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=74 bci=179
74                Debug.print(left, excess, ret);

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main$Debug.print(), line=278 bci=0
278                if (!DEBUG) return;

main[1] Method arguments:
x = instance of java.lang.Object[3] (id=480)
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=75 bci=207
75                return dp[left][excess] = ret % mod;

main[1] Method arguments:
left = 2
excess = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=55 bci=128
55                out.println((n * (dfs(n - 1, 0) + dfs(n - 1, 1))) % mod);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=59 bci=0
59                if (dp[left][excess] != -1) return dp[left][excess];

main[1] Method arguments:
left = 2
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=60 bci=24
60                if (left == 0) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=63 bci=38
63                long ret = 0;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=40
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=49
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
t = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=112
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
t = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=59 bci=0
59                if (dp[left][excess] != -1) return dp[left][excess];

main[1] Method arguments:
left = 1
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=60 bci=24
60                if (left == 0) {

main[1] Method arguments:
left = 1
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=63 bci=38
63                long ret = 0;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=40
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=49
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 0
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 0
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
t = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=173
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=49
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
t = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=173
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
pos = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=74 bci=179
74                Debug.print(left, excess, ret);

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main$Debug.print(), line=278 bci=0
278                if (!DEBUG) return;

main[1] Method arguments:
x = instance of java.lang.Object[3] (id=481)
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=75 bci=207
75                return dp[left][excess] = ret % mod;

main[1] Method arguments:
left = 1
excess = 0
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=128
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
t = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 2
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 2
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 2
take = 2
t = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
neg = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=173
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=49
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=112
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=59 bci=0
59                if (dp[left][excess] != -1) return dp[left][excess];

main[1] Method arguments:
left = 1
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=60 bci=24
60                if (left == 0) {

main[1] Method arguments:
left = 1
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=63 bci=38
63                long ret = 0;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=40
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=49
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
pos = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
pos = 0
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
pos = 0
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
t = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=112
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
t = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=59 bci=0
59                if (dp[left][excess] != -1) return dp[left][excess];

main[1] Method arguments:
left = 0
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=60 bci=24
60                if (left == 0) {

main[1] Method arguments:
left = 0
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=61 bci=28
61                    return excess == 0 ? 1 : 0;

main[1] Method arguments:
left = 0
excess = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=128
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 0
pos = 0
neg = 1
take = 1
t = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 0
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=173
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=49
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 1
neg = 0
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 1
neg = 0
take = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 1
neg = 0
take = 1
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=112
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 1
neg = 0
take = 1
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=59 bci=0
59                if (dp[left][excess] != -1) return dp[left][excess];

main[1] Method arguments:
left = 0
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=60 bci=24
60                if (left == 0) {

main[1] Method arguments:
left = 0
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=61 bci=28
61                    return excess == 0 ? 1 : 0;

main[1] Method arguments:
left = 0
excess = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=128
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 1
neg = 0
take = 1
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=173
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
pos = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=74 bci=179
74                Debug.print(left, excess, ret);

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main$Debug.print(), line=278 bci=0
278                if (!DEBUG) return;

main[1] Method arguments:
x = instance of java.lang.Object[3] (id=482)
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=75 bci=207
75                return dp[left][excess] = ret % mod;

main[1] Method arguments:
left = 1
excess = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=71 bci=128
71                        ret = (ret + dfs(left - pos - neg, t / 2) * comb[left][pos] % mod * comb[left - pos][neg]) % mod;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 0
pos = 1
neg = 0
take = 1
t = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 1
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 1
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 1
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 1
neg = 1
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 1
neg = 1
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 1
neg = 1
take = 2
t = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 1
neg = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=173
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 1
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=49
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=66 bci=61
66                        if (pos + neg == 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 2
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=67 bci=72
67                        int take = pos + neg;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 2
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=68 bci=79
68                        if (excess > take + 1) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 2
neg = 0
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=69 bci=90
69                        int t = Math.abs(excess + pos - neg);

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 2
neg = 0
take = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=70 bci=102
70                        if (t % 2 != 0) continue;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 2
neg = 0
take = 2
t = 3
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=65 bci=167
65                    for (int neg = 0; neg + pos <= left; neg++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 2
neg = 0
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=64 bci=173
64                for (int pos = 0; pos <= left; pos++) {

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
pos = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=74 bci=179
74                Debug.print(left, excess, ret);

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main$Debug.print(), line=278 bci=0
278                if (!DEBUG) return;

main[1] Method arguments:
x = instance of java.lang.Object[3] (id=483)
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.dfs(), line=75 bci=207
75                return dp[left][excess] = ret % mod;

main[1] Method arguments:
left = 2
excess = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=55 bci=138
55                out.println((n * (dfs(n - 1, 0) + dfs(n - 1, 1))) % mod);

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
main[1] > 
Step completed: "thread=main", Main$OutputWriter.println(), line=127 bci=0
127                writer.println(i);

main[1] Method arguments:
i = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main$OutputWriter.println(), line=128 bci=8
128            }

main[1] Method arguments:
i = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main$TaskF.solve(), line=56 bci=149
56            }

main[1] Method arguments:
testNumber = 1
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
Local variables:
ps = instance of java.util.ArrayList(id=453)
main[1] > 
Step completed: "thread=main", Main.main(), line=32 bci=45
32            out.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
solver = instance of Main$TaskF(id=452)
main[1] > 
Step completed: "thread=main", Main$OutputWriter.close(), line=123 bci=0
123                writer.close();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$OutputWriter.close(), line=124 bci=7
124            }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=50
33        }

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
inputStream = instance of java.io.BufferedInputStream(id=444)
outputStream = instance of java.io.PrintStream(id=445)
in = instance of Main$InputReader(id=447)
out = instance of Main$OutputWriter(id=450)
solver = instance of Main$TaskF(id=452)
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
