some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=224 bci=0
224    	static final Random rng = new Random();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=231 bci=0
231    		new Main();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=214 bci=0
214    	Main() throws IOException {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=215 bci=4
215    		br = new BufferedReader(new InputStreamReader(System.in));

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=216 bci=25
216    		out = new PrintWriter(System.out);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=217 bci=39
217    		preCalc();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=176 bci=0
176    	}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=218 bci=43
218    		submit();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.submit(), line=167 bci=0
167    		a = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=258 bci=0
258    		return Integer.parseInt(nextToken());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=239 bci=0
239    		while (st == null || !st.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=241 bci=17
241    				st = new StringTokenizer(br.readLine());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=244 bci=35
244    			}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=239 bci=0
239    		while (st == null || !st.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=246 bci=48
246    		return st.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=258 bci=4
258    		return Integer.parseInt(nextToken());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.submit(), line=167 bci=5
167    		a = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.submit(), line=168 bci=8
168    		b = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=258 bci=0
258    		return Integer.parseInt(nextToken());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=239 bci=0
239    		while (st == null || !st.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=246 bci=48
246    		return st.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=258 bci=4
258    		return Integer.parseInt(nextToken());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.submit(), line=168 bci=13
168    		b = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.submit(), line=169 bci=16
169    		c = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=258 bci=0
258    		return Integer.parseInt(nextToken());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=239 bci=0
239    		while (st == null || !st.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=246 bci=48
246    		return st.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=258 bci=4
258    		return Integer.parseInt(nextToken());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.submit(), line=169 bci=21
169    		c = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.submit(), line=170 bci=24
170    		d = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=258 bci=0
258    		return Integer.parseInt(nextToken());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=239 bci=0
239    		while (st == null || !st.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextToken(), line=246 bci=48
246    		return st.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=258 bci=4
258    		return Integer.parseInt(nextToken());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.submit(), line=170 bci=29
170    		d = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.submit(), line=171 bci=32
171    		out.println(fast());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.fast(), line=91 bci=0
91    		List<Item> lst = new ArrayList<>();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.fast(), line=92 bci=8
92    		for (int coord = 0; coord <= d + 1; coord++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
main[1] > 
Step completed: "thread=main", Main.fast(), line=93 bci=20
93    			checkX(coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 0
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=53 bci=14
53    			int y = (int) ((long) (x + 1) * b / a);

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=54 bci=33
54    			int z = (int) ((long) (x + 1) * c / a);

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=52
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=80
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=86
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=0
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 1
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=25
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=46
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=49
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=75
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=78
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=85
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=89
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=93
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=57 bci=99
57    			if (rec) {

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=58 bci=103
58    				checkY(y, lst, false);

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=66 bci=14
66    			int x = (int) ((long) (y + 1) * a / b);

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=67 bci=33
67    			int z = (int) ((long) (y + 1) * c / b);

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=52
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=80
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=86
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=0
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=23
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=46
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=49
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=75
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=78
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=85
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=89
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=93
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=70 bci=99
70    			if (rec) {

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=59 bci=111
59    				checkZ(z, lst, false);

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=94 bci=27
94    			checkY(coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 0
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=66 bci=14
66    			int x = (int) ((long) (y + 1) * a / b);

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=67 bci=33
67    			int z = (int) ((long) (y + 1) * c / b);

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=52
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=80
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=86
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=0
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=23
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=46
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 1
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=49
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=75
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=78
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=85
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=89
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 2
count = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 2
count = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 2
count = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 2
count = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=93
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=70 bci=99
70    			if (rec) {

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=71 bci=103
71    				checkX(x, lst, false);

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=53 bci=14
53    			int y = (int) ((long) (x + 1) * b / a);

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=54 bci=33
54    			int z = (int) ((long) (x + 1) * c / a);

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=52
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=80
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=86
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=0
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 1
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=25
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=46
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=49
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=75
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=78
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=85
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=89
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=93
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=57 bci=99
57    			if (rec) {

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=72 bci=111
72    				checkZ(z, lst, false);

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=95 bci=34
95    			checkZ(coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 0
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
y = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
y = 0
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
y = 0
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 1
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
y = 0
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 1
count = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 1
count = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 1
count = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 1
count = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
y = 0
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
y = 0
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=84 bci=103
84    				checkX(x, lst, false);

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
y = 0
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=53 bci=14
53    			int y = (int) ((long) (x + 1) * b / a);

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=54 bci=33
54    			int z = (int) ((long) (x + 1) * c / a);

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=52
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=80
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=86
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=0
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 1
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=25
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=46
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=49
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=75
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=78
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=85
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=89
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 3
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=93
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=57 bci=99
57    			if (rec) {

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 1
z = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=85 bci=111
85    				checkY(y, lst, false);

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 0
y = 0
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=66 bci=14
66    			int x = (int) ((long) (y + 1) * a / b);

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=67 bci=33
67    			int z = (int) ((long) (y + 1) * c / b);

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 0
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=52
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=80
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=86
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=0
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=23
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=46
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 1
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=49
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=75
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=78
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=85
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=89
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 2
count = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 2
count = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 2
count = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 2
count = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=93
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=70 bci=99
70    			if (rec) {

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 0
z = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 0
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 0
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=96 bci=41
96    			checkX(a - 1 - d + coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 0
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=53 bci=14
53    			int y = (int) ((long) (x + 1) * b / a);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=54 bci=33
54    			int z = (int) ((long) (x + 1) * c / a);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=52
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=80
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=86
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=0
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=25
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=46
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=49
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=75
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=78
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=85
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=89
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=93
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=57 bci=99
57    			if (rec) {

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=58 bci=103
58    				checkY(y, lst, false);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=66 bci=14
66    			int x = (int) ((long) (y + 1) * a / b);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=67 bci=33
67    			int z = (int) ((long) (y + 1) * c / b);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=52
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=80
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=86
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=0
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=23
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=46
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=49
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=75
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=78
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=85
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=89
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=93
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=70 bci=99
70    			if (rec) {

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=59 bci=111
59    				checkZ(z, lst, false);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 3
b = 5
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 3
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=97 bci=60
97    			checkY(b - 1 - d + coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 0
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=66 bci=14
66    			int x = (int) ((long) (y + 1) * a / b);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=67 bci=33
67    			int z = (int) ((long) (y + 1) * c / b);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=52
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=80
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=86
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=0
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=23
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=46
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=49
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=75
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=78
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=85
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=89
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=93
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=70 bci=99
70    			if (rec) {

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=71 bci=103
71    				checkX(x, lst, false);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=72 bci=111
72    				checkZ(z, lst, false);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 3
b = 5
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 3
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=98 bci=79
98    			checkZ(c - 1 - d + coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 0
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 3
b = 5
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 3
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=84 bci=103
84    				checkX(x, lst, false);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=85 bci=111
85    				checkY(y, lst, false);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=92 bci=98
92    		for (int coord = 0; coord <= d + 1; coord++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=93 bci=20
93    			checkX(coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=53 bci=14
53    			int y = (int) ((long) (x + 1) * b / a);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=54 bci=33
54    			int z = (int) ((long) (x + 1) * c / a);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=52
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=80
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=86
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=0
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=25
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=46
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=49
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=75
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=78
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=85
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=89
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=93
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=57 bci=99
57    			if (rec) {

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=58 bci=103
58    				checkY(y, lst, false);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=66 bci=14
66    			int x = (int) ((long) (y + 1) * a / b);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=67 bci=33
67    			int z = (int) ((long) (y + 1) * c / b);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=52
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=80
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=86
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=0
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=23
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=46
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=49
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=75
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=78
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=85
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=89
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=93
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=70 bci=99
70    			if (rec) {

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=59 bci=111
59    				checkZ(z, lst, false);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 3
b = 5
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 3
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=94 bci=27
94    			checkY(coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=66 bci=14
66    			int x = (int) ((long) (y + 1) * a / b);

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=67 bci=33
67    			int z = (int) ((long) (y + 1) * c / b);

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=52
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=80
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=86
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=0
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=23
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=46
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=49
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=75
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=78
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=85
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=89
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=93
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=70 bci=99
70    			if (rec) {

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=71 bci=103
71    				checkX(x, lst, false);

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=53 bci=14
53    			int y = (int) ((long) (x + 1) * b / a);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=54 bci=33
54    			int z = (int) ((long) (x + 1) * c / a);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=52
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=80
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=86
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=0
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=25
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=46
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=49
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=75
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=78
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=85
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=89
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=93
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=57 bci=99
57    			if (rec) {

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=72 bci=111
72    				checkZ(z, lst, false);

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 6
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 6
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 6
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 6
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=95 bci=34
95    			checkZ(coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 4
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=84 bci=103
84    				checkX(x, lst, false);

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=53 bci=14
53    			int y = (int) ((long) (x + 1) * b / a);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=54 bci=33
54    			int z = (int) ((long) (x + 1) * c / a);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=52
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=80
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=86
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=0
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=25
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=46
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=49
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=75
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=78
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=85
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=89
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=93
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=57 bci=99
57    			if (rec) {

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=85 bci=111
85    				checkY(y, lst, false);

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=66 bci=14
66    			int x = (int) ((long) (y + 1) * a / b);

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=67 bci=33
67    			int z = (int) ((long) (y + 1) * c / b);

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=52
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=80
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=86
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=0
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=23
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=46
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=49
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=75
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=78
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=85
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 1
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=89
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 5
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=93
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=70 bci=99
70    			if (rec) {

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 1
z = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 1
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=96 bci=41
96    			checkX(a - 1 - d + coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 1
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=97 bci=60
97    			checkY(b - 1 - d + coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 1
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=98 bci=79
98    			checkZ(c - 1 - d + coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 4
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 4
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=92 bci=98
92    		for (int coord = 0; coord <= d + 1; coord++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=93 bci=20
93    			checkX(coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 2
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=94 bci=27
94    			checkY(coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=66 bci=14
66    			int x = (int) ((long) (y + 1) * a / b);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=67 bci=33
67    			int z = (int) ((long) (y + 1) * c / b);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=52
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=80
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=86
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=0
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=23
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=46
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=49
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=75
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=78
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=85
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=89
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=93
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=70 bci=99
70    			if (rec) {

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=71 bci=103
71    				checkX(x, lst, false);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=72 bci=111
72    				checkZ(z, lst, false);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 3
b = 5
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 3
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 9
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
y = 3
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 3
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=95 bci=34
95    			checkZ(coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=79 bci=14
79    			int x = (int) ((long) (z + 1) * a / c);

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=80 bci=33
80    			int y = (int) ((long) (z + 1) * b / c);

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=52
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=80
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=86
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=0
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 0
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=23
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=44
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=32 bci=47
32    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=75
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 3
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=33 bci=78
33    				* count(z - d + 1, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countZ(), line=31 bci=85
31    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=82 bci=89
82    					- countZ(x, y, z)));

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 6
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 6
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 6
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 6
count = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=81 bci=93
81    			lst.add(new Item(1L + z + x + y, count(x, y, z + 1)

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=83 bci=99
83    			if (rec) {

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=84 bci=103
84    				checkX(x, lst, false);

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=53 bci=14
53    			int y = (int) ((long) (x + 1) * b / a);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=54 bci=33
54    			int z = (int) ((long) (x + 1) * c / a);

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=52
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=80
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=86
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=0
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 2
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=25
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=46
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=20 bci=49
20    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=75
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=21 bci=78
21    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countX(), line=19 bci=85
19    		return (int) ((long) count(x - d + 1, x + d, 0, a - 1)

main[1] Method arguments:
x = 1
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=56 bci=89
56    					- countX(x, y, z)));

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 7
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=55 bci=93
55    			lst.add(new Item(1L + x + y + z, count(x + 1, y, z)

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=57 bci=99
57    			if (rec) {

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
y = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 1
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=85 bci=111
85    				checkY(y, lst, false);

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
x = 1
y = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=66 bci=14
66    			int x = (int) ((long) (y + 1) * a / b);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=67 bci=33
67    			int z = (int) ((long) (y + 1) * c / b);

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=52
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 3
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=80
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=86
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=0
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 1
b = 3
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=23
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=46
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 3
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=26 bci=49
26    				* count(y - d + 1, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=75
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = 2
b = 4
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=27 bci=78
27    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.countY(), line=25 bci=85
25    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 2
y = 2
z = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=69 bci=89
69    					- countY(x, y, z)));

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 8
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=68 bci=93
68    			lst.add(new Item(1L + y + x + z, count(x, y + 1, z)

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=70 bci=99
70    			if (rec) {

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
x = 2
z = 3
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 2
lst = instance of java.util.ArrayList(id=450)
rec = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 2
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=96 bci=41
96    			checkX(a - 1 - d + coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 2
main[1] > 
Step completed: "thread=main", Main.checkX(), line=52 bci=0
52    		if (x >= 0 && x < a - 1) {

main[1] Method arguments:
x = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkX(), line=62 bci=119
62    	}

main[1] Method arguments:
x = 3
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=97 bci=60
97    			checkY(b - 1 - d + coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 2
main[1] > 
Step completed: "thread=main", Main.checkY(), line=65 bci=0
65    		if (y >= 0 && y < b - 1) {

main[1] Method arguments:
y = 4
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkY(), line=75 bci=119
75    	}

main[1] Method arguments:
y = 4
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=98 bci=79
98    			checkZ(c - 1 - d + coord, lst, true);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 2
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=78 bci=0
78    		if (z >= 0 && z < c - 1) {

main[1] Method arguments:
z = 5
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.checkZ(), line=88 bci=119
88    	}

main[1] Method arguments:
z = 5
lst = instance of java.util.ArrayList(id=450)
rec = true
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=92 bci=98
92    		for (int coord = 0; coord <= d + 1; coord++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
coord = 2
main[1] > 
Step completed: "thread=main", Main.fast(), line=101 bci=104
101    		int ret = 0;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
main[1] > 
Step completed: "thread=main", Main.fast(), line=103 bci=106
103    		lst.add(new Item(0, count(0, 0, 0)));

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=0
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=23
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=44
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=14 bci=47
14    				* count(y - d, y + d, 0, b - 1) % P

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=73
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=9 bci=0
9    		return Math.max(Math.min(b, d) - Math.max(a, c) + 1, 0);

main[1] Method arguments:
a = -1
b = 1
c = 0
d = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=15 bci=76
15    				* count(z - d, z + d, 0, c - 1) % P);

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=13 bci=83
13    		return (int) ((long) count(x - d, x + d, 0, a - 1)

main[1] Method arguments:
x = 0
y = 0
z = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=103 bci=119
103    		lst.add(new Item(0, count(0, 0, 0)));

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 0
count = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 0
count = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 0
count = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 0
count = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=103 bci=122
103    		lst.add(new Item(0, count(0, 0, 0)));

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=104 bci=128
104    		lst.add(new Item((long)a + b + c - 2, 0));

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=40 bci=0
40    		public Item(long idx, int count) {

main[1] Method arguments:
idx = 10
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=41 bci=4
41    			this.idx = idx;

main[1] Method arguments:
idx = 10
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=42 bci=9
42    			this.count = count;

main[1] Method arguments:
idx = 10
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.<init>(), line=43 bci=14
43    		}

main[1] Method arguments:
idx = 10
count = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.fast(), line=104 bci=158
104    		lst.add(new Item((long)a + b + c - 2, 0));

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=106 bci=164
106    		Collections.sort(lst);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=1
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=455)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=1
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=455)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=457)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=455)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=457)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=455)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=458)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=457)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=457)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=455)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=459)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=458)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=460)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=457)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=461)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=455)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=459)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=458)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=460)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=461)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=462)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=461)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=463)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=457)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=462)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=464)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=463)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=457)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=463)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=464)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=460)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=465)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=466)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=460)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=465)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=462)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=463)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=465)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=466)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=464)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=467)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=466)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=468)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=462)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=458)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=460)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=469)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=467)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=463)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=470)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=462)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=461)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=469)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=471)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=461)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=460)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=471)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=467)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=472)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=465)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=463)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=471)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=461)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=473)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=469)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=471)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=465)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=466)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=464)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=467)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=471)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=467)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=466)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=474)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=462)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=457)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=469)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=471)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=475)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=467)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=476)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=465)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=463)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=462)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=467)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=468)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=464)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=477)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=462)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=460)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=455)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=459)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=478)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=462)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=477)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=468)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=0
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=47 bci=0
47    			return Long.compare(idx, o.idx);

main[1] Method arguments:
o = instance of Main$Item(id=479)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Item.compareTo(), line=36 bci=8
36    	static class Item implements Comparable<Item> {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=168
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
i = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
i = 0
what = 8
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
i = 0
what = 8
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 0
i = 0
what = 8
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 8
i = 0
what = 8
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 8
i = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 8
i = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 8
i = 1
what = 4
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 8
i = 1
what = 4
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 8
i = 1
what = 4
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 1
what = 4
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 2
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 2
what = 6
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 2
what = 6
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 2
what = 6
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 2
what = 6
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 2
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 3
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 3
what = 6
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 3
what = 6
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 12
i = 3
what = 6
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 3
what = 6
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 3
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 4
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 4
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 4
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 4
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 4
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 4
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 5
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 5
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 5
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 5
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 5
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 5
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 6
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 6
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 6
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 18
i = 6
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 6
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 6
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 7
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 7
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 7
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 7
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 7
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 7
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 8
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 8
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 8
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 8
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 8
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 8
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 9
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 9
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 27
i = 9
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 9
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 10
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 10
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 10
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 10
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 10
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 10
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 11
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 11
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 11
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 11
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 11
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 11
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 12
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 12
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 12
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 36
i = 12
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 12
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 12
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 13
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 13
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 13
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 13
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 13
what = 9
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 13
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 14
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 14
what = 9
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 14
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 45
i = 14
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 14
what = 9
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 14
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 15
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 15
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 15
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 15
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 15
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 15
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 16
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 16
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 16
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 16
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 16
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 16
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 17
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 17
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 17
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 17
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 17
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 17
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 18
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 18
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 18
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 18
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 18
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 18
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 19
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 19
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 19
what = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 19
what = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 19
what = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 19
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 20
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 20
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 20
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 20
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 20
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 20
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 21
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 21
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 21
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 21
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 21
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 21
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 22
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 22
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 22
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 22
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 22
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 22
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 23
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 23
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 23
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 23
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 23
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 23
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 24
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 24
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 24
what = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 24
what = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 24
what = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 24
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 25
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 25
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 25
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 25
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 25
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 25
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 26
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 26
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 26
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 26
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 26
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 26
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 27
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 27
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 27
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 27
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 27
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 27
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 28
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 28
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 28
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 28
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 28
what = 0
len = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 28
main[1] > 
Step completed: "thread=main", Main.fast(), line=108 bci=182
108    			int what = lst.get(i).count;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 29
main[1] > 
Step completed: "thread=main", Main.fast(), line=109 bci=197
109    			long len = lst.get(i + 1).idx - lst.get(i).idx;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 29
what = 0
main[1] > 
Step completed: "thread=main", Main.fast(), line=110 bci=228
110    			if (what < 0) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 29
what = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=113 bci=240
113    			ret += (int) (len * what % P);

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 29
what = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=114 bci=254
114    			if (ret >= P) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 29
what = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.fast(), line=107 bci=265
107    		for (int i = 0; i < lst.size() - 1; i++) {

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
i = 29
main[1] > 
Step completed: "thread=main", Main.fast(), line=119 bci=271
119    		return ret;

main[1] Method arguments:
Local variables:
lst = instance of java.util.ArrayList(id=450)
ret = 54
main[1] > 
Step completed: "thread=main", Main.submit(), line=171 bci=40
171    		out.println(fast());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.submit(), line=172 bci=43
172    	}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=221 bci=47
221    		out.close();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=222 bci=54
222    	}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=231 bci=7
231    		new Main();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=232 bci=8
232    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
