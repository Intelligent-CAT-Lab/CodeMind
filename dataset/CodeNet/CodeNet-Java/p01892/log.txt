some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=33 bci=0
33    	private static final InputStream in = System.in;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=34 bci=6
34    	private static final PrintWriter out = new PrintWriter(System.out);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=27 bci=0
27    		out.flush();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=28 bci=6
28    		new Main().solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=6 bci=0
6    public class Main {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=35 bci=4
35    	private final byte[] buffer = new byte[2048];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=36 bci=13
36    	private int p = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=37 bci=18
37    	private int buflen = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=28 bci=13
28    		new Main().solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=10 bci=0
10    		A = nextLong();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=88 bci=0
88    		return Long.parseLong(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=73 bci=0
73    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=54 bci=0
54    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=42 bci=13
42    		p = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=44 bci=18
44    			buflen = in.read(buffer);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=47 bci=32
47    		}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=48 bci=40
48    		if (buflen <= 0)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=50 bci=49
50    		return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=54 bci=4
54    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=62 bci=12
62    			return true;

main[1] Method arguments:
ch = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=54 bci=20
54    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=57 bci=36
57    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=57 bci=40
57    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=73 bci=4
73    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=75 bci=15
75    		StringBuilder sb = new StringBuilder();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=76 bci=23
76    		int b = -1;

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=25
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = -1
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=0
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=4
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=69 bci=9
69    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=30
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = -1
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=62 bci=12
62    			return true;

main[1] Method arguments:
ch = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=35
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 49
main[1] > 
Step completed: "thread=main", Main.next(), line=78 bci=38
78    			sb.appendCodePoint(b);

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 49
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=25
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 49
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=0
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=4
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=69 bci=9
69    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=30
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 49
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=62 bci=12
62    			return true;

main[1] Method arguments:
ch = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=35
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 57
main[1] > 
Step completed: "thread=main", Main.next(), line=78 bci=38
78    			sb.appendCodePoint(b);

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 57
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=25
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 57
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=0
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=4
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=69 bci=9
69    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=30
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 57
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=63 bci=14
63    		return false;

main[1] Method arguments:
ch = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=35
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 32
main[1] > 
Step completed: "thread=main", Main.next(), line=80 bci=47
80    		return sb.toString();

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 32
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=88 bci=4
88    		return Long.parseLong(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=10 bci=5
10    		A = nextLong();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=11 bci=8
11    		B = nextLong();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=88 bci=0
88    		return Long.parseLong(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=73 bci=0
73    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=54 bci=0
54    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=54 bci=4
54    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=62 bci=12
62    			return true;

main[1] Method arguments:
ch = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=54 bci=20
54    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=57 bci=36
57    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=57 bci=40
57    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=73 bci=4
73    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=75 bci=15
75    		StringBuilder sb = new StringBuilder();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=76 bci=23
76    		int b = -1;

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=25
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = -1
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=0
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=4
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=69 bci=9
69    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=30
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = -1
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=62 bci=12
62    			return true;

main[1] Method arguments:
ch = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=35
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 51
main[1] > 
Step completed: "thread=main", Main.next(), line=78 bci=38
78    			sb.appendCodePoint(b);

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 51
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=25
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 51
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=0
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=4
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=69 bci=9
69    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=30
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 51
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=62 bci=12
62    			return true;

main[1] Method arguments:
ch = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=35
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 48
main[1] > 
Step completed: "thread=main", Main.next(), line=78 bci=38
78    			sb.appendCodePoint(b);

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 48
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=25
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 48
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=0
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=4
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=69 bci=9
69    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=30
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 48
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=63 bci=14
63    		return false;

main[1] Method arguments:
ch = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=35
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 32
main[1] > 
Step completed: "thread=main", Main.next(), line=80 bci=47
80    		return sb.toString();

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 32
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=88 bci=4
88    		return Long.parseLong(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=11 bci=13
11    		B = nextLong();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=12 bci=16
12    		N = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=84 bci=0
84    		return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=73 bci=0
73    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=54 bci=0
54    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=54 bci=4
54    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=62 bci=12
62    			return true;

main[1] Method arguments:
ch = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=54 bci=20
54    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=57 bci=36
57    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=57 bci=40
57    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=73 bci=4
73    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=75 bci=15
75    		StringBuilder sb = new StringBuilder();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=76 bci=23
76    		int b = -1;

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=447)
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=25
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=447)
b = -1
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=0
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=4
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=69 bci=9
69    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=30
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=447)
b = -1
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=62 bci=12
62    			return true;

main[1] Method arguments:
ch = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=35
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=447)
b = 51
main[1] > 
Step completed: "thread=main", Main.next(), line=78 bci=38
78    			sb.appendCodePoint(b);

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=447)
b = 51
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=25
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=447)
b = 51
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=0
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=40 bci=0
40    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=41 bci=11
41    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=67 bci=4
67    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=69 bci=9
69    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=30
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=447)
b = 51
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=61 bci=0
61    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=63 bci=14
63    		return false;

main[1] Method arguments:
ch = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=77 bci=35
77    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=447)
b = 10
main[1] > 
Step completed: "thread=main", Main.next(), line=80 bci=47
80    		return sb.toString();

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=447)
b = 10
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=84 bci=4
84    		return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=12 bci=21
12    		N = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=14 bci=24
14    		long ans = Math.abs(A - B);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=15 bci=37
15    		for(int i = 1;i <= N;i++){

main[1] Method arguments:
Local variables:
ans = 11
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=47
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 11
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=59
17    				if(i * B % j != 0)continue;

main[1] Method arguments:
Local variables:
ans = 11
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=78
18    				ans = Math.min(ans, Math.abs(A - i * B / j));

main[1] Method arguments:
Local variables:
ans = 11
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=102
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 11
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=59
17    				if(i * B % j != 0)continue;

main[1] Method arguments:
Local variables:
ans = 11
i = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=78
18    				ans = Math.min(ans, Math.abs(A - i * B / j));

main[1] Method arguments:
Local variables:
ans = 11
i = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=102
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 4
i = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=59
17    				if(i * B % j != 0)continue;

main[1] Method arguments:
Local variables:
ans = 4
i = 1
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=78
18    				ans = Math.min(ans, Math.abs(A - i * B / j));

main[1] Method arguments:
Local variables:
ans = 4
i = 1
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=102
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 4
i = 1
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=15 bci=108
15    		for(int i = 1;i <= N;i++){

main[1] Method arguments:
Local variables:
ans = 4
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=47
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 4
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=59
17    				if(i * B % j != 0)continue;

main[1] Method arguments:
Local variables:
ans = 4
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=78
18    				ans = Math.min(ans, Math.abs(A - i * B / j));

main[1] Method arguments:
Local variables:
ans = 4
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=102
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 4
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=59
17    				if(i * B % j != 0)continue;

main[1] Method arguments:
Local variables:
ans = 4
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=78
18    				ans = Math.min(ans, Math.abs(A - i * B / j));

main[1] Method arguments:
Local variables:
ans = 4
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=102
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 4
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=59
17    				if(i * B % j != 0)continue;

main[1] Method arguments:
Local variables:
ans = 4
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=78
18    				ans = Math.min(ans, Math.abs(A - i * B / j));

main[1] Method arguments:
Local variables:
ans = 4
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=102
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=15 bci=108
15    		for(int i = 1;i <= N;i++){

main[1] Method arguments:
Local variables:
ans = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=47
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=59
17    				if(i * B % j != 0)continue;

main[1] Method arguments:
Local variables:
ans = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=78
18    				ans = Math.min(ans, Math.abs(A - i * B / j));

main[1] Method arguments:
Local variables:
ans = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=102
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=59
17    				if(i * B % j != 0)continue;

main[1] Method arguments:
Local variables:
ans = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=78
18    				ans = Math.min(ans, Math.abs(A - i * B / j));

main[1] Method arguments:
Local variables:
ans = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=102
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=59
17    				if(i * B % j != 0)continue;

main[1] Method arguments:
Local variables:
ans = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=78
18    				ans = Math.min(ans, Math.abs(A - i * B / j));

main[1] Method arguments:
Local variables:
ans = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=102
16    			for(int j = 1;j <= N;j++){

main[1] Method arguments:
Local variables:
ans = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=15 bci=108
15    		for(int i = 1;i <= N;i++){

main[1] Method arguments:
Local variables:
ans = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=22 bci=114
22    		out.println(ans);

main[1] Method arguments:
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=24 bci=121
24    	}

main[1] Method arguments:
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=29 bci=16
29    		out.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=30 bci=22
30    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
