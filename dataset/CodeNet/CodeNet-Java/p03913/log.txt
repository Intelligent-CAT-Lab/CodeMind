some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=8 bci=0
8    		new Main().run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=5 bci=0
5    public class Main {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=8 bci=7
8    		new Main().run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.run(), line=13 bci=0
13    		Scanner sc = new Scanner(System.in);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=14 bci=11
14    		solver(sc.nextLong(), sc.nextLong());

main[1] Method arguments:
Local variables:
sc = instance of java.util.Scanner(id=582)
main[1] > 
Step completed: "thread=main", Main.solver(), line=18 bci=0
18    		long ans = n;

main[1] Method arguments:
n = 8
a = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=3
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
c = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
c = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
c = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
c = 2
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
c = 2
i = 2
j = 0
res = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
c = 2
i = 2
j = 0
res = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
c = 2
i = 2
j = 0
res = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
c = 2
i = 2
j = 0
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
c = 2
i = 2
j = 0
res = 4
den = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 8
m = 2
c = 2
i = 2
j = 0
res = 7
den = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 2
j = 1
res = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 2
j = 1
res = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 2
j = 1
res = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 2
j = 1
res = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 2
j = 1
res = 3
den = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 2
j = 1
res = 7
den = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 0
res = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 0
res = 5
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 0
res = 5
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 0
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 0
res = 5
den = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 0
res = 7
den = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 1
res = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 1
res = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 1
res = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 1
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 1
res = 4
den = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 1
res = 7
den = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 0
res = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 0
res = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 0
res = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 5
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 5
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 5
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 5
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 5
n = 1
Local variables:
ret = 5
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 25
n = 0
Local variables:
ret = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 0
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 0
res = 6
den = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 0
res = 8
den = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 1
res = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 1
res = 5
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 1
res = 5
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 5
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 5
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 5
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 1
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 1
res = 5
den = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 1
res = 7
den = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
c = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 0
res = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 0
res = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 0
res = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 0
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 0
res = 8
den = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 0
res = 9
den = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 1
res = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 1
res = 7
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 1
res = 7
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 1
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 1
res = 7
den = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 1
res = 9
den = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 2
res = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 2
res = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 2
res = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 2
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 2
res = 6
den = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 2
res = 8
den = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 0
res = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 0
res = 10
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 0
res = 10
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 0
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 0
res = 10
den = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 0
res = 11
den = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 1
res = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 1
res = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 1
res = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 1
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 1
res = 9
den = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 1
res = 10
den = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 2
res = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 2
res = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 2
res = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 2
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 2
res = 8
den = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 2
res = 9
den = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 0
res = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 0
res = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 0
res = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 5
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 5
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 5
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 5
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 25
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 25
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 25
n = 1
Local variables:
ret = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 625
n = 0
Local variables:
ret = 25
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 0
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 0
res = 12
den = 25
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 0
res = 13
den = 25
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 1
res = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 1
res = 11
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 1
res = 11
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 5
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 5
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 5
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 5
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 5
n = 1
Local variables:
ret = 5
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 25
n = 0
Local variables:
ret = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 1
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 1
res = 11
den = 20
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 1
res = 12
den = 20
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 2
res = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 2
res = 10
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 2
res = 10
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 5
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 5
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 5
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 2
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 2
res = 10
den = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 2
res = 11
den = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
c = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 0
res = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 0
res = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 0
res = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 0
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 0
res = 12
den = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 0
res = 13
den = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 1
res = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 1
res = 11
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 1
res = 11
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 1
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 1
res = 11
den = 18
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 1
res = 12
den = 18
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 2
res = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 2
res = 10
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 2
res = 10
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 2
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 2
res = 10
den = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 2
res = 11
den = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 3
res = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 3
res = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 3
res = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 3
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 3
res = 9
den = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 3
res = 10
den = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 0
res = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 0
res = 15
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 0
res = 15
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 0
res = 15
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 0
res = 15
den = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 0
res = 16
den = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 1
res = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 1
res = 14
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 1
res = 14
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 1
res = 14
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 1
res = 14
den = 48
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 1
res = 15
den = 48
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 2
res = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 2
res = 13
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 2
res = 13
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 2
res = 13
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 2
res = 13
den = 36
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 2
res = 14
den = 36
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 3
res = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 3
res = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 3
res = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 3
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 3
res = 12
den = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 3
res = 13
den = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 0
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 0
res = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 0
res = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 0
res = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 0
res = 16
den = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 0
res = 17
den = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 1
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 1
res = 15
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 1
res = 15
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 1
res = 15
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 1
res = 15
den = 54
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 1
res = 16
den = 54
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 2
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 2
res = 14
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 2
res = 14
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 2
res = 14
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 2
res = 14
den = 36
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 2
res = 15
den = 36
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 3
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 3
res = 13
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 3
res = 13
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 3
res = 13
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 3
res = 13
den = 24
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 3
res = 14
den = 24
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 4
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 4
res = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 4
res = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 4
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 4
res = 12
den = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 4
res = 13
den = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 0
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 0
res = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 0
res = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 0
res = 20
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 0
res = 20
den = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 0
res = 21
den = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 1
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 1
res = 19
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 1
res = 19
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 1
res = 19
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 1
res = 19
den = 192
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 1
res = 20
den = 192
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 2
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 2
res = 18
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 2
res = 18
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 2
res = 18
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 2
res = 18
den = 144
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 2
res = 19
den = 144
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 3
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 3
res = 17
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 3
res = 17
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 3
res = 17
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 3
res = 17
den = 108
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 3
res = 18
den = 108
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 4
res = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 4
res = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 4
res = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 4
res = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 4
res = 16
den = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 4
res = 17
den = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 0
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 0
res = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 0
res = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 0
res = 20
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 0
res = 20
den = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 0
res = 21
den = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 1
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 1
res = 19
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 1
res = 19
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 1
res = 19
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 1
res = 19
den = 162
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 1
res = 20
den = 162
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 2
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 2
res = 18
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 2
res = 18
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 2
res = 18
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 2
res = 18
den = 108
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 2
res = 19
den = 108
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 3
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 3
res = 17
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 3
res = 17
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 3
res = 17
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 3
res = 17
den = 72
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 3
res = 18
den = 72
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 4
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 4
res = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 4
res = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 4
res = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 4
res = 16
den = 48
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 4
res = 17
den = 48
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 5
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 5
res = 15
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 5
res = 15
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 5
res = 15
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 5
res = 15
den = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 5
res = 16
den = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 0
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 0
res = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 0
res = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 0
res = 25
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 0
res = 25
den = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 0
res = 26
den = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 1
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 1
res = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 1
res = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 1
res = 24
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 1
res = 24
den = 768
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 1
res = 25
den = 768
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 2
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 2
res = 23
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 2
res = 23
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 2
res = 23
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 2
res = 23
den = 576
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 2
res = 24
den = 576
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 3
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 3
res = 22
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 3
res = 22
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 3
res = 22
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 3
res = 22
den = 432
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 3
res = 23
den = 432
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 4
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 4
res = 21
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 4
res = 21
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 4
res = 21
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 4
res = 21
den = 324
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 4
res = 22
den = 324
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 5
res = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 5
res = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 5
res = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 5
res = 20
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 5
res = 20
den = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 5
res = 21
den = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 0
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 0
res = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 0
res = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 0
res = 24
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 0
res = 24
den = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 0
res = 25
den = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 1
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 1
res = 23
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 1
res = 23
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 1
res = 23
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 1
res = 23
den = 486
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 1
res = 24
den = 486
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 2
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 2
res = 22
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 2
res = 22
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 2
res = 22
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 2
res = 22
den = 324
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 2
res = 23
den = 324
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 3
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 3
res = 21
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 3
res = 21
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 3
res = 21
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 3
res = 21
den = 216
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 3
res = 22
den = 216
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 4
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 4
res = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 4
res = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 4
res = 20
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 4
res = 20
den = 144
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 4
res = 21
den = 144
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 5
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 5
res = 19
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 5
res = 19
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 5
res = 19
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 5
res = 19
den = 96
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 5
res = 20
den = 96
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 6
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 6
res = 18
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 6
res = 18
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 6
res = 18
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 6
res = 18
den = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 6
res = 19
den = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 0
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 0
res = 30
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 0
res = 30
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 0
res = 30
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 0
res = 30
den = 4096
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 0
res = 31
den = 4096
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 1
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 1
res = 29
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 1
res = 29
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 1
res = 29
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 1
res = 29
den = 3072
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 1
res = 30
den = 3072
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 2
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 2
res = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 2
res = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 2
res = 28
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 2
res = 28
den = 2304
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 2
res = 29
den = 2304
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 3
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 3
res = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 3
res = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 3
res = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 3
res = 27
den = 1728
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 3
res = 28
den = 1728
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 4
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 4
res = 26
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 4
res = 26
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 4
res = 26
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 4
res = 26
den = 1296
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 4
res = 27
den = 1296
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 5
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 5
res = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 5
res = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 5
res = 25
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 5
res = 25
den = 972
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 5
res = 26
den = 972
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 6
res = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 6
res = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 6
res = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 6
res = 24
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 6
res = 24
den = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 6
res = 25
den = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 0
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 0
res = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 0
res = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 0
res = 28
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 0
res = 28
den = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 0
res = 29
den = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 1
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 1
res = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 1
res = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 1
res = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 1
res = 27
den = 1458
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 1
res = 28
den = 1458
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 2
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 2
res = 26
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 2
res = 26
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 2
res = 26
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 2
res = 26
den = 972
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 2
res = 27
den = 972
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 3
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 3
res = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 3
res = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 3
res = 25
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 3
res = 25
den = 648
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 3
res = 26
den = 648
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 4
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 4
res = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 4
res = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 4
res = 24
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 4
res = 24
den = 432
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 4
res = 25
den = 432
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 5
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 5
res = 23
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 5
res = 23
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 5
res = 23
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 5
res = 23
den = 288
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 5
res = 24
den = 288
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 6
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 6
res = 22
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 6
res = 22
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 6
res = 22
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 6
res = 22
den = 192
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 6
res = 23
den = 192
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 7
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 7
res = 21
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 7
res = 21
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 7
res = 21
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 7
res = 21
den = 128
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 7
res = 22
den = 128
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 0
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 0
res = 35
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 0
res = 35
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16384
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 16384
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 0
res = 35
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 0
res = 35
den = 16384
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 0
res = 36
den = 16384
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 1
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 1
res = 34
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 1
res = 34
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 1
res = 34
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 1
res = 34
den = 12288
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 1
res = 35
den = 12288
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 2
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 2
res = 33
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 2
res = 33
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 2
res = 33
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 2
res = 33
den = 9216
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 2
res = 34
den = 9216
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 3
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 3
res = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 3
res = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 3
res = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 3
res = 32
den = 6912
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 3
res = 33
den = 6912
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 4
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 4
res = 31
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 4
res = 31
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 4
res = 31
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 4
res = 31
den = 5184
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 4
res = 32
den = 5184
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 5
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 5
res = 30
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 5
res = 30
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 5
res = 30
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 5
res = 30
den = 3888
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 5
res = 31
den = 3888
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 6
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 6
res = 29
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 6
res = 29
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 6
res = 29
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 6
res = 29
den = 2916
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 6
res = 30
den = 2916
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 7
res = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 7
res = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 7
res = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 7
res = 28
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 7
res = 28
den = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 7
res = 29
den = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 0
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 0
res = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 0
res = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 0
res = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 0
res = 32
den = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 0
res = 33
den = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 1
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 1
res = 31
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 1
res = 31
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 1
res = 31
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 1
res = 31
den = 4374
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 1
res = 32
den = 4374
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 2
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 2
res = 30
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 2
res = 30
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 2
res = 30
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 2
res = 30
den = 2916
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 2
res = 31
den = 2916
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 3
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 3
res = 29
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 3
res = 29
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 3
res = 29
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 3
res = 29
den = 1944
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 3
res = 30
den = 1944
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 4
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 4
res = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 4
res = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 4
res = 28
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 4
res = 28
den = 1296
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 4
res = 29
den = 1296
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 5
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 5
res = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 5
res = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 5
res = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 5
res = 27
den = 864
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 5
res = 28
den = 864
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 6
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 6
res = 26
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 6
res = 26
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 6
res = 26
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 6
res = 26
den = 576
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 6
res = 27
den = 576
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 7
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 7
res = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 7
res = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 7
res = 25
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 7
res = 25
den = 384
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 7
res = 26
den = 384
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 8
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 8
res = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 8
res = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 8
res = 24
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 8
res = 24
den = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 8
res = 25
den = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 0
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 0
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 0
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 65536
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4294967296
n = 0
Local variables:
ret = 65536
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 0
res = 40
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 0
res = 40
den = 65536
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 0
res = 41
den = 65536
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 1
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 1
res = 39
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 1
res = 39
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16384
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 16384
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 1
res = 39
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 1
res = 39
den = 49152
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 1
res = 40
den = 49152
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 2
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 2
res = 38
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 2
res = 38
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 2
res = 38
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 2
res = 38
den = 36864
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 2
res = 39
den = 36864
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 3
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 3
res = 37
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 3
res = 37
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 3
res = 37
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 3
res = 37
den = 27648
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 3
res = 38
den = 27648
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 4
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 4
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 4
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 4
res = 36
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 4
res = 36
den = 20736
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 4
res = 37
den = 20736
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 5
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 5
res = 35
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 5
res = 35
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 5
res = 35
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 5
res = 35
den = 15552
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 5
res = 36
den = 15552
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 6
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 6
res = 34
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 6
res = 34
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 6
res = 34
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 6
res = 34
den = 11664
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 6
res = 35
den = 11664
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 7
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 7
res = 33
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 7
res = 33
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 7
res = 33
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 7
res = 33
den = 8748
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 7
res = 34
den = 8748
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 8
res = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 8
res = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 8
res = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 8
res = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 8
res = 32
den = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 8
res = 33
den = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 0
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 0
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 0
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 0
res = 36
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 0
res = 36
den = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 0
res = 37
den = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 1
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 1
res = 35
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 1
res = 35
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 1
res = 35
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 1
res = 35
den = 13122
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 1
res = 36
den = 13122
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 2
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 2
res = 34
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 2
res = 34
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 2
res = 34
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 2
res = 34
den = 8748
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 2
res = 35
den = 8748
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 3
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 3
res = 33
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 3
res = 33
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 3
res = 33
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 3
res = 33
den = 5832
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 3
res = 34
den = 5832
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 4
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 4
res = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 4
res = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 4
res = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 4
res = 32
den = 3888
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 4
res = 33
den = 3888
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 5
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 5
res = 31
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 5
res = 31
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 5
res = 31
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 5
res = 31
den = 2592
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 5
res = 32
den = 2592
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 6
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 6
res = 30
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 6
res = 30
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 6
res = 30
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 6
res = 30
den = 1728
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 6
res = 31
den = 1728
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 7
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 7
res = 29
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 7
res = 29
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 7
res = 29
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 7
res = 29
den = 1152
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 7
res = 30
den = 1152
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 8
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 8
res = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 8
res = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 8
res = 28
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 8
res = 28
den = 768
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 8
res = 29
den = 768
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 9
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 9
res = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 512
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 512
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 9
res = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 9
res = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 9
res = 27
den = 512
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 9
res = 28
den = 512
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 0
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 0
res = 45
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 0
res = 45
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 262144
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4294967296
n = 0
Local variables:
ret = 262144
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 0
res = 45
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 0
res = 45
den = 262144
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 0
res = 46
den = 262144
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 1
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 1
res = 44
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 1
res = 44
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 65536
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4294967296
n = 0
Local variables:
ret = 65536
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 1
res = 44
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 1
res = 44
den = 196608
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 1
res = 45
den = 196608
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 2
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 2
res = 43
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 2
res = 43
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16384
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 16384
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 2
res = 43
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 2
res = 43
den = 147456
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 2
res = 44
den = 147456
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 3
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 3
res = 42
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 3
res = 42
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 3
res = 42
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 3
res = 42
den = 110592
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 3
res = 43
den = 110592
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 4
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 4
res = 41
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 4
res = 41
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 4
res = 41
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 4
res = 41
den = 82944
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 4
res = 42
den = 82944
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 5
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 5
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 5
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 5
res = 40
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 5
res = 40
den = 62208
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 5
res = 41
den = 62208
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 6
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 6
res = 39
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 6
res = 39
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 6
res = 39
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 6
res = 39
den = 46656
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 6
res = 40
den = 46656
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 7
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 7
res = 38
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 7
res = 38
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 7
res = 38
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 7
res = 38
den = 34992
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 7
res = 39
den = 34992
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 8
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 8
res = 37
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 8
res = 37
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 8
res = 37
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 8
res = 37
den = 26244
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 8
res = 38
den = 26244
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 9
res = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 9
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 9
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 9
res = 36
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 9
res = 36
den = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 9
res = 37
den = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 0
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 0
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 0
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 59049
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 59049
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 0
res = 40
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 0
res = 40
den = 59049
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 0
res = 41
den = 59049
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 1
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 1
res = 39
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 1
res = 39
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 1
res = 39
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 1
res = 39
den = 39366
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 1
res = 40
den = 39366
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 2
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 2
res = 38
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 2
res = 38
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 2
res = 38
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 2
res = 38
den = 26244
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 2
res = 39
den = 26244
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 3
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 3
res = 37
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 3
res = 37
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 3
res = 37
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 3
res = 37
den = 17496
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 3
res = 38
den = 17496
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 4
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 4
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 4
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 4
res = 36
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 4
res = 36
den = 11664
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 4
res = 37
den = 11664
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 5
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 5
res = 35
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 5
res = 35
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 5
res = 35
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 5
res = 35
den = 7776
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 5
res = 36
den = 7776
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 6
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 6
res = 34
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 6
res = 34
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 6
res = 34
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 6
res = 34
den = 5184
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 6
res = 35
den = 5184
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 7
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 7
res = 33
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 7
res = 33
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 7
res = 33
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 7
res = 33
den = 3456
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 7
res = 34
den = 3456
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 8
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 8
res = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 8
res = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 8
res = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 8
res = 32
den = 2304
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 8
res = 33
den = 2304
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 9
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 9
res = 31
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 512
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 512
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 9
res = 31
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 9
res = 31
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 9
res = 31
den = 1536
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 9
res = 32
den = 1536
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 10
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 10
res = 30
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 10
res = 30
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 10
res = 30
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 10
res = 30
den = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 10
res = 31
den = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
j = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 0
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 0
res = 50
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 0
res = 50
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 5
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 1048576
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4294967296
n = 0
Local variables:
ret = 1048576
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 0
res = 50
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 0
res = 50
den = 1048576
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 0
res = 51
den = 1048576
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 1
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 1
res = 49
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 1
res = 49
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 262144
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4294967296
n = 0
Local variables:
ret = 262144
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 1
res = 49
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 1
res = 49
den = 786432
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 1
res = 50
den = 786432
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 2
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 2
res = 48
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 2
res = 48
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 65536
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4294967296
n = 0
Local variables:
ret = 65536
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 2
res = 48
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 2
res = 48
den = 589824
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 2
res = 49
den = 589824
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 3
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 3
res = 47
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 3
res = 47
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16384
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 16384
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 3
res = 47
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 3
res = 47
den = 442368
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 3
res = 48
den = 442368
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 4
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 4
res = 46
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 4
res = 46
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 4
res = 46
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 4
res = 46
den = 331776
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 4
res = 47
den = 331776
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 5
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 5
res = 45
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 5
res = 45
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 5
res = 45
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 5
res = 45
den = 248832
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 5
res = 46
den = 248832
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 6
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 6
res = 44
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 6
res = 44
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 6
res = 44
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 6
res = 44
den = 186624
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 6
res = 45
den = 186624
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 7
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 7
res = 43
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 7
res = 43
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 7
res = 43
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 7
res = 43
den = 139968
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 7
res = 44
den = 139968
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 8
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 8
res = 42
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 8
res = 42
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 8
res = 42
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 8
res = 42
den = 104976
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 8
res = 43
den = 104976
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 9
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 9
res = 41
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 9
res = 41
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 9
res = 41
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 9
res = 41
den = 78732
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 9
res = 42
den = 78732
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 10
res = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 10
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 59049
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 59049
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 10
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 10
res = 40
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 10
res = 40
den = 59049
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 10
res = 41
den = 59049
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
j = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 0
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 0
res = 44
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 0
res = 44
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 177147
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 177147
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 0
res = 44
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 0
res = 44
den = 177147
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 0
res = 45
den = 177147
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 1
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 1
res = 43
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 1
res = 43
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 59049
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 59049
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 1
res = 43
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 1
res = 43
den = 118098
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 1
res = 44
den = 118098
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 2
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 2
res = 42
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 2
res = 42
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 2
res = 42
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 2
res = 42
den = 78732
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 2
res = 43
den = 78732
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 3
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 3
res = 41
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 3
res = 41
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 3
res = 41
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 3
res = 41
den = 52488
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 3
res = 42
den = 52488
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 4
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 4
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 4
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 4
res = 40
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 4
res = 40
den = 34992
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 4
res = 41
den = 34992
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 5
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 5
res = 39
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 5
res = 39
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 5
res = 39
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 5
res = 39
den = 23328
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 5
res = 40
den = 23328
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 6
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 6
res = 38
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 6
res = 38
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 6
res = 38
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 6
res = 38
den = 15552
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 6
res = 39
den = 15552
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 7
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 7
res = 37
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 7
res = 37
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 7
res = 37
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 7
res = 37
den = 10368
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 7
res = 38
den = 10368
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 8
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 8
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 8
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 8
res = 36
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 8
res = 36
den = 6912
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 8
res = 37
den = 6912
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 9
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 9
res = 35
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 512
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 512
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 9
res = 35
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 9
res = 35
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 9
res = 35
den = 4608
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 9
res = 36
den = 4608
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 10
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 10
res = 34
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 10
res = 34
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 10
res = 34
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 10
res = 34
den = 3072
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 10
res = 35
den = 3072
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 11
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 11
res = 33
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 11
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 2048
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 2048
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 11
res = 33
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 11
res = 33
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 11
res = 33
den = 2048
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 11
res = 34
den = 2048
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
j = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 0
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 0
res = 55
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 0
res = 55
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 11
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 5
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 4194304
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4294967296
n = 0
Local variables:
ret = 4194304
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 0
res = 55
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 0
res = 55
den = 4194304
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 0
res = 56
den = 4194304
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 1
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 1
res = 54
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 1
res = 54
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 5
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 1048576
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4294967296
n = 0
Local variables:
ret = 1048576
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 1
res = 54
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 1
res = 54
den = 3145728
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 1
res = 55
den = 3145728
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 2
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 2
res = 53
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 2
res = 53
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 9
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 262144
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4294967296
n = 0
Local variables:
ret = 262144
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 2
res = 53
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 2
res = 53
den = 2359296
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 2
res = 54
den = 2359296
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 3
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 3
res = 52
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 3
res = 52
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 65536
n = 1
Local variables:
ret = 65536
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4294967296
n = 0
Local variables:
ret = 65536
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 3
res = 52
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 3
res = 52
den = 1769472
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 3
res = 53
den = 1769472
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 4
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 4
res = 51
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 4
res = 51
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 7
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16384
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 16384
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 4
res = 51
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 4
res = 51
den = 1327104
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 4
res = 52
den = 1327104
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 5
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 5
res = 50
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 5
res = 50
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 5
res = 50
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 5
res = 50
den = 995328
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 5
res = 51
den = 995328
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 6
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 6
res = 49
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 6
res = 49
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 6
res = 49
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 6
res = 49
den = 746496
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 6
res = 50
den = 746496
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 7
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 7
res = 48
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 7
res = 48
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 7
res = 48
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 7
res = 48
den = 559872
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 7
res = 49
den = 559872
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 8
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 8
res = 47
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 8
res = 47
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 8
res = 47
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 8
res = 47
den = 419904
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 8
res = 48
den = 419904
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 9
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 9
res = 46
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 9
res = 46
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 9
res = 46
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 9
res = 46
den = 314928
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 9
res = 47
den = 314928
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 10
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 10
res = 45
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 59049
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 59049
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 10
res = 45
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 10
res = 45
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 10
res = 45
den = 236196
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 10
res = 46
den = 236196
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 11
res = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 11
res = 44
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 177147
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 177147
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 11
res = 44
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 4
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 11
res = 44
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 11
res = 44
den = 177147
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 11
res = 45
den = 177147
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
j = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=184
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
c = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=19 bci=193
19    		for (int m = 2; m <= 40; ++m) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=20 bci=13
20    			long c = (long) Math.pow(n, 1.0 / m);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
main[1] > 
Step completed: "thread=main", Main.solver(), line=21 bci=26
21    			for (long i = Math.max(c - 2, 2); i <= c + 2; ++i) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=22 bci=52
22    				if (Math.log(i) * (m - 1) > 40 * Math.log(2))

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=81
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 0
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 0
res = 48
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 2
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 0
res = 48
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 12
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 12
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 12
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 3
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 531441
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 531441
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 0
res = 48
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 0
res = 48
den = 531441
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 0
res = 49
den = 531441
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 1
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 1
res = 47
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 4
n = 0
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 1
res = 47
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 11
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 177147
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 177147
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 1
res = 47
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 1
res = 47
den = 354294
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 1
res = 48
den = 354294
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 2
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 2
res = 46
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 2
res = 46
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 5
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 59049
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 59049
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 2
res = 46
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 2
res = 46
den = 236196
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 2
res = 47
den = 236196
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 3
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 3
res = 45
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 16
n = 0
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 3
res = 45
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 9
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 19683
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 3
res = 45
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 3
res = 45
den = 157464
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 3
res = 46
den = 157464
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 4
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 4
res = 44
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 4
res = 44
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 6561
n = 1
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 43046721
n = 0
Local variables:
ret = 6561
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 4
res = 44
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 4
res = 44
den = 104976
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 4
res = 45
den = 104976
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 5
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 5
res = 43
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 32
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 5
res = 43
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 7
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 2187
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 5
res = 43
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 5
res = 43
den = 69984
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 5
res = 44
den = 69984
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 5
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 6
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 6
res = 42
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 64
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 6
res = 42
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 3
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 729
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 6
res = 42
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 6
res = 42
den = 46656
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 6
res = 43
den = 46656
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 6
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 7
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 7
res = 41
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 7
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 3
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 1
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 256
n = 0
Local variables:
ret = 128
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 7
res = 41
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 5
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 243
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 7
res = 41
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 7
res = 41
den = 31104
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 7
res = 42
den = 31104
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 7
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 8
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 8
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 8
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 256
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 8
res = 40
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 4
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 81
n = 1
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 6561
n = 0
Local variables:
ret = 81
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 8
res = 40
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 8
res = 40
den = 20736
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 8
res = 41
den = 20736
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 8
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 9
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 9
res = 39
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 9
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 4
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 512
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 512
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 9
res = 39
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 3
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 27
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 9
res = 39
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 9
res = 39
den = 13824
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 9
res = 40
den = 13824
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 10
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 10
res = 38
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 10
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 1024
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 10
res = 38
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 2
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 9
n = 1
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 81
n = 0
Local variables:
ret = 9
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 10
res = 38
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 10
res = 38
den = 9216
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 10
res = 39
den = 9216
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 10
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 11
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 11
res = 37
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 2
n = 11
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 11
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 5
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 2
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 2048
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 2048
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 11
res = 37
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 1
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 9
n = 0
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 11
res = 37
main[1] > 
Step completed: "thread=main", Main.solver(), line=28 bci=155
28    					res += (n + den - 1) / den;

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 11
res = 37
den = 6144
main[1] > 
Step completed: "thread=main", Main.solver(), line=29 bci=169
29    					ans = Math.min(ans, res);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 11
res = 38
den = 6144
main[1] > 
Step completed: "thread=main", Main.solver(), line=24 bci=178
24    				for (int j = 0; j <= m - 1; ++j) {

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 11
main[1] > 
Step completed: "thread=main", Main.solver(), line=25 bci=93
25    					long res = a * (m - 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=26 bci=102
26    					res += j * i + (m - 1 - j) * (i + 1);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 12
res = 12
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=127
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 12
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 2
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 12
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 2
n = 12
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 2
n = 12
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 4
n = 6
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 16
n = 3
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=9
39    			if (n % 2 == 1) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=40 bci=19
40    				ret *= a;

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=25
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 256
n = 1
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 65536
n = 0
Local variables:
ret = 4096
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=136
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 12
res = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=0
37    		long ret = 1;

main[1] Method arguments:
a = 3
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=3
38    		for (; n > 0; n >>= 1, a *= a) {

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=43 bci=36
43    		return ret;

main[1] Method arguments:
a = 3
n = 0
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solver(), line=27 bci=152
27    					long den = pow(i, j) * pow(i + 1, m - 1 - j);

main[1] Method arguments:
n = 8
a = 1
Local variables:
ans = 7
m = 13
c = 1
i = 2
j = 12
res = 36
main[1] 