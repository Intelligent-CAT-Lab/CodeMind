some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=12 bci=0
12            boolean local = false;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=13 bci=2
13            boolean async = false;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
main[1] > 
Step completed: "thread=main", Main.main(), line=15 bci=4
15            Charset charset = Charset.forName("ascii");

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
main[1] > 
Step completed: "thread=main", Main.main(), line=17 bci=10
17            FastIO io = local ? new FastIO(new FileInputStream("D:\\DATABASE\\TESTCASE\\Code.in"), System.out, charset) : new FastIO(System.in, System.out, charset);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
charset = instance of sun.nio.cs.US_ASCII(id=444)
main[1] > 
Step completed: "thread=main", Main$FastIO.<init>(), line=162 bci=0
162            public FastIO(InputStream is, OutputStream os, Charset charset) {

main[1] Method arguments:
is = instance of java.io.BufferedInputStream(id=446)
os = instance of java.io.PrintStream(id=447)
charset = instance of sun.nio.cs.US_ASCII(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastIO.<init>(), line=152 bci=4
152            public final StringBuilder cache = new StringBuilder(1 << 13);

main[1] Method arguments:
is = instance of java.io.BufferedInputStream(id=446)
os = instance of java.io.PrintStream(id=447)
charset = instance of sun.nio.cs.US_ASCII(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastIO.<init>(), line=156 bci=18
156            private StringBuilder defaultStringBuf = new StringBuilder(1 << 13);

main[1] Method arguments:
is = instance of java.io.BufferedInputStream(id=446)
os = instance of java.io.PrintStream(id=447)
charset = instance of sun.nio.cs.US_ASCII(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastIO.<init>(), line=157 bci=32
157            private byte[] buf = new byte[1 << 13];

main[1] Method arguments:
is = instance of java.io.BufferedInputStream(id=446)
os = instance of java.io.PrintStream(id=447)
charset = instance of sun.nio.cs.US_ASCII(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastIO.<init>(), line=163 bci=41
163                this.is = is;

main[1] Method arguments:
is = instance of java.io.BufferedInputStream(id=446)
os = instance of java.io.PrintStream(id=447)
charset = instance of sun.nio.cs.US_ASCII(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastIO.<init>(), line=164 bci=46
164                this.os = os;

main[1] Method arguments:
is = instance of java.io.BufferedInputStream(id=446)
os = instance of java.io.PrintStream(id=447)
charset = instance of sun.nio.cs.US_ASCII(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastIO.<init>(), line=165 bci=51
165                this.charset = charset;

main[1] Method arguments:
is = instance of java.io.BufferedInputStream(id=446)
os = instance of java.io.PrintStream(id=447)
charset = instance of sun.nio.cs.US_ASCII(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastIO.<init>(), line=166 bci=56
166            }

main[1] Method arguments:
is = instance of java.io.BufferedInputStream(id=446)
os = instance of java.io.PrintStream(id=447)
charset = instance of sun.nio.cs.US_ASCII(id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=17 bci=51
17            FastIO io = local ? new FastIO(new FileInputStream("D:\\DATABASE\\TESTCASE\\Code.in"), System.out, charset) : new FastIO(System.in, System.out, charset);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
charset = instance of sun.nio.cs.US_ASCII(id=444)
main[1] > 
Step completed: "thread=main", Main.main(), line=18 bci=53
18            Task task = new Task(io, new Debug(local));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
charset = instance of sun.nio.cs.US_ASCII(id=444)
io = instance of Main$FastIO(id=448)
main[1] > 
Step completed: "thread=main", Main$Debug.<init>(), line=342 bci=0
342            public Debug(boolean allowDebug) {

main[1] Method arguments:
allowDebug = false
Local variables:
main[1] > 
Step completed: "thread=main", Main$Debug.<init>(), line=343 bci=4
343                this.allowDebug = allowDebug;

main[1] Method arguments:
allowDebug = false
Local variables:
main[1] > 
Step completed: "thread=main", Main$Debug.<init>(), line=344 bci=9
344            }

main[1] Method arguments:
allowDebug = false
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=18 bci=67
18            Task task = new Task(io, new Debug(local));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
charset = instance of sun.nio.cs.US_ASCII(id=444)
io = instance of Main$FastIO(id=448)
main[1] > 
Step completed: "thread=main", Main$Task.<init>(), line=43 bci=0
43            public Task(FastIO io, Debug debug) {

main[1] Method arguments:
io = instance of Main$FastIO(id=448)
debug = instance of Main$Debug(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.<init>(), line=39 bci=4
39            int inf = (int) 1e8;

main[1] Method arguments:
io = instance of Main$FastIO(id=448)
debug = instance of Main$Debug(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.<init>(), line=40 bci=10
40            long lInf = (long) 1e18;

main[1] Method arguments:
io = instance of Main$FastIO(id=448)
debug = instance of Main$Debug(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.<init>(), line=41 bci=17
41            double dInf = 1e50;

main[1] Method arguments:
io = instance of Main$FastIO(id=448)
debug = instance of Main$Debug(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.<init>(), line=44 bci=24
44                this.io = io;

main[1] Method arguments:
io = instance of Main$FastIO(id=448)
debug = instance of Main$Debug(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.<init>(), line=45 bci=29
45                this.debug = debug;

main[1] Method arguments:
io = instance of Main$FastIO(id=448)
debug = instance of Main$Debug(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.<init>(), line=46 bci=34
46            }

main[1] Method arguments:
io = instance of Main$FastIO(id=448)
debug = instance of Main$Debug(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=18 bci=70
18            Task task = new Task(io, new Debug(local));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
charset = instance of sun.nio.cs.US_ASCII(id=444)
io = instance of Main$FastIO(id=448)
main[1] > 
Step completed: "thread=main", Main.main(), line=20 bci=72
20            if (async) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
charset = instance of sun.nio.cs.US_ASCII(id=444)
io = instance of Main$FastIO(id=448)
task = instance of Main$Task(id=452)
main[1] > 
Step completed: "thread=main", Main.main(), line=26 bci=113
26                task.run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
charset = instance of sun.nio.cs.US_ASCII(id=444)
io = instance of Main$FastIO(id=448)
task = instance of Main$Task(id=452)
main[1] > 
Step completed: "thread=main", Main$Task.run(), line=50 bci=0
50                solve();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=54 bci=0
54                char[] s = new char[1000000];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=55 bci=5
55                int n = io.readString(s, 0);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=297 bci=0
297                skipBlank();

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastIO.skipBlank(), line=188 bci=0
188                while (next >= 0 && next <= 32) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.skipBlank(), line=189 bci=16
189                    next = read();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=173 bci=0
173                while (bufLen == bufOffset) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=174 bci=11
174                    bufOffset = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=176 bci=16
176                        bufLen = is.read(buf);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=179 bci=31
179                    }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=180 bci=44
180                    if (bufLen == -1) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=173 bci=0
173                while (bufLen == bufOffset) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=184 bci=54
184                return buf[bufOffset++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.skipBlank(), line=189 bci=21
189                    next = read();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.skipBlank(), line=188 bci=0
188                while (next >= 0 && next <= 32) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.skipBlank(), line=191 bci=27
191            }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=299 bci=4
299                int originalOffset = offset;

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=300 bci=6
300                while (next > 32) {

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 0
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=301 bci=15
301                    data[offset++] = (char) next;

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 0
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=302 bci=26
302                    next = read();

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 1
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=173 bci=0
173                while (bufLen == bufOffset) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=184 bci=54
184                return buf[bufOffset++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=302 bci=31
302                    next = read();

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 1
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=300 bci=6
300                while (next > 32) {

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 1
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=301 bci=15
301                    data[offset++] = (char) next;

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 1
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=302 bci=26
302                    next = read();

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 2
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=173 bci=0
173                while (bufLen == bufOffset) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=184 bci=54
184                return buf[bufOffset++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=302 bci=31
302                    next = read();

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 2
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=300 bci=6
300                while (next > 32) {

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 2
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=301 bci=15
301                    data[offset++] = (char) next;

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 2
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=302 bci=26
302                    next = read();

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 3
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=173 bci=0
173                while (bufLen == bufOffset) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.read(), line=184 bci=54
184                return buf[bufOffset++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=302 bci=31
302                    next = read();

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 3
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=300 bci=6
300                while (next > 32) {

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 3
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$FastIO.readString(), line=305 bci=37
305                return offset - originalOffset;

main[1] Method arguments:
data = instance of char[1000000] (id=453)
offset = 3
Local variables:
originalOffset = 0
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=55 bci=14
55                int n = io.readString(s, 0);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=57 bci=15
57                KMPAutomaton kmp = new KMPAutomaton(n);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=104 bci=0
104            public KMPAutomaton(int cap) {

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=101 bci=4
101            int matchLast = 0;

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=105 bci=9
105                data = new char[cap + 2];

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=106 bci=18
106                fail = new int[cap + 2];

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=107 bci=27
107                fail[0] = -1;

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=108 bci=34
108                buildLast = 0;

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=109 bci=39
109                length = cap;

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=110 bci=44
110            }

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=57 bci=23
57                KMPAutomaton kmp = new KMPAutomaton(n);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=58 bci=24
58                KMPAutomaton inv = new KMPAutomaton(n);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=104 bci=0
104            public KMPAutomaton(int cap) {

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=101 bci=4
101            int matchLast = 0;

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=105 bci=9
105                data = new char[cap + 2];

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=106 bci=18
106                fail = new int[cap + 2];

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=107 bci=27
107                fail[0] = -1;

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=108 bci=34
108                buildLast = 0;

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=109 bci=39
109                length = cap;

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.<init>(), line=110 bci=44
110            }

main[1] Method arguments:
cap = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=58 bci=32
58                KMPAutomaton inv = new KMPAutomaton(n);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=59 bci=34
59                for (int i = 0; i < n; i++) {

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=60 bci=43
60                    kmp.build(s[i]);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
i = 0
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=143 bci=0
143                buildLast++;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=10
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=136 bci=0
136                while (trace >= 0 && data[trace + 1] != c) {

main[1] Method arguments:
c = a
trace = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=139 bci=26
139                return trace;

main[1] Method arguments:
c = a
trace = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=34
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=145 bci=37
145                data[buildLast] = c;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=146 bci=47
146            }

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=61 bci=51
61                    inv.build(s[n - i - 1]);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
i = 0
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=143 bci=0
143                buildLast++;

main[1] Method arguments:
c = b
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=10
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = b
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=136 bci=0
136                while (trace >= 0 && data[trace + 1] != c) {

main[1] Method arguments:
c = b
trace = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=139 bci=26
139                return trace;

main[1] Method arguments:
c = b
trace = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=34
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = b
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=145 bci=37
145                data[buildLast] = c;

main[1] Method arguments:
c = b
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=146 bci=47
146            }

main[1] Method arguments:
c = b
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=59 bci=64
59                for (int i = 0; i < n; i++) {

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
i = 0
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=60 bci=43
60                    kmp.build(s[i]);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
i = 1
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=143 bci=0
143                buildLast++;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=10
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=136 bci=0
136                while (trace >= 0 && data[trace + 1] != c) {

main[1] Method arguments:
c = a
trace = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=139 bci=26
139                return trace;

main[1] Method arguments:
c = a
trace = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=34
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=145 bci=37
145                data[buildLast] = c;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=146 bci=47
146            }

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=61 bci=51
61                    inv.build(s[n - i - 1]);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
i = 1
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=143 bci=0
143                buildLast++;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=10
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=136 bci=0
136                while (trace >= 0 && data[trace + 1] != c) {

main[1] Method arguments:
c = a
trace = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=137 bci=16
137                    trace = fail[trace];

main[1] Method arguments:
c = a
trace = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=136 bci=0
136                while (trace >= 0 && data[trace + 1] != c) {

main[1] Method arguments:
c = a
trace = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=139 bci=26
139                return trace;

main[1] Method arguments:
c = a
trace = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=34
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=145 bci=37
145                data[buildLast] = c;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=146 bci=47
146            }

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=59 bci=64
59                for (int i = 0; i < n; i++) {

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
i = 1
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=60 bci=43
60                    kmp.build(s[i]);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
i = 2
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=143 bci=0
143                buildLast++;

main[1] Method arguments:
c = b
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=10
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = b
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=136 bci=0
136                while (trace >= 0 && data[trace + 1] != c) {

main[1] Method arguments:
c = b
trace = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=137 bci=16
137                    trace = fail[trace];

main[1] Method arguments:
c = b
trace = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=136 bci=0
136                while (trace >= 0 && data[trace + 1] != c) {

main[1] Method arguments:
c = b
trace = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=137 bci=16
137                    trace = fail[trace];

main[1] Method arguments:
c = b
trace = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=136 bci=0
136                while (trace >= 0 && data[trace + 1] != c) {

main[1] Method arguments:
c = b
trace = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=139 bci=26
139                return trace;

main[1] Method arguments:
c = b
trace = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=34
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = b
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=145 bci=37
145                data[buildLast] = c;

main[1] Method arguments:
c = b
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=146 bci=47
146            }

main[1] Method arguments:
c = b
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=61 bci=51
61                    inv.build(s[n - i - 1]);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
i = 2
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=143 bci=0
143                buildLast++;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=10
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=136 bci=0
136                while (trace >= 0 && data[trace + 1] != c) {

main[1] Method arguments:
c = a
trace = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=137 bci=16
137                    trace = fail[trace];

main[1] Method arguments:
c = a
trace = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=136 bci=0
136                while (trace >= 0 && data[trace + 1] != c) {

main[1] Method arguments:
c = a
trace = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.visit(), line=139 bci=26
139                return trace;

main[1] Method arguments:
c = a
trace = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=144 bci=34
144                fail[buildLast] = visit(c, fail[buildLast - 1]) + 1;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=145 bci=37
145                data[buildLast] = c;

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$KMPAutomaton.build(), line=146 bci=47
146            }

main[1] Method arguments:
c = a
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=59 bci=64
59                for (int i = 0; i < n; i++) {

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
i = 2
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=63 bci=70
63                int p = n - kmp.fail[n];

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=64 bci=80
64                if (n % p != 0) {

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
p = 3
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=68 bci=90
68                if (p == 1) {

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
p = 3
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=72 bci=103
72                if (p == n) {

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
p = 3
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=73 bci=109
73                    answer(1, 1);

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
p = 3
main[1] > 
Step completed: "thread=main", Main$Task.answer(), line=92 bci=0
92                io.cache.append(len).append('\n').append(cnt);

main[1] Method arguments:
len = 1
cnt = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.answer(), line=93 bci=21
93            }

main[1] Method arguments:
len = 1
cnt = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Task.solve(), line=74 bci=115
74                    return;

main[1] Method arguments:
Local variables:
s = instance of char[1000000] (id=453)
n = 3
kmp = instance of Main$KMPAutomaton(id=455)
inv = instance of Main$KMPAutomaton(id=456)
p = 3
main[1] > 
Step completed: "thread=main", Main$Task.run(), line=51 bci=4
51            }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=29 bci=118
29            if (local) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
charset = instance of sun.nio.cs.US_ASCII(id=444)
io = instance of Main$FastIO(id=448)
task = instance of Main$Task(id=452)
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=170
33            io.flush();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
charset = instance of sun.nio.cs.US_ASCII(id=444)
io = instance of Main$FastIO(id=448)
task = instance of Main$Task(id=452)
main[1] > 
Step completed: "thread=main", Main$FastIO.flush(), line=328 bci=0
328                os.write(cache.toString().getBytes(charset));

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.flush(), line=329 bci=21
329                os.flush();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.flush(), line=330 bci=28
330                cache.setLength(0);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastIO.flush(), line=331 bci=36
331            }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=175
34        }

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
local = false
async = false
charset = instance of sun.nio.cs.US_ASCII(id=444)
io = instance of Main$FastIO(id=448)
task = instance of Main$Task(id=452)
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
