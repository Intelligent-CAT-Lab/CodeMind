{
    "0": {
        "prompt": "Consider the following code:\nimport java.io.*;\n        import java.math.*;\n        import java.util.*;\n        import java.lang.*;\n\npublic class Main implements Runnable {\n    static class InputReader {\n        private InputStream stream;\n        private byte[] buf = new byte[1024];\n        private int curChar;\n        private int numChars;\n        private SpaceCharFilter filter;\n        private BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\n        public InputReader(InputStream stream) {\n            this.stream = stream;\n        }\n\n        public int read() {\n            if (numChars == -1)\n                throw new InputMismatchException();\n\n            if (curChar >= numChars) {\n                curChar = 0;\n                try {\n                    numChars = stream.read(buf);\n                } catch (IOException e) {\n                    throw new InputMismatchException();\n                }\n\n                if (numChars <= 0)\n                    return -1;\n            }\n            return buf[curChar++];\n        }\n\n        public String nextLine() {\n            String str = \"\";\n            try {\n                str = br.readLine();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            return str;\n        }\n\n        public int nextInt() {\n            int c = read();\n\n            while (isSpaceChar(c))\n                c = read();\n\n            int sgn = 1;\n\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n\n            int res = 0;\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res * sgn;\n        }\n\n        public long nextLong() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            long res = 0;\n\n            do {\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            while (!isSpaceChar(c));\n            return res * sgn;\n        }\n\n        public double nextDouble() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            int sgn = 1;\n            if (c == '-') {\n                sgn = -1;\n                c = read();\n            }\n            double res = 0;\n            while (!isSpaceChar(c) && c != '.') {\n                if (c == 'e' || c == 'E')\n                    return res * Math.pow(10, nextInt());\n                if (c < '0' || c > '9')\n                    throw new InputMismatchException();\n                res *= 10;\n                res += c - '0';\n                c = read();\n            }\n            if (c == '.') {\n                c = read();\n                double m = 1;\n                while (!isSpaceChar(c)) {\n                    if (c == 'e' || c == 'E')\n                        return res * Math.pow(10, nextInt());\n                    if (c < '0' || c > '9')\n                        throw new InputMismatchException();\n                    m /= 10;\n                    res += (c - '0') * m;\n                    c = read();\n                }\n            }\n            return res * sgn;\n        }\n\n        public String readString() {\n            int c = read();\n            while (isSpaceChar(c))\n                c = read();\n            StringBuilder res = new StringBuilder();\n            do {\n                res.appendCodePoint(c);\n                c = read();\n            }\n            while (!isSpaceChar(c));\n\n            return res.toString();\n        }\n\n        public boolean isSpaceChar(int c) {\n            if (filter != null)\n                return filter.isSpaceChar(c);\n            return c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n        }\n\n        public String next() {\n            return readString();\n        }\n\n        public interface SpaceCharFilter {\n            public boolean isSpaceChar(int ch);\n        }\n    }\n\n    public static void main(String args[]) throws Exception {\n        new Thread(null, new Main(), \"Main\", 1 << 26).start();\n    }\n\n    long modPow(long a, long p, long m) {\n        if (a == 1) return 1;\n        long ans = 1;\n        while (p > 0) {\n            if (p % 2 == 1) ans = (ans * a) % m;\n            a = (a * a) % m;\n            p >>= 1;\n        }\n        return ans;\n    }\n\n    long modInv(long a, long m) {\n        return modPow(a, m - 2, m);\n    }\n\n\n\n    PrintWriter out;\n    InputReader sc;\n\n    public void run() {\n        sc = new InputReader(System.in);\n        // Scanner sc=new Scanner(System.in);\n        //  Random sc=new Random();\n        out = new PrintWriter(System.out);\n\n        // credit goes to Stefan Dascalescu\n        // https://www.youtube.com/watch?v=iYS8l9_A-vY\n\n        int n=sc.nextInt();\n        long m=sc.nextLong();\n        long k=sc.nextLong();\n        long ans=0;\n        fact=new long[n+1];\n        ifact=new long[n+1];\n        fact[0]=fact[1]=ifact[0]=ifact[1]=1;\n        for (int i = 1; i <=n ; i++) {\n            fact[i]=mul(fact[i-1],i);\n            ifact[i]=modInv(fact[i],mod);\n        }\n        for (int i = 0; i <=k ; i++) {\n            ans=add(ans,mul(m,mul(modPow(m-1,n-(i+1),mod),NcR(n-1,i))));\n        }\n        out.println(ans);\n\n\n        out.close();\n    }\n    long NcR(int n,int r){\n        return mul(fact[n],mul(ifact[r],ifact[n-r]));\n    }\n    long fact[],ifact[];\n    long mod=998244353;\n\n    long sub(long a,long b){\n        a%=mod;\n        b%=mod;\n        return ((a-b)%mod+mod)%mod;\n    }\n\n    long mul(long a,long b){\n        a%=mod;\n        b%=mod;\n        return (a*b)%mod;\n    }\n\n    long add(long a,long b){\n        a%=mod;\n        b%=mod;\n        return (a+b)%mod;\n    }\n\n}Gicen the following input:\n3 2 1\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "6\n"
    }
}