some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=13 bci=0
13            Field f = System.out.getClass().getDeclaredField("autoFlush");

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=14 bci=12
14            f.setAccessible(true);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
f = instance of java.lang.reflect.Field(id=444)
main[1] > 
Step completed: "thread=main", Main.main(), line=15 bci=17
15            f.set(System.out, false);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
f = instance of java.lang.reflect.Field(id=444)
main[1] > 
Step completed: "thread=main", Main.main(), line=16 bci=28
16            execute(System.in, System.out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
f = instance of java.lang.reflect.Field(id=444)
main[1] > 
Step completed: "thread=main", Main.execute(), line=20 bci=0
20            ExtendedScanner s = new ExtendedScanner(in);

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
out = instance of java.io.PrintStream(id=452)
Local variables:
main[1] > 
Step completed: "thread=main", ExtendedScanner.<init>(), line=313 bci=0
313        public ExtendedScanner(InputStream in) {super(in);}

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", BasicScanner.<init>(), line=66 bci=0
66        public BasicScanner(InputStream in) {this.in = in;}

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", BasicScanner.<init>(), line=63 bci=4
63        private final byte[] buf = new byte[1024];

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", BasicScanner.<init>(), line=64 bci=13
64        private int ptr = 0;

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", BasicScanner.<init>(), line=65 bci=18
65        private int buflen = 0;

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", BasicScanner.<init>(), line=66 bci=23
66        public BasicScanner(InputStream in) {this.in = in;}

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", ExtendedScanner.<init>(), line=313 bci=5
313        public ExtendedScanner(InputStream in) {super(in);}

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main.execute(), line=20 bci=8
20            ExtendedScanner s = new ExtendedScanner(in);

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
out = instance of java.io.PrintStream(id=452)
Local variables:
main[1] > 
Step completed: "thread=main", Main.execute(), line=21 bci=9
21            Out o = new Out(out);

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
out = instance of java.io.PrintStream(id=452)
Local variables:
s = instance of ExtendedScanner(id=455)
main[1] > 
Step completed: "thread=main", Out.<init>(), line=139 bci=0
139        public Out(OutputStream out) {

main[1] Method arguments:
out = instance of java.io.PrintStream(id=452)
Local variables:
main[1] > 
Step completed: "thread=main", Out.<init>(), line=135 bci=4
135        private byte[] buf = new byte[1024];

main[1] Method arguments:
out = instance of java.io.PrintStream(id=452)
Local variables:
main[1] > 
Step completed: "thread=main", Out.<init>(), line=136 bci=13
136        private int ptr = 0;

main[1] Method arguments:
out = instance of java.io.PrintStream(id=452)
Local variables:
main[1] > 
Step completed: "thread=main", Out.<init>(), line=140 bci=18
140            this.out = out;

main[1] Method arguments:
out = instance of java.io.PrintStream(id=452)
Local variables:
main[1] > 
Step completed: "thread=main", Out.<init>(), line=141 bci=23
141        }

main[1] Method arguments:
out = instance of java.io.PrintStream(id=452)
Local variables:
main[1] > 
Step completed: "thread=main", Main.execute(), line=21 bci=17
21            Out o = new Out(out);

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
out = instance of java.io.PrintStream(id=452)
Local variables:
s = instance of ExtendedScanner(id=455)
main[1] > 
Step completed: "thread=main", Main.execute(), line=22 bci=18
22            solve(s, o);

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
out = instance of java.io.PrintStream(id=452)
Local variables:
s = instance of ExtendedScanner(id=455)
o = instance of Out(id=457)
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=0
28            int n = sc.nextInt();

main[1] Method arguments:
sc = instance of ExtendedScanner(id=455)
out = instance of Out(id=457)
Local variables:
main[1] > 
Step completed: "thread=main", BasicScanner.nextInt(), line=125 bci=0
125        public int nextInt() {return Math.toIntExact(nextLong());}

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=112 bci=0
112            if (!hasNext()) throw new NoSuchElementException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNext(), line=76 bci=0
76            while (hasNextByte() && !(33 <= buf[ptr] && buf[ptr] <= 126)) ptr++;

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNextByte(), line=68 bci=0
68            if (ptr < buflen) return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNextByte(), line=69 bci=13
69            ptr = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNextByte(), line=70 bci=18
70            try {buflen = in.read(buf);}

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNextByte(), line=71 bci=33
71            catch (final IOException e) {e.printStackTrace();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNextByte(), line=72 bci=41
72            return buflen > 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNext(), line=76 bci=4
76            while (hasNextByte() && !(33 <= buf[ptr] && buf[ptr] <= 126)) ptr++;

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNext(), line=77 bci=48
77            return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNextByte(), line=68 bci=0
68            if (ptr < buflen) return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNext(), line=77 bci=52
77            return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=112 bci=4
112            if (!hasNext()) throw new NoSuchElementException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=113 bci=15
113            long n = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=114 bci=17
114            boolean minus = false;

main[1] Method arguments:
Local variables:
n = 0
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=115 bci=19
115            int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
minus = false
main[1] > 
Step completed: "thread=main", BasicScanner.readByte(), line=74 bci=0
74        private int readByte() {return hasNextByte() ? buf[ptr++] : -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNextByte(), line=68 bci=0
68            if (ptr < buflen) return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.readByte(), line=74 bci=4
74        private int readByte() {return hasNextByte() ? buf[ptr++] : -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=115 bci=23
115            int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
minus = false
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=116 bci=25
116            if (b == '-') {minus = true; b = readByte();}

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=117 bci=40
117            if (b < '0' || '9' < b) throw new NumberFormatException();

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=119 bci=62
119                if ('0' <= b && b <= '9') n = n * 10 + b - '0';

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=122 bci=132
122                b = readByte();

main[1] Method arguments:
Local variables:
n = 3
minus = false
b = 51
main[1] > 
Step completed: "thread=main", BasicScanner.readByte(), line=74 bci=0
74        private int readByte() {return hasNextByte() ? buf[ptr++] : -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.hasNextByte(), line=68 bci=0
68            if (ptr < buflen) return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.readByte(), line=74 bci=4
74        private int readByte() {return hasNextByte() ? buf[ptr++] : -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=122 bci=136
122                b = readByte();

main[1] Method arguments:
Local variables:
n = 3
minus = false
b = 51
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=119 bci=62
119                if ('0' <= b && b <= '9') n = n * 10 + b - '0';

main[1] Method arguments:
Local variables:
n = 3
minus = false
b = 10
main[1] > 
Step completed: "thread=main", BasicScanner.nextLong(), line=120 bci=93
120                else if (b == -1 || !(33 <= b && b <= 126)) return minus ? -n : n;

main[1] Method arguments:
Local variables:
n = 3
minus = false
b = 10
main[1] > 
Step completed: "thread=main", BasicScanner.nextInt(), line=125 bci=4
125        public int nextInt() {return Math.toIntExact(nextLong());}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=4
28            int n = sc.nextInt();

main[1] Method arguments:
sc = instance of ExtendedScanner(id=455)
out = instance of Out(id=457)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=5
29            if ((n & -n) == n) {

main[1] Method arguments:
sc = instance of ExtendedScanner(id=455)
out = instance of Out(id=457)
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=21
33            out.writeln("Yes");

main[1] Method arguments:
sc = instance of ExtendedScanner(id=455)
out = instance of Out(id=457)
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Out.writeln(), line=157 bci=0
157        public Out writeln(String s) {return write(s).write('\n');}

main[1] Method arguments:
s = "Yes"
Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=173 bci=0
173                Field strValueField = s.getClass().getDeclaredField("value");

main[1] Method arguments:
s = "Yes"
Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=174 bci=10
174                strValueField.setAccessible(true);

main[1] Method arguments:
s = "Yes"
Local variables:
strValueField = instance of java.lang.reflect.Field(id=459)
main[1] > 
Step completed: "thread=main", Out.write(), line=175 bci=15
175                byte[] b = (byte[]) strValueField.get(s);

main[1] Method arguments:
s = "Yes"
Local variables:
strValueField = instance of java.lang.reflect.Field(id=459)
main[1] > 
Step completed: "thread=main", Out.write(), line=193 bci=163
193            } catch (Exception e) {e.printStackTrace();}

main[1] Method arguments:
s = "Yes"
Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=194 bci=168
194            return this;

main[1] Method arguments:
s = "Yes"
Local variables:
main[1] > 
Step completed: "thread=main", Out.writeln(), line=157 bci=5
157        public Out writeln(String s) {return write(s).write('\n');}

main[1] Method arguments:
s = "Yes"
Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=221 bci=0
221            ensureCapacity(ptr + 1);

main[1] Method arguments:
c = 

Local variables:
main[1] > 
Step completed: "thread=main", Out.ensureCapacity(), line=281 bci=0
281            if (cap > AUTO_FLUSH_THRETHOLD) {

main[1] Method arguments:
cap = 1
Local variables:
main[1] > 
Step completed: "thread=main", Out.ensureCapacity(), line=284 bci=10
284            if (cap >= buf.length) {

main[1] Method arguments:
cap = 1
Local variables:
main[1] > 
Step completed: "thread=main", Out.ensureCapacity(), line=291 bci=61
291        }

main[1] Method arguments:
cap = 1
Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=222 bci=10
222            buf[ptr++] = (byte) c;

main[1] Method arguments:
c = 

Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=223 bci=28
223            return this;

main[1] Method arguments:
c = 

Local variables:
main[1] > 
Step completed: "thread=main", Out.writeln(), line=157 bci=10
157        public Out writeln(String s) {return write(s).write('\n');}

main[1] Method arguments:
s = "Yes"
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=27
33            out.writeln("Yes");

main[1] Method arguments:
sc = instance of ExtendedScanner(id=455)
out = instance of Out(id=457)
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=34 bci=28
34            if (n == 3) {

main[1] Method arguments:
sc = instance of ExtendedScanner(id=455)
out = instance of Out(id=457)
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=33
35                out.writeln("1 2\n2 3\n3 4\n4 5\n5 6");

main[1] Method arguments:
sc = instance of ExtendedScanner(id=455)
out = instance of Out(id=457)
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Out.writeln(), line=157 bci=0
157        public Out writeln(String s) {return write(s).write('\n');}

main[1] Method arguments:
s = "1 2
2 3
3 4
4 5
5 6"
Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=173 bci=0
173                Field strValueField = s.getClass().getDeclaredField("value");

main[1] Method arguments:
s = "1 2
2 3
3 4
4 5
5 6"
Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=174 bci=10
174                strValueField.setAccessible(true);

main[1] Method arguments:
s = "1 2
2 3
3 4
4 5
5 6"
Local variables:
strValueField = instance of java.lang.reflect.Field(id=467)
main[1] > 
Step completed: "thread=main", Out.write(), line=175 bci=15
175                byte[] b = (byte[]) strValueField.get(s);

main[1] Method arguments:
s = "1 2
2 3
3 4
4 5
5 6"
Local variables:
strValueField = instance of java.lang.reflect.Field(id=467)
main[1] > 
Step completed: "thread=main", Out.write(), line=193 bci=163
193            } catch (Exception e) {e.printStackTrace();}

main[1] Method arguments:
s = "1 2
2 3
3 4
4 5
5 6"
Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=194 bci=168
194            return this;

main[1] Method arguments:
s = "1 2
2 3
3 4
4 5
5 6"
Local variables:
main[1] > 
Step completed: "thread=main", Out.writeln(), line=157 bci=5
157        public Out writeln(String s) {return write(s).write('\n');}

main[1] Method arguments:
s = "1 2
2 3
3 4
4 5
5 6"
Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=221 bci=0
221            ensureCapacity(ptr + 1);

main[1] Method arguments:
c = 

Local variables:
main[1] > 
Step completed: "thread=main", Out.ensureCapacity(), line=281 bci=0
281            if (cap > AUTO_FLUSH_THRETHOLD) {

main[1] Method arguments:
cap = 2
Local variables:
main[1] > 
Step completed: "thread=main", Out.ensureCapacity(), line=284 bci=10
284            if (cap >= buf.length) {

main[1] Method arguments:
cap = 2
Local variables:
main[1] > 
Step completed: "thread=main", Out.ensureCapacity(), line=291 bci=61
291        }

main[1] Method arguments:
cap = 2
Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=222 bci=10
222            buf[ptr++] = (byte) c;

main[1] Method arguments:
c = 

Local variables:
main[1] > 
Step completed: "thread=main", Out.write(), line=223 bci=28
223            return this;

main[1] Method arguments:
c = 

Local variables:
main[1] > 
Step completed: "thread=main", Out.writeln(), line=157 bci=10
157        public Out writeln(String s) {return write(s).write('\n');}

main[1] Method arguments:
s = "1 2
2 3
3 4
4 5
5 6"
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=39
35                out.writeln("1 2\n2 3\n3 4\n4 5\n5 6");

main[1] Method arguments:
sc = instance of ExtendedScanner(id=455)
out = instance of Out(id=457)
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=40
36                return;

main[1] Method arguments:
sc = instance of ExtendedScanner(id=455)
out = instance of Out(id=457)
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main.execute(), line=23 bci=23
23            o.flush();

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
out = instance of java.io.PrintStream(id=452)
Local variables:
s = instance of ExtendedScanner(id=455)
o = instance of Out(id=457)
main[1] > 
Step completed: "thread=main", Out.flush(), line=145 bci=0
145                out.write(buf, 0, ptr);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Out.flush(), line=146 bci=16
146                out.flush();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Out.flush(), line=147 bci=23
147                ptr = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Out.flush(), line=148 bci=28
148            } catch (IOException e) {e.printStackTrace();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Out.flush(), line=149 bci=36
149        }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.execute(), line=24 bci=27
24            o.close();

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
out = instance of java.io.PrintStream(id=452)
Local variables:
s = instance of ExtendedScanner(id=455)
o = instance of Out(id=457)
main[1] > 
Step completed: "thread=main", Out.close(), line=152 bci=0
152            try {out.close();} catch (IOException e) {e.printStackTrace();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Out.close(), line=153 bci=15
153        }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.execute(), line=25 bci=31
25        }

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=451)
out = instance of java.io.PrintStream(id=452)
Local variables:
s = instance of ExtendedScanner(id=455)
o = instance of Out(id=457)
main[1] > 
Step completed: "thread=main", Main.main(), line=17 bci=37
17        }

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
f = instance of java.lang.reflect.Field(id=444)
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
