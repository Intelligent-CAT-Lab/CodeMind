{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN",
        "predict": "mon\nEND-OF-OUTPUT"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\nimport java.util.Stack;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().solve();\n\t}\n\t\n\tvoid solve(){\n\t\tScanner sc=new Scanner(System.in);\n\t\tlong N=sc.nextLong();\n\t\tfor(long h=1;h<=3500;h++) {\n\t\t\tfor(long n=1;n<=3500;n++) {\n\t\t\t\tif(4*h*n-N*n-N*h!=0 && (N*h*n)/(4*h*n-N*n-N*h)>0 && (N*h*n)%(4*h*n-N*n-N*h)==0) {\n\t\t\t\t\tSystem.out.println(h+\" \"+n+\" \"+(N*h*n)/(4*h*n-N*n-N*h));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\nGicen the following input:\n2\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "1 2 2\n",
        "predict": "1 1 1\nEND-OF-OUTPUT"
    }
}