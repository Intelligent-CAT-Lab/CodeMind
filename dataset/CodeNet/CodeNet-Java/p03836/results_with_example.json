{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN",
        "predict": "mon\nEND-OF-OUTPUT"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int sx = sc.nextInt();\n        int sy = sc.nextInt();\n        int tx = sc.nextInt();\n        int ty = sc.nextInt();\n\n        System.out.println( solve(sx, sy, tx, ty) );\n    }\n\n    private static String solve(int sx, int sy, int tx, int ty) {\n        int dx = tx - sx;\n        int dy = ty - sy;\n\n        StringBuilder b = new StringBuilder();\n        // sx < tx, sy < ty \u306a\u306e\u3067 \u7279\u5b9a\u306e\u5f62\u5f0f\u3067\u884c\u3051\u308b\n        // first\n        b.append( renzoku('R', dx) );\n        b.append( renzoku('U', dy) );\n\n        // second\n        b.append( renzoku('L', dx) );\n        b.append( renzoku('D', dy) );\n\n        // third\n        b.append( renzoku('D', 1) );\n        b.append( renzoku('R', dx + 1) );\n        b.append( renzoku('U', dy + 1) );\n        b.append( renzoku('L', 1) );\n\n        // forth\n        b.append( renzoku('U', 1) );\n        b.append( renzoku('L', dx + 1) );\n        b.append( renzoku('D', dy + 1) );\n        b.append( renzoku('R', 1) );\n\n        return b.toString();\n    }\n\n    private static String renzoku(char c, int n) {\n        char[] chars = new char[n];\n        Arrays.fill(chars, c);\n        return new String(chars);\n    }\n}\nGicen the following input:\n0 0 1 2\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "UURDDLLUUURRDRDDDLLU\n",
        "predict": "RRUULLDDRRUULLDDRRUULLDDRRUULLDD\nEND-OF-OUTPUT"
    }
}