some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=8 bci=0
8    	static int[] memo = new int[MAX_N]; // memo[i]:i=Nのときの最低値

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=10 bci=7
10    		Arrays.fill(memo, -1); // 初期化

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=11 bci=14
11    	}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=13 bci=0
13    		Scanner sc = new Scanner(System.in);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=14 bci=11
14    		int n = sc.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
sc = instance of java.util.Scanner(id=582)
main[1] > 
Step completed: "thread=main", Main.main(), line=15 bci=16
15    		int ans = calc(n);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
sc = instance of java.util.Scanner(id=582)
n = 127
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 127
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 127
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 127
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 127
Local variables:
res = 127
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 127
Local variables:
res = 127
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 126
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 126
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 126
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 126
Local variables:
res = 126
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 126
Local variables:
res = 126
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 125
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 125
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 125
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 125
Local variables:
res = 125
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 125
Local variables:
res = 125
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 124
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 124
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 124
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 124
Local variables:
res = 124
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 124
Local variables:
res = 124
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 123
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 123
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 123
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 123
Local variables:
res = 123
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 123
Local variables:
res = 123
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 122
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 122
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 122
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 122
Local variables:
res = 122
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 122
Local variables:
res = 122
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 121
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 121
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 121
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 121
Local variables:
res = 121
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 121
Local variables:
res = 121
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 120
Local variables:
res = 120
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 120
Local variables:
res = 120
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 119
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 119
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 119
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 119
Local variables:
res = 119
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 119
Local variables:
res = 119
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 118
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 118
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 118
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 118
Local variables:
res = 118
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 118
Local variables:
res = 118
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 117
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 117
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 117
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 117
Local variables:
res = 117
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 117
Local variables:
res = 117
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 116
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 116
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 116
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 116
Local variables:
res = 116
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 116
Local variables:
res = 116
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 115
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 115
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 115
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 115
Local variables:
res = 115
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 115
Local variables:
res = 115
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 114
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 114
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 114
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 114
Local variables:
res = 114
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 114
Local variables:
res = 114
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 113
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 113
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 113
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 113
Local variables:
res = 113
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 113
Local variables:
res = 113
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 112
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 112
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 112
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 112
Local variables:
res = 112
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 112
Local variables:
res = 112
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 111
Local variables:
res = 111
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 111
Local variables:
res = 111
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 110
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 110
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 110
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 110
Local variables:
res = 110
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 110
Local variables:
res = 110
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 109
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 109
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 109
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 109
Local variables:
res = 109
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 109
Local variables:
res = 109
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 108
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 108
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 108
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 108
Local variables:
res = 108
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 108
Local variables:
res = 108
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 107
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 107
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 107
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 107
Local variables:
res = 107
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 107
Local variables:
res = 107
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 106
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 106
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 106
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 106
Local variables:
res = 106
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 106
Local variables:
res = 106
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 105
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 105
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 105
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 105
Local variables:
res = 105
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 105
Local variables:
res = 105
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 104
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 104
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 104
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 104
Local variables:
res = 104
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 104
Local variables:
res = 104
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 103
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 103
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 103
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 103
Local variables:
res = 103
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 103
Local variables:
res = 103
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 102
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 102
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 102
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 102
Local variables:
res = 102
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 102
Local variables:
res = 102
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 101
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 101
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 101
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 101
Local variables:
res = 101
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 101
Local variables:
res = 101
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 100
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 100
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 100
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 100
Local variables:
res = 100
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 100
Local variables:
res = 100
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 99
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 99
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 99
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 99
Local variables:
res = 99
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 99
Local variables:
res = 99
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 98
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 98
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 98
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 98
Local variables:
res = 98
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 98
Local variables:
res = 98
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 97
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 97
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 97
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 97
Local variables:
res = 97
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 97
Local variables:
res = 97
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 96
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 96
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 96
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 96
Local variables:
res = 96
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 96
Local variables:
res = 96
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 95
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 95
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 95
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 95
Local variables:
res = 95
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 95
Local variables:
res = 95
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 94
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 94
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 94
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 94
Local variables:
res = 94
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 94
Local variables:
res = 94
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 93
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 93
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 93
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 93
Local variables:
res = 93
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 93
Local variables:
res = 93
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 92
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 92
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 92
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 92
Local variables:
res = 92
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 92
Local variables:
res = 92
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 91
Local variables:
res = 91
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 91
Local variables:
res = 91
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 90
Local variables:
res = 90
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 90
Local variables:
res = 90
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 89
Local variables:
res = 89
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 89
Local variables:
res = 89
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 88
Local variables:
res = 88
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 88
Local variables:
res = 88
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 87
Local variables:
res = 87
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 87
Local variables:
res = 87
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 86
Local variables:
res = 86
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 86
Local variables:
res = 86
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 85
Local variables:
res = 85
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 85
Local variables:
res = 85
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 84
Local variables:
res = 84
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 84
Local variables:
res = 84
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 83
Local variables:
res = 83
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 83
Local variables:
res = 83
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 82
Local variables:
res = 82
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 82
Local variables:
res = 82
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 81
Local variables:
res = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 81
Local variables:
res = 81
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 80
Local variables:
res = 80
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 80
Local variables:
res = 80
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 79
Local variables:
res = 79
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 79
Local variables:
res = 79
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 78
Local variables:
res = 78
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 78
Local variables:
res = 78
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 77
Local variables:
res = 77
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 77
Local variables:
res = 77
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 76
Local variables:
res = 76
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 76
Local variables:
res = 76
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 75
Local variables:
res = 75
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 75
Local variables:
res = 75
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 74
Local variables:
res = 74
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 74
Local variables:
res = 74
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 73
Local variables:
res = 73
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 73
Local variables:
res = 73
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 72
Local variables:
res = 72
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 72
Local variables:
res = 72
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 71
Local variables:
res = 71
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 71
Local variables:
res = 71
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 70
Local variables:
res = 70
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 70
Local variables:
res = 70
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 69
Local variables:
res = 69
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 69
Local variables:
res = 69
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 68
Local variables:
res = 68
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 68
Local variables:
res = 68
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 67
Local variables:
res = 67
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 67
Local variables:
res = 67
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 66
Local variables:
res = 66
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 66
Local variables:
res = 66
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 65
Local variables:
res = 65
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 65
Local variables:
res = 65
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 64
Local variables:
res = 64
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 64
Local variables:
res = 64
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 63
Local variables:
res = 63
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 63
Local variables:
res = 63
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 62
Local variables:
res = 62
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 62
Local variables:
res = 62
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 61
Local variables:
res = 61
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 61
Local variables:
res = 61
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 60
Local variables:
res = 60
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 60
Local variables:
res = 60
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 59
Local variables:
res = 59
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 59
Local variables:
res = 59
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 58
Local variables:
res = 58
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 58
Local variables:
res = 58
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 57
Local variables:
res = 57
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 57
Local variables:
res = 57
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 56
Local variables:
res = 56
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 56
Local variables:
res = 56
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 55
Local variables:
res = 55
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 55
Local variables:
res = 55
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 54
Local variables:
res = 54
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 54
Local variables:
res = 54
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 53
Local variables:
res = 53
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 53
Local variables:
res = 53
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 52
Local variables:
res = 52
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 52
Local variables:
res = 52
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 51
Local variables:
res = 51
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 51
Local variables:
res = 51
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 50
Local variables:
res = 50
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 50
Local variables:
res = 50
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 49
Local variables:
res = 49
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 49
Local variables:
res = 49
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 48
Local variables:
res = 48
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 48
Local variables:
res = 48
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 47
Local variables:
res = 47
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 47
Local variables:
res = 47
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 46
Local variables:
res = 46
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 46
Local variables:
res = 46
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 45
Local variables:
res = 45
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 45
Local variables:
res = 45
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 44
Local variables:
res = 44
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 44
Local variables:
res = 44
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 43
Local variables:
res = 43
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 43
Local variables:
res = 43
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 42
Local variables:
res = 42
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 42
Local variables:
res = 42
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 41
Local variables:
res = 41
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 41
Local variables:
res = 41
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 40
Local variables:
res = 40
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 40
Local variables:
res = 40
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 39
Local variables:
res = 39
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 39
Local variables:
res = 39
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 38
Local variables:
res = 38
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 38
Local variables:
res = 38
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 37
Local variables:
res = 37
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 37
Local variables:
res = 37
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 36
Local variables:
res = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 36
Local variables:
res = 36
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 35
Local variables:
res = 35
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 35
Local variables:
res = 35
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 34
Local variables:
res = 34
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 34
Local variables:
res = 34
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 33
Local variables:
res = 33
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 33
Local variables:
res = 33
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 32
Local variables:
res = 32
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 32
Local variables:
res = 32
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 31
Local variables:
res = 31
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 31
Local variables:
res = 31
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 30
Local variables:
res = 30
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 30
Local variables:
res = 30
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 29
Local variables:
res = 29
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 29
Local variables:
res = 29
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 28
Local variables:
res = 28
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 28
Local variables:
res = 28
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 27
Local variables:
res = 27
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 27
Local variables:
res = 27
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 26
Local variables:
res = 26
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 26
Local variables:
res = 26
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 25
Local variables:
res = 25
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 25
Local variables:
res = 25
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 24
Local variables:
res = 24
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 24
Local variables:
res = 24
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 23
Local variables:
res = 23
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 23
Local variables:
res = 23
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 22
Local variables:
res = 22
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 22
Local variables:
res = 22
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 21
Local variables:
res = 21
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 21
Local variables:
res = 21
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 20
Local variables:
res = 20
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 20
Local variables:
res = 20
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 19
Local variables:
res = 19
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 19
Local variables:
res = 19
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 18
Local variables:
res = 18
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 18
Local variables:
res = 18
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 17
Local variables:
res = 17
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 17
Local variables:
res = 17
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 16
Local variables:
res = 16
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 16
Local variables:
res = 16
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 15
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 15
Local variables:
res = 15
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 14
Local variables:
res = 14
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 14
Local variables:
res = 14
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 13
Local variables:
res = 13
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 13
Local variables:
res = 13
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 12
Local variables:
res = 12
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 12
Local variables:
res = 12
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 11
Local variables:
res = 11
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 11
Local variables:
res = 11
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 10
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 10
Local variables:
res = 10
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 9
Local variables:
res = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 9
Local variables:
res = 9
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 8
Local variables:
res = 8
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 8
Local variables:
res = 8
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 7
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 7
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 6
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 6
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 5
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 5
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 4
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 4
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 3
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 2
Local variables:
res = 2
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=23 bci=21
23    		int res = n; // 1円ずつ引き出した場合 resはresponseのres?

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=23
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 1
Local variables:
res = 1
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 1
Local variables:
res = 1
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 1
Local variables:
res = 1
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 1
Local variables:
res = 1
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 1
Local variables:
res = 1
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 1
Local variables:
res = 1
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 2
Local variables:
res = 2
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 2
Local variables:
res = 2
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 2
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 2
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 2
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 3
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 3
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 3
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 3
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 3
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 4
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 4
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 4
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 4
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 4
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 4
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 4
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 4
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 5
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 5
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 5
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 5
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 5
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 5
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 5
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 5
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 6
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 6
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 6
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 6
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 6
Local variables:
res = 1
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 6
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 6
Local variables:
res = 1
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 6
Local variables:
res = 1
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 6
Local variables:
res = 1
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 6
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 6
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 7
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 7
Local variables:
res = 2
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 7
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 7
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 7
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 7
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 7
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 7
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 7
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 7
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 7
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 8
Local variables:
res = 8
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 8
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 8
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 8
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 8
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 8
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 8
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 8
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 8
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 8
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 8
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 9
Local variables:
res = 9
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 9
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 9
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 9
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 9
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 9
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 9
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 9
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 9
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 9
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 9
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 9
Local variables:
res = 1
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 9
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 9
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 10
Local variables:
res = 10
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 10
Local variables:
res = 2
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 10
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 10
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 10
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 10
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 10
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 10
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 10
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 10
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 10
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 10
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 10
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 10
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 11
Local variables:
res = 11
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 11
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 11
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 11
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 11
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 11
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 11
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 11
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 11
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 11
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 11
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 11
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 11
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 11
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 12
Local variables:
res = 12
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 12
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 12
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 12
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 12
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 12
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 12
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 12
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 12
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 12
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 12
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 12
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 12
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 12
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 13
Local variables:
res = 13
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 13
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 13
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 13
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 13
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 13
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 13
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 13
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 13
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 13
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 13
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 13
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 13
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 13
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 14
Local variables:
res = 14
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 14
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 14
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 14
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 14
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 14
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 14
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 14
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 14
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 14
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 14
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 14
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 14
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 14
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 15
Local variables:
res = 15
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 15
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 15
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 15
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 15
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 15
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 15
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 15
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 15
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 15
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 15
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 15
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 15
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 15
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 16
Local variables:
res = 16
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 16
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 16
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 16
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 16
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 16
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 16
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 16
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 16
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 16
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 16
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 16
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 16
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 16
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 17
Local variables:
res = 17
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 17
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 17
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 17
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 17
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 17
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 17
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 17
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 17
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 17
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 17
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 17
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 17
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 17
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 18
Local variables:
res = 18
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 18
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 18
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 18
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 18
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 18
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 18
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 18
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 18
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 18
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 18
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 18
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 18
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 18
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 19
Local variables:
res = 19
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 19
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 19
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 19
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 19
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 19
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 19
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 19
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 19
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 19
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 19
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 19
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 19
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 19
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 20
Local variables:
res = 20
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 20
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 20
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 20
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 20
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 20
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 20
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 20
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 20
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 20
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 20
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 20
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 20
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 20
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 21
Local variables:
res = 21
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 21
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 21
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 21
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 21
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 21
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 21
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 21
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 21
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 21
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 21
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 21
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 21
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 21
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 22
Local variables:
res = 22
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 22
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 22
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 22
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 22
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 22
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 22
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 22
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 22
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 22
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 22
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 22
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 22
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 22
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 23
Local variables:
res = 23
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 23
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 23
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 23
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 23
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 23
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 23
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 23
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 23
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 23
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 23
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 23
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 23
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 23
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 24
Local variables:
res = 24
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 24
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 24
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 24
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 24
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 24
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 24
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 24
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 24
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 24
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 24
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 24
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 24
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 24
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 25
Local variables:
res = 25
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 25
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 25
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 25
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 25
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 25
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 25
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 25
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 25
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 25
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 25
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 25
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 25
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 25
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 26
Local variables:
res = 26
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 26
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 26
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 26
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 26
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 26
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 26
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 26
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 26
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 26
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 26
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 26
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 26
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 26
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 27
Local variables:
res = 27
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 27
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 27
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 27
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 27
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 27
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 27
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 27
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 27
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 27
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 27
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 27
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 27
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 27
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 28
Local variables:
res = 28
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 28
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 28
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 28
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 28
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 28
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 28
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 28
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 28
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 28
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 28
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 28
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 28
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 28
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 29
Local variables:
res = 29
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 29
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 29
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 29
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 29
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 29
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 29
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 29
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 29
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 29
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 29
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 29
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 29
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 29
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 30
Local variables:
res = 30
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 30
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 30
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 30
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 30
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 30
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 30
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 30
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 30
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 30
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 30
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 30
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 30
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 30
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 31
Local variables:
res = 31
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 31
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 31
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 31
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 31
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 31
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 31
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 31
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 31
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 31
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 31
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 31
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 31
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 31
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 32
Local variables:
res = 32
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 32
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 32
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 32
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 32
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 32
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 32
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 32
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 32
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 32
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 32
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 32
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 32
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 32
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 33
Local variables:
res = 33
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 33
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 33
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 33
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 33
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 33
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 33
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 33
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 33
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 33
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 33
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 33
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 33
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 33
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 34
Local variables:
res = 34
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 34
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 34
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 34
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 34
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 34
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 34
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 34
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 34
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 34
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 34
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 34
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 34
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 34
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 35
Local variables:
res = 35
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 35
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 35
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 35
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 35
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 35
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 35
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 35
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 35
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 35
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 35
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 35
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 35
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 35
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 36
Local variables:
res = 36
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 36
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 36
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 36
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 36
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 36
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 36
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 36
Local variables:
res = 1
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 36
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 36
Local variables:
res = 1
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 36
Local variables:
res = 1
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 36
Local variables:
res = 1
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 36
Local variables:
res = 1
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 36
Local variables:
res = 1
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 36
Local variables:
res = 1
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 36
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 36
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 37
Local variables:
res = 37
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 37
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 37
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 37
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 37
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 38
Local variables:
res = 38
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 38
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 38
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 38
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 38
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 39
Local variables:
res = 39
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 39
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 39
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 39
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 39
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 40
Local variables:
res = 40
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 40
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 40
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 40
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 40
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 41
Local variables:
res = 41
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 41
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 41
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 41
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 41
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 42
Local variables:
res = 42
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 42
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 42
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 42
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 42
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 42
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 42
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 42
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 42
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 42
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 42
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 42
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 42
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 42
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 42
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 42
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 42
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 43
Local variables:
res = 43
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 43
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 43
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 43
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 43
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 44
Local variables:
res = 44
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 44
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 44
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 44
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 44
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 45
Local variables:
res = 45
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 45
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 45
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 45
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 45
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 45
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 45
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 45
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 45
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 45
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 45
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 45
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 45
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 45
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 45
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 45
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 45
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 46
Local variables:
res = 46
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 46
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 46
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 46
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 46
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 47
Local variables:
res = 47
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 47
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 47
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 47
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 47
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 48
Local variables:
res = 48
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 48
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 48
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 48
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 48
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 48
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 48
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 48
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 48
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 48
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 48
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 48
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 48
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 48
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 48
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 48
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 48
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 49
Local variables:
res = 49
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 49
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 49
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 49
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 49
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 50
Local variables:
res = 50
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 50
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 50
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 50
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 50
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 51
Local variables:
res = 51
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 51
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 51
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 51
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 51
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 51
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 51
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 51
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 51
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 51
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 51
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 51
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 51
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 51
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 51
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 51
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 51
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 52
Local variables:
res = 52
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 52
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 52
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 52
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 52
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 53
Local variables:
res = 53
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 53
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 53
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 53
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 53
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 54
Local variables:
res = 54
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 54
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 54
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 54
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 54
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 54
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 54
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 54
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 54
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 54
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 54
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 54
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 54
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 54
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 54
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 54
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 54
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 55
Local variables:
res = 55
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 55
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 55
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 55
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 55
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 56
Local variables:
res = 56
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 56
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 56
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 56
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 56
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 57
Local variables:
res = 57
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 57
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 57
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 57
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 57
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 57
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 57
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 57
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 57
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 57
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 57
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 57
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 57
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 57
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 57
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 57
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 57
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 58
Local variables:
res = 58
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 58
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 58
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 58
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 58
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 59
Local variables:
res = 59
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 59
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 59
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 59
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 59
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 60
Local variables:
res = 60
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 60
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 60
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 60
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 60
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 60
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 60
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 60
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 60
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 60
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 60
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 60
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 60
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 60
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 60
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 60
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 60
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 61
Local variables:
res = 61
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 61
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 61
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 61
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 61
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 62
Local variables:
res = 62
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 62
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 62
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 62
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 62
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 63
Local variables:
res = 63
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 63
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 63
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 63
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 63
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 63
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 63
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 63
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 63
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 63
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 63
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 63
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 63
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 63
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 63
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 63
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 63
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 64
Local variables:
res = 64
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 64
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 64
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 64
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 64
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 65
Local variables:
res = 65
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 65
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 65
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 65
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 65
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 66
Local variables:
res = 66
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 66
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 66
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 66
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 66
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 66
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 66
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 66
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 66
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 66
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 66
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 66
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 66
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 66
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 66
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 66
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 66
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 67
Local variables:
res = 67
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 67
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 67
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 67
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 67
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 68
Local variables:
res = 68
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 68
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 68
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 68
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 68
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 69
Local variables:
res = 69
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 69
Local variables:
res = 8
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 69
Local variables:
res = 8
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 69
Local variables:
res = 8
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 69
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 69
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 69
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 69
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 69
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 69
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 69
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 69
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 69
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 69
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 69
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 69
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 69
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 70
Local variables:
res = 70
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 70
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 70
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 70
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 70
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 71
Local variables:
res = 71
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 71
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 71
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 71
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 71
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 72
Local variables:
res = 72
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 72
Local variables:
res = 8
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 72
Local variables:
res = 8
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 72
Local variables:
res = 8
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 72
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 72
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 72
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 72
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 72
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 72
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 72
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 72
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 72
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 72
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 72
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 72
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 72
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 73
Local variables:
res = 73
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 73
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 73
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 73
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 73
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 74
Local variables:
res = 74
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 74
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 74
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 74
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 74
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 75
Local variables:
res = 75
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 75
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 75
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 75
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 75
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 76
Local variables:
res = 76
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 76
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 76
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 76
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 76
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 77
Local variables:
res = 77
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 77
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 77
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 77
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 77
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 78
Local variables:
res = 78
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 78
Local variables:
res = 8
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 78
Local variables:
res = 8
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 78
Local variables:
res = 8
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 78
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 78
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 78
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 78
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 78
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 78
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 78
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 78
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 78
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 78
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 78
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 78
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 78
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 79
Local variables:
res = 79
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 79
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 79
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 79
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 79
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 80
Local variables:
res = 80
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 80
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 80
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 80
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 80
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 81
Local variables:
res = 81
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 81
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 81
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 81
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 81
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 81
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 81
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 81
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 81
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 81
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 81
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 81
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 81
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 81
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 81
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 81
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 81
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 81
Local variables:
res = 1
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 81
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 81
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 82
Local variables:
res = 82
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 82
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 82
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 82
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 82
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 83
Local variables:
res = 83
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 47
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 83
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 83
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 83
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 83
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 84
Local variables:
res = 84
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 84
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 84
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 84
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 84
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 85
Local variables:
res = 85
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 85
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 85
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 85
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 85
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 86
Local variables:
res = 86
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 86
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 86
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 86
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 86
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 87
Local variables:
res = 87
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 87
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 87
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 87
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 87
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 87
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 87
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 87
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 88
Local variables:
res = 88
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 88
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 88
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 88
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 88
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 89
Local variables:
res = 89
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 53
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 89
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 89
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 89
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 89
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 90
Local variables:
res = 90
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 90
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 90
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 90
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 90
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 90
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 90
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 90
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 90
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 90
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 90
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 90
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 90
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 90
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 90
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 90
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 90
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 90
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 90
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 90
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 91
Local variables:
res = 91
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 91
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 91
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 91
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 91
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 92
Local variables:
res = 92
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 56
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 92
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 92
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 92
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 92
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 93
Local variables:
res = 93
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 93
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 93
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 93
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 57
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 93
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 92
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 92
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 93
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 93
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 93
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 94
Local variables:
res = 94
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 58
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 94
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 93
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 93
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 94
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 94
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 94
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 95
Local variables:
res = 95
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 59
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 95
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 94
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 94
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 95
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 95
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 95
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 96
Local variables:
res = 96
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 96
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 96
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 96
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 60
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 96
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 95
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 95
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 96
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 96
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 96
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 97
Local variables:
res = 97
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 61
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 97
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 96
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 96
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 16
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 97
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 97
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 97
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 98
Local variables:
res = 98
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 92
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 92
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 62
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 98
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 97
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 97
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 17
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 98
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 98
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 98
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 99
Local variables:
res = 99
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 99
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 99
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 93
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 93
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 99
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 99
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 99
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 63
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 99
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 99
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 99
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 99
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 98
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 98
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 99
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 99
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 99
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 99
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 99
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 99
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 18
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 99
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 99
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 99
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 99
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 100
Local variables:
res = 100
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 94
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 94
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 64
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 100
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 99
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 99
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 19
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 100
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 100
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 100
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 101
Local variables:
res = 101
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 95
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 95
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 65
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 101
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 100
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 100
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 92
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 92
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 101
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 101
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 101
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 102
Local variables:
res = 102
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 102
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 102
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 96
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 96
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 102
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 66
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 102
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 101
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 101
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 93
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 93
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 21
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 102
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 102
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 102
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 103
Local variables:
res = 103
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 97
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 97
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 67
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 103
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 102
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 102
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 94
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 94
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 103
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 103
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 103
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 104
Local variables:
res = 104
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 98
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 98
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 68
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 104
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 103
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 103
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 95
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 95
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 23
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 104
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 104
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 104
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 105
Local variables:
res = 105
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 105
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 105
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 99
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 99
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 105
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 69
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 105
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 104
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 104
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 96
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 96
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 105
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 105
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 105
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 106
Local variables:
res = 106
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 100
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 100
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 70
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 106
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 105
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 105
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 97
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 97
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 106
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 106
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 106
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 107
Local variables:
res = 107
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 101
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 101
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 71
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 107
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 106
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 106
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 98
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 98
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 26
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 107
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 107
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 107
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 108
Local variables:
res = 108
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 108
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 108
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 102
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 102
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 108
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 108
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 108
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 72
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 108
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 108
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 108
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 108
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 107
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 107
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 108
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 108
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 108
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 99
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 99
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 108
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 108
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 108
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 27
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 108
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 108
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 108
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 108
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 109
Local variables:
res = 109
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 103
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 103
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 73
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 109
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 108
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 108
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 100
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 100
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 28
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 109
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 109
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 109
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 110
Local variables:
res = 110
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 104
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 104
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 110
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 109
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 109
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 101
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 101
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 29
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 110
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 110
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 110
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 111
Local variables:
res = 111
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 111
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 111
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 105
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 105
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 111
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 75
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 111
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 110
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 110
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 102
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 102
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 111
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 111
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 111
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 112
Local variables:
res = 112
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 106
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 106
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 76
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 112
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 103
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 103
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 31
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 112
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 112
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 112
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 113
Local variables:
res = 113
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 107
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 107
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 77
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 113
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 112
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 112
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 104
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 104
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 113
Local variables:
res = 7
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 113
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 113
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 114
Local variables:
res = 114
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 114
Local variables:
res = 8
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 114
Local variables:
res = 8
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 108
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 108
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 114
Local variables:
res = 8
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 78
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 114
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 113
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 113
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 105
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 105
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 33
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 114
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 114
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 114
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 115
Local variables:
res = 115
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 109
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 109
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 79
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 115
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 114
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 114
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 106
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 106
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 34
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 115
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 115
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 115
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 116
Local variables:
res = 116
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 110
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 110
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 80
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 116
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 115
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 115
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 107
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 107
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 116
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 116
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 116
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 117
Local variables:
res = 117
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 117
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 117
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 117
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 117
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 117
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 81
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 117
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 117
Local variables:
res = 2
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 117
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 117
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 116
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 116
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 117
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 117
Local variables:
res = 2
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 117
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 108
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 108
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 117
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 117
Local variables:
res = 2
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 117
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 117
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 117
Local variables:
res = 2
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 117
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 117
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 118
Local variables:
res = 118
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 112
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 112
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 82
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 118
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 117
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 117
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 109
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 109
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 37
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 118
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 118
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 118
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 119
Local variables:
res = 119
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 113
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 113
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 83
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 119
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 118
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 118
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 110
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 110
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 38
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 119
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 119
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 119
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 120
Local variables:
res = 120
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 114
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 114
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 84
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 120
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 119
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 119
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 39
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 120
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 120
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 120
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 121
Local variables:
res = 121
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 115
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 115
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 85
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 121
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 112
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 112
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 40
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 121
Local variables:
res = 6
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 121
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 121
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 122
Local variables:
res = 122
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 116
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 116
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 86
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 122
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 121
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 121
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 113
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 113
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 41
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 122
Local variables:
res = 7
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 122
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 122
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 123
Local variables:
res = 123
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 123
Local variables:
res = 8
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 123
Local variables:
res = 8
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 117
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 117
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 123
Local variables:
res = 8
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 87
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 123
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 122
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 122
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 114
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 114
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 42
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 123
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 123
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 123
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 124
Local variables:
res = 124
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 118
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 118
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 88
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 124
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 123
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 123
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 115
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 115
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 43
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 124
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 124
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 124
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 125
Local variables:
res = 125
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 119
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 119
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 89
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 125
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 124
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 124
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 116
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 116
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 44
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 125
Local variables:
res = 5
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 125
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 125
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 126
Local variables:
res = 126
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 126
Local variables:
res = 6
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 126
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 126
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 126
Local variables:
res = 6
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 126
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 90
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 126
Local variables:
res = 6
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 126
Local variables:
res = 3
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 126
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 126
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 125
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 125
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 126
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 126
Local variables:
res = 3
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 126
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 117
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 117
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 126
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 126
Local variables:
res = 3
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 126
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 45
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 126
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 126
Local variables:
res = 3
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 126
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 126
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 127
Local variables:
res = 127
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow6 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 121
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 121
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow6 = 6
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=30
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 91
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=25 bci=37
25    			res = Math.min(res, calc(n - pow6) + 1); // resとnを間違えていた

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=24 bci=43
24    		for (int pow6 = 1; pow6 <= n; pow6 *= 6) {

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow6 = 36
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=51
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 127
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 126
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 126
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow9 = 1
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 118
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 118
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow9 = 9
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=58
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=20 bci=0
20    		if (n == 0) return 0;

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=21 bci=6
21    		if (memo[n] != -1) return memo[n]; // メモ済みならその値を返す

main[1] Method arguments:
n = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.calc(), line=28 bci=65
28    			res = Math.min(res, calc(n - pow9) + 1);

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=27 bci=71
27    		for (int pow9 = 1; pow9 <= n; pow9 *= 9) {

main[1] Method arguments:
n = 127
Local variables:
res = 4
pow9 = 81
main[1] > 
Step completed: "thread=main", Main.calc(), line=30 bci=79
30    		memo[n] = res;

main[1] Method arguments:
n = 127
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.calc(), line=31 bci=85
31    		return memo[n];

main[1] Method arguments:
n = 127
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.main(), line=15 bci=20
15    		int ans = calc(n);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
sc = instance of java.util.Scanner(id=582)
n = 127
main[1] > 
Step completed: "thread=main", Main.main(), line=16 bci=21
16    		System.out.println(ans);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
sc = instance of java.util.Scanner(id=582)
n = 127
ans = 4
main[1] > 
Step completed: "thread=main", Main.main(), line=17 bci=28
17    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
sc = instance of java.util.Scanner(id=582)
n = 127
ans = 4
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
