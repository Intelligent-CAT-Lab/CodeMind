{
    "0": {
        "prompt": "Consider the following code:\nimport java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n \n \npublic class Main{\n\t\n\tpublic static final int MAX = 20;\n\t\n    public static void main(String[] args){\n    \tfinal Scanner sc = new Scanner(System.in);\n    \t\n    \tlong[] facts = new long[MAX + 1];\n    \tfacts[0] = 1; \n    \tfor(int i = 1; i <= MAX; i++){\n    \t\tfacts[i] = facts[i - 1] * i;\n    \t}\n    \t\n    \tint[] count = new int[26];\n    \tchar[] input = sc.next().toCharArray();\n    \t\n    \tfor(char c : input){\n    \t\tcount[c - 'a']++;\n    \t}\n    \t\n    \tfinal int allow_odd = input.length % 2 == 0 ? 0 : 1;\n    \tint odd_count = 0;\n    \tint odd_pos = -1;\n    \tfor(int i = 0; i < 26; i++){\n    \t\tif(count[i] % 2 == 1){\n    \t\t\todd_count++;\n    \t\t\todd_pos = i;\n    \t\t}\n    \t}\n    \t\n    \tif(allow_odd < odd_count){\n    \t\tSystem.out.println(0);\n    \t\treturn;\n    \t}\n    \t\n    \tif(odd_pos != -1){\n    \t\tcount[odd_pos]--;\n    \t}\n    \t\n    \tfor(int i = 0; i < 26; i++){\n    \t\tcount[i] /= 2;\n    \t}\n    \t\n    \tint valid = 0;\n    \tfor(int i = 0; i < 26; i++){\n    \t\tvalid += count[i];\n    \t}\n    \t\n    \t//System.out.println(Arrays.toString(count));\n    \t\n    \tlong sum = facts[valid];\n    \tfor(int i = 0; i < 26; i++){\n    \t\tsum /= facts[count[i]];\n    \t}\n    \t\n    \tSystem.out.println(sum);\n    }\n     \n}Gicen the following input:\nab\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "0\n"
    }
}