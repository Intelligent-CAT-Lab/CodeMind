{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.util.Arrays;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\nclass Main{\n    public static void main(String[] args){\n        Scanner scan = new Scanner(System.in);\n        int K = scan.nextInt();\n        int[] dp = new int[K];\n        Arrays.fill(dp,Integer.MAX_VALUE);\n\n        class Node{\n            int to,cost;\n            Node(int to,int cost){\n                this.to=to;\n                this.cost=cost;\n            }\n        }\n\n        PriorityQueue<Node> que = new PriorityQueue<>((a,b) -> a.cost-b.cost);\n        for(int i=1;i<Math.min(10,K);++i){\n            dp[i]=i;\n            que.add(new Node(i,i));\n        }\n        while(!que.isEmpty()){\n            Node node = que.poll();\n            int v = node.to;\n            int c = node.cost;\n            if(c > dp[v])continue;\n            for(int i=0;i<10;++i){\n                int nextv = (v*10+i)%K;\n                int nextc = c+i;\n                if(dp[nextv] > nextc){\n                    dp[nextv]=nextc;\n                    que.add(new Node(nextv,nextc));\n                }\n            }\n        }\n        System.out.println(dp[0]);\n    }\n}Gicen the following input:\n6\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "3\n"
    }
}