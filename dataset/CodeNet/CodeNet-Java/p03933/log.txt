some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=8 bci=0
8    public class Main {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=11 bci=16
11    	static String INPUT = "";

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=100 bci=21
100    	private static byte[] inbuf = new byte[1024];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=101 bci=29
101    	static int lenbuf = 0, ptrbuf = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=67 bci=0
67    		long S = System.currentTimeMillis();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=68 bci=4
68    		is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1694062944197
main[1] > 
Step completed: "thread=main", Main.main(), line=69 bci=35
69    		out = new PrintWriter(System.out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1694062944197
main[1] > 
Step completed: "thread=main", Main.main(), line=71 bci=48
71    		solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1694062944197
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=0
16    		int n = ni();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=159 bci=0
159    		int num = 0, b;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=160 bci=2
160    		boolean minus = false;

main[1] Method arguments:
Local variables:
num = 0
main[1] > 
Step completed: "thread=main", Main.ni(), line=161 bci=4
161    		while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.readByte(), line=105 bci=0
105    		if(lenbuf == -1)throw new InputMismatchException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=106 bci=15
106    		if(ptrbuf >= lenbuf){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=107 bci=24
107    			ptrbuf = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=108 bci=28
108    			try { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=109 bci=52
109    			if(lenbuf <= 0)return -1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=111 bci=60
111    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=161 bci=7
161    		while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.ni(), line=162 bci=34
162    		if(b == '-'){

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main.ni(), line=168 bci=46
168    			if(b >= '0' && b <= '9'){

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main.ni(), line=169 bci=58
169    				num = num * 10 + (b - '0');

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main.ni(), line=173 bci=82
173    			b = readByte();

main[1] Method arguments:
Local variables:
num = 4
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main.readByte(), line=105 bci=0
105    		if(lenbuf == -1)throw new InputMismatchException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=106 bci=15
106    		if(ptrbuf >= lenbuf){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=111 bci=60
111    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=173 bci=85
173    			b = readByte();

main[1] Method arguments:
Local variables:
num = 4
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main.ni(), line=168 bci=46
168    			if(b >= '0' && b <= '9'){

main[1] Method arguments:
Local variables:
num = 4
minus = false
b = 32
main[1] > 
Step completed: "thread=main", Main.ni(), line=171 bci=71
171    				return minus ? -num : num;

main[1] Method arguments:
Local variables:
num = 4
minus = false
b = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=3
16    		int n = ni();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=4
17    		long K = nl();

main[1] Method arguments:
Local variables:
n = 4
main[1] > 
Step completed: "thread=main", Main.nl(), line=179 bci=0
179    		long num = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nl(), line=181 bci=2
181    		boolean minus = false;

main[1] Method arguments:
Local variables:
num = 0
main[1] > 
Step completed: "thread=main", Main.nl(), line=182 bci=4
182    		while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.readByte(), line=105 bci=0
105    		if(lenbuf == -1)throw new InputMismatchException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=106 bci=15
106    		if(ptrbuf >= lenbuf){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=111 bci=60
111    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nl(), line=182 bci=7
182    		while((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.nl(), line=183 bci=34
183    		if(b == '-'){

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main.nl(), line=189 bci=46
189    			if(b >= '0' && b <= '9'){

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main.nl(), line=190 bci=58
190    				num = num * 10 + (b - '0');

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main.nl(), line=194 bci=84
194    			b = readByte();

main[1] Method arguments:
Local variables:
num = 3
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main.readByte(), line=105 bci=0
105    		if(lenbuf == -1)throw new InputMismatchException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=106 bci=15
106    		if(ptrbuf >= lenbuf){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=111 bci=60
111    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nl(), line=194 bci=87
194    			b = readByte();

main[1] Method arguments:
Local variables:
num = 3
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main.nl(), line=189 bci=46
189    			if(b >= '0' && b <= '9'){

main[1] Method arguments:
Local variables:
num = 3
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main.nl(), line=192 bci=73
192    				return minus ? -num : num;

main[1] Method arguments:
Local variables:
num = 3
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=7
17    		long K = nl();

main[1] Method arguments:
Local variables:
n = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=8
18    		K--;

main[1] Method arguments:
Local variables:
n = 4
K = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=19 bci=12
19    		sins = new double[n+1];

main[1] Method arguments:
Local variables:
n = 4
K = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=20
20    		for(int i = 0;i <= n;i++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=27
21    			sins[i] = Math.sin(2*Math.PI*i/n)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=48
20    		for(int i = 0;i <= n;i++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=27
21    			sins[i] = Math.sin(2*Math.PI*i/n)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=48
20    		for(int i = 0;i <= n;i++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=27
21    			sins[i] = Math.sin(2*Math.PI*i/n)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=48
20    		for(int i = 0;i <= n;i++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=27
21    			sins[i] = Math.sin(2*Math.PI*i/n)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=48
20    		for(int i = 0;i <= n;i++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=27
21    			sins[i] = Math.sin(2*Math.PI*i/n)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=48
20    		for(int i = 0;i <= n;i++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=24 bci=54
24    		double low = 0, high = 2*Math.PI;

main[1] Method arguments:
Local variables:
n = 4
K = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=61
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 6.283185307179586
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 6.283185307179586
rep = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 6.283185307179586
rep = 0
h = 3.141592653589793
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 3.141592653589793
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 6.283185307179586
rep = 0
h = 3.141592653589793
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 6.283185307179586
rep = 0
h = 3.141592653589793
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 3.141592653589793
rep = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 3.141592653589793
rep = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 3.141592653589793
rep = 1
h = 1.5707963267948966
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.5707963267948966
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 3.141592653589793
rep = 1
h = 1.5707963267948966
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 3.141592653589793
rep = 1
h = 1.5707963267948966
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 1.5707963267948966
rep = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 1.5707963267948966
rep = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 1.5707963267948966
rep = 2
h = 0.7853981633974483
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.7853981633974483
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 1.5707963267948966
rep = 2
h = 0.7853981633974483
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.0
high = 1.5707963267948966
rep = 2
h = 0.7853981633974483
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.7853981633974483
high = 1.5707963267948966
rep = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.7853981633974483
high = 1.5707963267948966
rep = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.7853981633974483
high = 1.5707963267948966
rep = 3
h = 1.1780972450961724
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.1780972450961724
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.7853981633974483
high = 1.5707963267948966
rep = 3
h = 1.1780972450961724
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.7853981633974483
high = 1.5707963267948966
rep = 3
h = 1.1780972450961724
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.7853981633974483
high = 1.1780972450961724
rep = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.7853981633974483
high = 1.1780972450961724
rep = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.7853981633974483
high = 1.1780972450961724
rep = 4
h = 0.9817477042468103
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9817477042468103
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.7853981633974483
high = 1.1780972450961724
rep = 4
h = 0.9817477042468103
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.7853981633974483
high = 1.1780972450961724
rep = 4
h = 0.9817477042468103
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.1780972450961724
rep = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.1780972450961724
rep = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.1780972450961724
rep = 5
h = 1.0799224746714913
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0799224746714913
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.1780972450961724
rep = 5
h = 1.0799224746714913
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.1780972450961724
rep = 5
h = 1.0799224746714913
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.0799224746714913
rep = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.0799224746714913
rep = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.0799224746714913
rep = 6
h = 1.030835089459151
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.030835089459151
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.0799224746714913
rep = 6
h = 1.030835089459151
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.0799224746714913
rep = 6
h = 1.030835089459151
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.030835089459151
rep = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.030835089459151
rep = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.030835089459151
rep = 7
h = 1.0062913968529807
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0062913968529807
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.030835089459151
rep = 7
h = 1.0062913968529807
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.030835089459151
rep = 7
h = 1.0062913968529807
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.0062913968529807
rep = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.0062913968529807
rep = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.0062913968529807
rep = 8
h = 0.9940195505498955
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9940195505498955
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.0062913968529807
rep = 8
h = 0.9940195505498955
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9817477042468103
high = 1.0062913968529807
rep = 8
h = 0.9940195505498955
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9940195505498955
high = 1.0062913968529807
rep = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9940195505498955
high = 1.0062913968529807
rep = 9
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9940195505498955
high = 1.0062913968529807
rep = 9
h = 1.0001554737014382
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0001554737014382
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9940195505498955
high = 1.0062913968529807
rep = 9
h = 1.0001554737014382
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9940195505498955
high = 1.0062913968529807
rep = 9
h = 1.0001554737014382
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9940195505498955
high = 1.0001554737014382
rep = 9
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9940195505498955
high = 1.0001554737014382
rep = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9940195505498955
high = 1.0001554737014382
rep = 10
h = 0.9970875121256668
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9970875121256668
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9940195505498955
high = 1.0001554737014382
rep = 10
h = 0.9970875121256668
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9940195505498955
high = 1.0001554737014382
rep = 10
h = 0.9970875121256668
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9970875121256668
high = 1.0001554737014382
rep = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9970875121256668
high = 1.0001554737014382
rep = 11
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9970875121256668
high = 1.0001554737014382
rep = 11
h = 0.9986214929135525
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9986214929135525
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9970875121256668
high = 1.0001554737014382
rep = 11
h = 0.9986214929135525
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9970875121256668
high = 1.0001554737014382
rep = 11
h = 0.9986214929135525
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9986214929135525
high = 1.0001554737014382
rep = 11
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9986214929135525
high = 1.0001554737014382
rep = 12
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9986214929135525
high = 1.0001554737014382
rep = 12
h = 0.9993884833074953
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9993884833074953
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9986214929135525
high = 1.0001554737014382
rep = 12
h = 0.9993884833074953
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9986214929135525
high = 1.0001554737014382
rep = 12
h = 0.9993884833074953
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9993884833074953
high = 1.0001554737014382
rep = 12
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9993884833074953
high = 1.0001554737014382
rep = 13
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9993884833074953
high = 1.0001554737014382
rep = 13
h = 0.9997719785044668
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9997719785044668
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9993884833074953
high = 1.0001554737014382
rep = 13
h = 0.9997719785044668
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9993884833074953
high = 1.0001554737014382
rep = 13
h = 0.9997719785044668
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9997719785044668
high = 1.0001554737014382
rep = 13
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9997719785044668
high = 1.0001554737014382
rep = 14
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9997719785044668
high = 1.0001554737014382
rep = 14
h = 0.9999637261029525
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999637261029525
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9997719785044668
high = 1.0001554737014382
rep = 14
h = 0.9999637261029525
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9997719785044668
high = 1.0001554737014382
rep = 14
h = 0.9999637261029525
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.0001554737014382
rep = 14
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.0001554737014382
rep = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.0001554737014382
rep = 15
h = 1.0000595999021953
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000595999021953
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.0001554737014382
rep = 15
h = 1.0000595999021953
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.0001554737014382
rep = 15
h = 1.0000595999021953
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.0000595999021953
rep = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.0000595999021953
rep = 16
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.0000595999021953
rep = 16
h = 1.000011663002574
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.000011663002574
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.0000595999021953
rep = 16
h = 1.000011663002574
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.0000595999021953
rep = 16
h = 1.000011663002574
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.000011663002574
rep = 16
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.000011663002574
rep = 17
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.000011663002574
rep = 17
h = 0.9999876945527633
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999876945527633
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.000011663002574
rep = 17
h = 0.9999876945527633
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999637261029525
high = 1.000011663002574
rep = 17
h = 0.9999876945527633
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999876945527633
high = 1.000011663002574
rep = 17
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999876945527633
high = 1.000011663002574
rep = 18
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999876945527633
high = 1.000011663002574
rep = 18
h = 0.9999996787776686
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999996787776686
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999876945527633
high = 1.000011663002574
rep = 18
h = 0.9999996787776686
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999876945527633
high = 1.000011663002574
rep = 18
h = 0.9999996787776686
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.000011663002574
rep = 18
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.000011663002574
rep = 19
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.000011663002574
rep = 19
h = 1.0000056708901213
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000056708901213
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.000011663002574
rep = 19
h = 1.0000056708901213
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.000011663002574
rep = 19
h = 1.0000056708901213
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000056708901213
rep = 19
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000056708901213
rep = 20
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000056708901213
rep = 20
h = 1.0000026748338948
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000026748338948
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000056708901213
rep = 20
h = 1.0000026748338948
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000056708901213
rep = 20
h = 1.0000026748338948
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000026748338948
rep = 20
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000026748338948
rep = 21
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000026748338948
rep = 21
h = 1.0000011768057817
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000011768057817
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000026748338948
rep = 21
h = 1.0000011768057817
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000026748338948
rep = 21
h = 1.0000011768057817
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000011768057817
rep = 21
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000011768057817
rep = 22
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000011768057817
rep = 22
h = 1.0000004277917252
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000004277917252
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000011768057817
rep = 22
h = 1.0000004277917252
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000011768057817
rep = 22
h = 1.0000004277917252
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000004277917252
rep = 22
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000004277917252
rep = 23
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000004277917252
rep = 23
h = 1.0000000532846969
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000532846969
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000004277917252
rep = 23
h = 1.0000000532846969
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000004277917252
rep = 23
h = 1.0000000532846969
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000000532846969
rep = 23
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000000532846969
rep = 24
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000000532846969
rep = 24
h = 0.9999998660311827
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999998660311827
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000000532846969
rep = 24
h = 0.9999998660311827
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999996787776686
high = 1.0000000532846969
rep = 24
h = 0.9999998660311827
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999998660311827
high = 1.0000000532846969
rep = 24
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999998660311827
high = 1.0000000532846969
rep = 25
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999998660311827
high = 1.0000000532846969
rep = 25
h = 0.9999999596579399
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999999596579399
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999998660311827
high = 1.0000000532846969
rep = 25
h = 0.9999999596579399
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999998660311827
high = 1.0000000532846969
rep = 25
h = 0.9999999596579399
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999596579399
high = 1.0000000532846969
rep = 25
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999596579399
high = 1.0000000532846969
rep = 26
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999596579399
high = 1.0000000532846969
rep = 26
h = 1.0000000064713184
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000064713184
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999596579399
high = 1.0000000532846969
rep = 26
h = 1.0000000064713184
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999596579399
high = 1.0000000532846969
rep = 26
h = 1.0000000064713184
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999596579399
high = 1.0000000064713184
rep = 26
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999596579399
high = 1.0000000064713184
rep = 27
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999596579399
high = 1.0000000064713184
rep = 27
h = 0.9999999830646291
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999999830646291
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999596579399
high = 1.0000000064713184
rep = 27
h = 0.9999999830646291
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999596579399
high = 1.0000000064713184
rep = 27
h = 0.9999999830646291
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999830646291
high = 1.0000000064713184
rep = 27
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999830646291
high = 1.0000000064713184
rep = 28
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999830646291
high = 1.0000000064713184
rep = 28
h = 0.9999999947679737
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999999947679737
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999830646291
high = 1.0000000064713184
rep = 28
h = 0.9999999947679737
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999830646291
high = 1.0000000064713184
rep = 28
h = 0.9999999947679737
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999947679737
high = 1.0000000064713184
rep = 28
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999947679737
high = 1.0000000064713184
rep = 29
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999947679737
high = 1.0000000064713184
rep = 29
h = 1.0000000006196461
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000006196461
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999947679737
high = 1.0000000064713184
rep = 29
h = 1.0000000006196461
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999947679737
high = 1.0000000064713184
rep = 29
h = 1.0000000006196461
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999947679737
high = 1.0000000006196461
rep = 29
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999947679737
high = 1.0000000006196461
rep = 30
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999947679737
high = 1.0000000006196461
rep = 30
h = 0.9999999976938099
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999999976938099
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999947679737
high = 1.0000000006196461
rep = 30
h = 0.9999999976938099
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999947679737
high = 1.0000000006196461
rep = 30
h = 0.9999999976938099
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999976938099
high = 1.0000000006196461
rep = 30
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999976938099
high = 1.0000000006196461
rep = 31
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999976938099
high = 1.0000000006196461
rep = 31
h = 0.999999999156728
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.999999999156728
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999976938099
high = 1.0000000006196461
rep = 31
h = 0.999999999156728
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999976938099
high = 1.0000000006196461
rep = 31
h = 0.999999999156728
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999156728
high = 1.0000000006196461
rep = 31
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999156728
high = 1.0000000006196461
rep = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999156728
high = 1.0000000006196461
rep = 32
h = 0.999999999888187
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.999999999888187
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999156728
high = 1.0000000006196461
rep = 32
h = 0.999999999888187
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999156728
high = 1.0000000006196461
rep = 32
h = 0.999999999888187
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000006196461
rep = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000006196461
rep = 33
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000006196461
rep = 33
h = 1.0000000002539164
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000002539164
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000006196461
rep = 33
h = 1.0000000002539164
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000006196461
rep = 33
h = 1.0000000002539164
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000002539164
rep = 33
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000002539164
rep = 34
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000002539164
rep = 34
h = 1.0000000000710516
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000000710516
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000002539164
rep = 34
h = 1.0000000000710516
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000002539164
rep = 34
h = 1.0000000000710516
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000000710516
rep = 34
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000000710516
rep = 35
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000000710516
rep = 35
h = 0.9999999999796193
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999999999796193
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000000710516
rep = 35
h = 0.9999999999796193
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.999999999888187
high = 1.0000000000710516
rep = 35
h = 0.9999999999796193
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000710516
rep = 35
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000710516
rep = 36
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000710516
rep = 36
h = 1.0000000000253355
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000000253355
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000710516
rep = 36
h = 1.0000000000253355
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000710516
rep = 36
h = 1.0000000000253355
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000253355
rep = 36
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000253355
rep = 37
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000253355
rep = 37
h = 1.0000000000024774
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000000024774
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000253355
rep = 37
h = 1.0000000000024774
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000253355
rep = 37
h = 1.0000000000024774
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000024774
rep = 37
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000024774
rep = 38
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000024774
rep = 38
h = 0.9999999999910483
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999999999910483
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000024774
rep = 38
h = 0.9999999999910483
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999796193
high = 1.0000000000024774
rep = 38
h = 0.9999999999910483
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999910483
high = 1.0000000000024774
rep = 38
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999910483
high = 1.0000000000024774
rep = 39
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999910483
high = 1.0000000000024774
rep = 39
h = 0.9999999999967628
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999999999967628
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999910483
high = 1.0000000000024774
rep = 39
h = 0.9999999999967628
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999910483
high = 1.0000000000024774
rep = 39
h = 0.9999999999967628
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999967628
high = 1.0000000000024774
rep = 39
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999967628
high = 1.0000000000024774
rep = 40
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999967628
high = 1.0000000000024774
rep = 40
h = 0.9999999999996201
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999999999996201
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999967628
high = 1.0000000000024774
rep = 40
h = 0.9999999999996201
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999967628
high = 1.0000000000024774
rep = 40
h = 0.9999999999996201
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000024774
rep = 40
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000024774
rep = 41
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000024774
rep = 41
h = 1.0000000000010487
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000000010487
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000024774
rep = 41
h = 1.0000000000010487
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000024774
rep = 41
h = 1.0000000000010487
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000010487
rep = 41
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000010487
rep = 42
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000010487
rep = 42
h = 1.0000000000003344
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000000003344
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000010487
rep = 42
h = 1.0000000000003344
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000010487
rep = 42
h = 1.0000000000003344
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000003344
rep = 42
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000003344
rep = 43
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000003344
rep = 43
h = 0.9999999999999772
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999999999999772
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000003344
rep = 43
h = 0.9999999999999772
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999996201
high = 1.0000000000003344
rep = 43
h = 0.9999999999999772
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000003344
rep = 43
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000003344
rep = 44
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000003344
rep = 44
h = 1.0000000000001559
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000000001559
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000003344
rep = 44
h = 1.0000000000001559
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000003344
rep = 44
h = 1.0000000000001559
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000001559
rep = 44
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000001559
rep = 45
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000001559
rep = 45
h = 1.0000000000000666
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000000000666
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000001559
rep = 45
h = 1.0000000000000666
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000001559
rep = 45
h = 1.0000000000000666
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000000666
rep = 45
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000000666
rep = 46
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000000666
rep = 46
h = 1.000000000000022
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.000000000000022
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000000666
rep = 46
h = 1.000000000000022
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.0000000000000666
rep = 46
h = 1.000000000000022
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.000000000000022
rep = 46
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.000000000000022
rep = 47
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.000000000000022
rep = 47
h = 0.9999999999999996
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=48 bci=70
48    					high = q;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 0.9999999999999996
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.000000000000022
rep = 47
h = 0.9999999999999996
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=92
28    				low = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999772
high = 1.000000000000022
rep = 47
h = 0.9999999999999996
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.000000000000022
rep = 47
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.000000000000022
rep = 48
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.000000000000022
rep = 48
h = 1.0000000000000107
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.0000000000000107
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.000000000000022
rep = 48
h = 1.0000000000000107
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.000000000000022
rep = 48
h = 1.0000000000000107
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.0000000000000107
rep = 48
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=71
26    			double h = (low+high)/2;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.0000000000000107
rep = 49
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=81
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.0000000000000107
rep = 49
h = 1.000000000000005
main[1] > 
Step completed: "thread=main", Main.count(), line=40 bci=0
40    		long ret = 0;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=2
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 0
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 0
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 1
b = 1
c = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 0
len = 1
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 0
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 1
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=44 bci=35
44    				int q = high+low>>1;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=44
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.S(), line=62 bci=0
62    		return sins[a]+sins[b]+sins[c];

main[1] Method arguments:
a = 2
b = 1
c = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.count(), line=45 bci=58
45    				if(S(len, q, n-len-q) <= h){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=46 bci=63
46    					low = q;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 2
low = 0
high = 2
q = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=50 bci=74
50    			}

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 2
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=53 bci=105
53    				ret--;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 4
len = 2
low = 1
high = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 3
len = 2
main[1] > 
Step completed: "thread=main", Main.count(), line=42 bci=13
42    			int low = 0, high = (n-len)/2+1;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=43 bci=26
43    			while(high-low > 1){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=51 bci=77
51    			ret += low*2;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=52 bci=85
52    			if(low == (n-len)/2 && (n-len)%2 == 0){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 3
len = 3
low = 0
high = 1
main[1] > 
Step completed: "thread=main", Main.count(), line=41 bci=109
41    		for(int len = 1;len <= n-1;len++){

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 3
len = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=56 bci=115
56    		assert ret*n % 3 == 0;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.count(), line=57 bci=142
57    		return ret*n/3;

main[1] Method arguments:
h = 1.000000000000005
n = 4
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=87
27    			if(count(h, n) <= K){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.0000000000000107
rep = 49
h = 1.000000000000005
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=98
30    				high = h;

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.0000000000000107
rep = 49
h = 1.000000000000005
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=102
25    		for(int rep = 0;rep < 50;rep++){

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.000000000000005
rep = 49
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=108
33    		out.printf("%.14f\n", high);

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.000000000000005
main[1] > 
Step completed: "thread=main", Main.solve(), line=34 bci=129
34    	}

main[1] Method arguments:
Local variables:
n = 4
K = 2
low = 0.9999999999999996
high = 1.000000000000005
main[1] > 
Step completed: "thread=main", Main.main(), line=72 bci=51
72    		out.flush();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1694062944197
main[1] > 
Step completed: "thread=main", Main.main(), line=73 bci=57
73    		long G = System.currentTimeMillis();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1694062944197
main[1] > 
Step completed: "thread=main", Main.main(), line=74 bci=61
74    		tr(G-S+"ms");

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1694062944197
G = 1694063741276
main[1] > 
Step completed: "thread=main", Main.tr(), line=198 bci=0
198    	private static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }

main[1] Method arguments:
o = instance of java.lang.Object[1] (id=487)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=75 bci=92
75    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
S = 1694062944197
G = 1694063741276
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
