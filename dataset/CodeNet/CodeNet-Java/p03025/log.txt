some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=489 bci=0
489    			solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=0
16    		int n = nei();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nei(), line=370 bci=0
370    		return IO.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=572 bci=0
572    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=525 bci=0
525    		while (hasNextByte() && ((c = buffer[ptr]) < '!' || c > '~'))

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=507 bci=11
507    		ptr = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=509 bci=15
509    			len = in.read(buffer);

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=512 bci=27
512    		}

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=513 bci=35
513    		return len > 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=525 bci=3
525    		while (hasNextByte() && ((c = buffer[ptr]) < '!' || c > '~'))

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=527 bci=37
527    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=527 bci=40
527    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=572 bci=3
572    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=574 bci=14
574    		int n = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=575 bci=16
575    		int sign = 1;

main[1] Method arguments:
Local variables:
n = 0
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=576 bci=18
576    		int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
sign = 1
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=576 bci=21
576    		int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
sign = 1
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=577 bci=22
577    		if (b == '-') {

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 49
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=581 bci=34
581    		if (b < '0' || '9' < b)

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 49
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 49
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=585 bci=66
585    				n = n * 10 + b - '0';

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 49
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=108
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 1
sign = 1
b = 49
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=111
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 1
sign = 1
b = 49
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 1
sign = 1
b = 32
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=586 bci=79
586    			else if (b == -1 || b < '!' || b > '~')

main[1] Method arguments:
Local variables:
n = 1
sign = 1
b = 32
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=587 bci=96
587    				return n * sign;

main[1] Method arguments:
Local variables:
n = 1
sign = 1
b = 32
main[1] > 
Step completed: "thread=main", Main.nei(), line=370 bci=3
370    		return IO.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=3
16    		int n = nei();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=4
17    		long a = nei();

main[1] Method arguments:
Local variables:
n = 1
main[1] > 
Step completed: "thread=main", Main.nei(), line=370 bci=0
370    		return IO.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=572 bci=0
572    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=525 bci=0
525    		while (hasNextByte() && ((c = buffer[ptr]) < '!' || c > '~'))

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=525 bci=3
525    		while (hasNextByte() && ((c = buffer[ptr]) < '!' || c > '~'))

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=527 bci=37
527    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=527 bci=40
527    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=572 bci=3
572    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=574 bci=14
574    		int n = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=575 bci=16
575    		int sign = 1;

main[1] Method arguments:
Local variables:
n = 0
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=576 bci=18
576    		int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
sign = 1
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=576 bci=21
576    		int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
sign = 1
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=577 bci=22
577    		if (b == '-') {

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=581 bci=34
581    		if (b < '0' || '9' < b)

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=585 bci=66
585    				n = n * 10 + b - '0';

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=108
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 2
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=111
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 2
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 2
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=585 bci=66
585    				n = n * 10 + b - '0';

main[1] Method arguments:
Local variables:
n = 2
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=108
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 25
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=111
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 25
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 25
sign = 1
b = 32
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=586 bci=79
586    			else if (b == -1 || b < '!' || b > '~')

main[1] Method arguments:
Local variables:
n = 25
sign = 1
b = 32
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=587 bci=96
587    				return n * sign;

main[1] Method arguments:
Local variables:
n = 25
sign = 1
b = 32
main[1] > 
Step completed: "thread=main", Main.nei(), line=370 bci=3
370    		return IO.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=17 bci=7
17    		long a = nei();

main[1] Method arguments:
Local variables:
n = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=9
18    		long b = nei();

main[1] Method arguments:
Local variables:
n = 1
a = 25
main[1] > 
Step completed: "thread=main", Main.nei(), line=370 bci=0
370    		return IO.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=572 bci=0
572    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=525 bci=0
525    		while (hasNextByte() && ((c = buffer[ptr]) < '!' || c > '~'))

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=525 bci=3
525    		while (hasNextByte() && ((c = buffer[ptr]) < '!' || c > '~'))

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=527 bci=37
527    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=527 bci=40
527    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=572 bci=3
572    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=574 bci=14
574    		int n = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=575 bci=16
575    		int sign = 1;

main[1] Method arguments:
Local variables:
n = 0
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=576 bci=18
576    		int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
sign = 1
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=576 bci=21
576    		int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
sign = 1
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=577 bci=22
577    		if (b == '-') {

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=581 bci=34
581    		if (b < '0' || '9' < b)

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=585 bci=66
585    				n = n * 10 + b - '0';

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=108
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 2
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=111
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 2
sign = 1
b = 50
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 2
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=585 bci=66
585    				n = n * 10 + b - '0';

main[1] Method arguments:
Local variables:
n = 2
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=108
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 25
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=111
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 25
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 25
sign = 1
b = 32
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=586 bci=79
586    			else if (b == -1 || b < '!' || b > '~')

main[1] Method arguments:
Local variables:
n = 25
sign = 1
b = 32
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=587 bci=96
587    				return n * sign;

main[1] Method arguments:
Local variables:
n = 25
sign = 1
b = 32
main[1] > 
Step completed: "thread=main", Main.nei(), line=370 bci=3
370    		return IO.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=12
18    		long b = nei();

main[1] Method arguments:
Local variables:
n = 1
a = 25
main[1] > 
Step completed: "thread=main", Main.solve(), line=19 bci=14
19    		long c = nei();

main[1] Method arguments:
Local variables:
n = 1
a = 25
b = 25
main[1] > 
Step completed: "thread=main", Main.nei(), line=370 bci=0
370    		return IO.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=572 bci=0
572    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=525 bci=0
525    		while (hasNextByte() && ((c = buffer[ptr]) < '!' || c > '~'))

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=525 bci=3
525    		while (hasNextByte() && ((c = buffer[ptr]) < '!' || c > '~'))

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=527 bci=37
527    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNext(), line=527 bci=40
527    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=572 bci=3
572    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=574 bci=14
574    		int n = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=575 bci=16
575    		int sign = 1;

main[1] Method arguments:
Local variables:
n = 0
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=576 bci=18
576    		int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
sign = 1
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=576 bci=21
576    		int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
sign = 1
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=577 bci=22
577    		if (b == '-') {

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=581 bci=34
581    		if (b < '0' || '9' < b)

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=585 bci=66
585    				n = n * 10 + b - '0';

main[1] Method arguments:
Local variables:
n = 0
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=108
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 5
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=111
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 5
sign = 1
b = 53
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 5
sign = 1
b = 48
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=585 bci=66
585    				n = n * 10 + b - '0';

main[1] Method arguments:
Local variables:
n = 5
sign = 1
b = 48
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=108
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 50
sign = 1
b = 48
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=0
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=505 bci=0
505    		if (ptr < len)

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.hasNextByte(), line=506 bci=9
506    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=517 bci=3
517    		if (hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.readByte(), line=518 bci=6
518    			return buffer[ptr++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=590 bci=111
590    			b = readByte();

main[1] Method arguments:
Local variables:
n = 50
sign = 1
b = 48
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=584 bci=54
584    			if ('0' <= b && b <= '9')

main[1] Method arguments:
Local variables:
n = 50
sign = 1
b = 10
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=586 bci=79
586    			else if (b == -1 || b < '!' || b > '~')

main[1] Method arguments:
Local variables:
n = 50
sign = 1
b = 10
main[1] > 
Step completed: "thread=main", IO.nextInt(), line=587 bci=96
587    				return n * sign;

main[1] Method arguments:
Local variables:
n = 50
sign = 1
b = 10
main[1] > 
Step completed: "thread=main", Main.nei(), line=370 bci=3
370    		return IO.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=19 bci=17
19    		long c = nei();

main[1] Method arguments:
Local variables:
n = 1
a = 25
b = 25
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=20
20    		long na = 100 - a;

main[1] Method arguments:
Local variables:
n = 1
a = 25
b = 25
c = 50
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=27
21    		long nb = 100 - b;

main[1] Method arguments:
Local variables:
n = 1
a = 25
b = 25
c = 50
na = 75
main[1] > 
Step completed: "thread=main", Main.solve(), line=22 bci=34
22    		long M = 1000000007;

main[1] Method arguments:
Local variables:
n = 1
a = 25
b = 25
c = 50
na = 75
nb = 75
main[1] > 
Step completed: "thread=main", Main.solve(), line=23 bci=39
23    		long inv100 = modinv(100, M);

main[1] Method arguments:
Local variables:
n = 1
a = 25
b = 25
c = 50
na = 75
nb = 75
M = 1000000007
main[1] > 
Step completed: "thread=main", Main.modinv(), line=150 bci=0
150    		return modpow(a, mod - 2, mod);

main[1] Method arguments:
a = 100
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 100
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 100
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=155 bci=6
155    			return 1;

main[1] Method arguments:
a = 100
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 2
mod = 1000000007
Local variables:
sqrt = 100
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 6
mod = 1000000007
Local variables:
sqrt = 1000000
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 14
mod = 1000000007
Local variables:
sqrt = 999300007
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 28
mod = 1000000007
Local variables:
sqrt = 999996577
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 58
mod = 1000000007
Local variables:
sqrt = 176489993
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 118
mod = 1000000007
Local variables:
sqrt = 109902713
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 238
mod = 1000000007
Local variables:
sqrt = 21012532
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 476
mod = 1000000007
Local variables:
sqrt = 497960342
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 952
mod = 1000000007
Local variables:
sqrt = 469005464
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 1906
mod = 1000000007
Local variables:
sqrt = 209242996
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 3814
mod = 1000000007
Local variables:
sqrt = 857759858
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 7628
mod = 1000000007
Local variables:
sqrt = 845916388
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 15258
mod = 1000000007
Local variables:
sqrt = 794483071
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 30516
mod = 1000000007
Local variables:
sqrt = 687167626
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 61034
mod = 1000000007
Local variables:
sqrt = 708047563
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 122070
mod = 1000000007
Local variables:
sqrt = 91953328
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 244140
mod = 1000000007
Local variables:
sqrt = 471087686
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 488280
mod = 1000000007
Local variables:
sqrt = 347369354
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 976562
mod = 1000000007
Local variables:
sqrt = 371904525
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 1953124
mod = 1000000007
Local variables:
sqrt = 747284807
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 3906250
mod = 1000000007
Local variables:
sqrt = 398519698
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 7812500
mod = 1000000007
Local variables:
sqrt = 582285568
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 15625000
mod = 1000000007
Local variables:
sqrt = 327687264
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 31250000
mod = 1000000007
Local variables:
sqrt = 236153102
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 62500000
mod = 1000000007
Local variables:
sqrt = 193844395
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 125000000
mod = 1000000007
Local variables:
sqrt = 209886482
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 250000000
mod = 1000000007
Local variables:
sqrt = 17969979
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 500000002
mod = 1000000007
Local variables:
sqrt = 300000002
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 100
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 100
b = 1000000004
mod = 1000000007
Local variables:
sqrt = 570000004
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 100
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modinv(), line=150 bci=10
150    		return modpow(a, mod - 2, mod);

main[1] Method arguments:
a = 100
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=23 bci=47
23    		long inv100 = modinv(100, M);

main[1] Method arguments:
Local variables:
n = 1
a = 25
b = 25
c = 50
na = 75
nb = 75
M = 1000000007
main[1] > 
Step completed: "thread=main", Main.solve(), line=24 bci=49
24    		a = a * inv100 % M;

main[1] Method arguments:
Local variables:
n = 1
a = 25
b = 25
c = 50
na = 75
nb = 75
M = 1000000007
inv100 = 570000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=57
25    		b = b * inv100 % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 25
c = 50
na = 75
nb = 75
M = 1000000007
inv100 = 570000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=65
26    		c = c * inv100 % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 50
na = 75
nb = 75
M = 1000000007
inv100 = 570000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=75
27    		na = na * inv100 % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 75
nb = 75
M = 1000000007
inv100 = 570000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=85
28    		nb = nb * inv100 % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 75
M = 1000000007
inv100 = 570000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=95
29    		long[] fa = new long[2 * n];

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=102
30    		long[] fai = new long[2 * n];

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
main[1] > 
Step completed: "thread=main", Main.solve(), line=31 bci=109
31    		fa[0] = 1;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
main[1] > 
Step completed: "thread=main", Main.solve(), line=32 bci=114
32    		fai[0] = 1;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=119
33    		for (int i = 1; i < 2 * n; i++) {

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
main[1] > 
Step completed: "thread=main", Main.solve(), line=34 bci=130
34    			fa[i] = fa[i - 1] * i % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=149
35    			fai[i] = modinv(fa[i], M);

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
i = 1
main[1] > 
Step completed: "thread=main", Main.modinv(), line=150 bci=0
150    		return modpow(a, mod - 2, mod);

main[1] Method arguments:
a = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 1
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 1
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=155 bci=6
155    			return 1;

main[1] Method arguments:
a = 1
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 2
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 6
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 14
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 28
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 58
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 118
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 238
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 476
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 952
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 1906
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 3814
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 7628
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 15258
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 30516
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 61034
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 122070
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 244140
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 488280
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 976562
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 1953124
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 3906250
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 7812500
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 15625000
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 31250000
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 62500000
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 125000000
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 250000000
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 500000002
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 1
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 1
b = 1000000004
mod = 1000000007
Local variables:
sqrt = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 1
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modinv(), line=150 bci=10
150    		return modpow(a, mod - 2, mod);

main[1] Method arguments:
a = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=163
35    			fai[i] = modinv(fa[i], M);

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=164
33    		for (int i = 1; i < 2 * n; i++) {

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=170
37    		long ans = 0;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=173
39    		long scale=modinv((a+b)%M,M);

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
main[1] > 
Step completed: "thread=main", Main.modinv(), line=150 bci=0
150    		return modpow(a, mod - 2, mod);

main[1] Method arguments:
a = 500000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=155 bci=6
155    			return 1;

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 2
mod = 1000000007
Local variables:
sqrt = 500000004
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 6
mod = 1000000007
Local variables:
sqrt = 125000001
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 14
mod = 1000000007
Local variables:
sqrt = 570312504
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 28
mod = 1000000007
Local variables:
sqrt = 941955573
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 58
mod = 1000000007
Local variables:
sqrt = 147398132
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 118
mod = 1000000007
Local variables:
sqrt = 582502984
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 238
mod = 1000000007
Local variables:
sqrt = 996868101
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 476
mod = 1000000007
Local variables:
sqrt = 835124180
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 952
mod = 1000000007
Local variables:
sqrt = 138645663
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 1906
mod = 1000000007
Local variables:
sqrt = 367075618
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 3814
mod = 1000000007
Local variables:
sqrt = 193435184
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 7628
mod = 1000000007
Local variables:
sqrt = 147193666
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 15258
mod = 1000000007
Local variables:
sqrt = 579428869
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 30516
mod = 1000000007
Local variables:
sqrt = 880454484
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 61034
mod = 1000000007
Local variables:
sqrt = 484652806
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 122070
mod = 1000000007
Local variables:
sqrt = 359727628
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 244140
mod = 1000000007
Local variables:
sqrt = 440678629
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 488280
mod = 1000000007
Local variables:
sqrt = 697936077
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 976562
mod = 1000000007
Local variables:
sqrt = 584173294
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 1953124
mod = 1000000007
Local variables:
sqrt = 34001391
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 3906250
mod = 1000000007
Local variables:
sqrt = 790921115
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 7812500
mod = 1000000007
Local variables:
sqrt = 773949790
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 15625000
mod = 1000000007
Local variables:
sqrt = 248056189
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 31250000
mod = 1000000007
Local variables:
sqrt = 470480617
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 62500000
mod = 1000000007
Local variables:
sqrt = 423236626
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 125000000
mod = 1000000007
Local variables:
sqrt = 333959196
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 250000000
mod = 1000000007
Local variables:
sqrt = 812265215
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 500000002
mod = 1000000007
Local variables:
sqrt = 940286407
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 1000000004
mod = 1000000007
Local variables:
sqrt = 2
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modinv(), line=150 bci=10
150    		return modpow(a, mod - 2, mod);

main[1] Method arguments:
a = 500000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=184
39    		long scale=modinv((a+b)%M,M);

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=41 bci=186
41    		long a2=a*scale%M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=42 bci=195
42    		long b2=b*scale%M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=204
43    		for (int k = n; k < 2 * n; k++) {

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
b2 = 500000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=215
44    			long ak = modpow(a2, n, M) * modpow(b2, k - n, M) % M * modcomb(k - 1, n - 1, fa, fai, M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=155 bci=6
155    			return 1;

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=224
44    			long ak = modpow(a2, n, M) * modpow(b2, k - n, M) % M * modcomb(k - 1, n - 1, fa, fai, M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=155 bci=6
155    			return 1;

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=236
44    			long ak = modpow(a2, n, M) * modpow(b2, k - n, M) % M * modcomb(k - 1, n - 1, fa, fai, M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
main[1] > 
Step completed: "thread=main", Main.modcomb(), line=217 bci=0
217    		if (m > n)

main[1] Method arguments:
n = 0
m = 0
facts = instance of long[2] (id=446)
invfacts = instance of long[2] (id=447)
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modcomb(), line=219 bci=7
219    		long numer = facts[n];

main[1] Method arguments:
n = 0
m = 0
facts = instance of long[2] (id=446)
invfacts = instance of long[2] (id=447)
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modcomb(), line=220 bci=12
220    		long denom = invfacts[m] * invfacts[n - m] % mod;

main[1] Method arguments:
n = 0
m = 0
facts = instance of long[2] (id=446)
invfacts = instance of long[2] (id=447)
mod = 1000000007
Local variables:
numer = 1
main[1] > 
Step completed: "thread=main", Main.modcomb(), line=221 bci=26
221    		return numer * denom % mod;

main[1] Method arguments:
n = 0
m = 0
facts = instance of long[2] (id=446)
invfacts = instance of long[2] (id=447)
mod = 1000000007
Local variables:
numer = 1
denom = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=256
44    			long ak = modpow(a2, n, M) * modpow(b2, k - n, M) % M * modcomb(k - 1, n - 1, fa, fai, M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=262
45    			long bk = modpow(b2, n, M) * modpow(a2, k - n, M) % M * modcomb(k - 1, n - 1, fa, fai, M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
ak = 500000004
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=155 bci=6
155    			return 1;

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=271
45    			long bk = modpow(b2, n, M) * modpow(a2, k - n, M) % M * modcomb(k - 1, n - 1, fa, fai, M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
ak = 500000004
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=155 bci=6
155    			return 1;

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=283
45    			long bk = modpow(b2, n, M) * modpow(a2, k - n, M) % M * modcomb(k - 1, n - 1, fa, fai, M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
ak = 500000004
main[1] > 
Step completed: "thread=main", Main.modcomb(), line=217 bci=0
217    		if (m > n)

main[1] Method arguments:
n = 0
m = 0
facts = instance of long[2] (id=446)
invfacts = instance of long[2] (id=447)
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modcomb(), line=219 bci=7
219    		long numer = facts[n];

main[1] Method arguments:
n = 0
m = 0
facts = instance of long[2] (id=446)
invfacts = instance of long[2] (id=447)
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modcomb(), line=220 bci=12
220    		long denom = invfacts[m] * invfacts[n - m] % mod;

main[1] Method arguments:
n = 0
m = 0
facts = instance of long[2] (id=446)
invfacts = instance of long[2] (id=447)
mod = 1000000007
Local variables:
numer = 1
main[1] > 
Step completed: "thread=main", Main.modcomb(), line=221 bci=26
221    		return numer * denom % mod;

main[1] Method arguments:
n = 0
m = 0
facts = instance of long[2] (id=446)
invfacts = instance of long[2] (id=447)
mod = 1000000007
Local variables:
numer = 1
denom = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=303
45    			long bk = modpow(b2, n, M) * modpow(a2, k - n, M) % M * modcomb(k - 1, n - 1, fa, fai, M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
ak = 500000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=309
46    			ans = (ans + ak * k % M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 0
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
ak = 500000004
bk = 500000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=326
47    			ans = (ans + bk * k % M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 500000004
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
ak = 500000004
bk = 500000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=343
43    		for (int k = n; k < 2 * n; k++) {

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 1
scale = 2
a2 = 500000004
b2 = 500000004
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=349
49    		ans = ans * modinv((a + b) % M, M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 1
scale = 2
a2 = 500000004
b2 = 500000004
main[1] > 
Step completed: "thread=main", Main.modinv(), line=150 bci=0
150    		return modpow(a, mod - 2, mod);

main[1] Method arguments:
a = 500000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=16
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=156 bci=8
156    		if ((b & 1) == 0) {

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=36
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=154 bci=0
154    		if (b == 0)

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=155 bci=6
155    			return 1;

main[1] Method arguments:
a = 500000004
b = 0
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 2
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 2
mod = 1000000007
Local variables:
sqrt = 500000004
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 3
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 6
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 6
mod = 1000000007
Local variables:
sqrt = 125000001
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 7
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 14
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 14
mod = 1000000007
Local variables:
sqrt = 570312504
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 28
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 28
mod = 1000000007
Local variables:
sqrt = 941955573
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 29
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 58
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 58
mod = 1000000007
Local variables:
sqrt = 147398132
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 59
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 118
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 118
mod = 1000000007
Local variables:
sqrt = 582502984
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 119
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 238
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 238
mod = 1000000007
Local variables:
sqrt = 996868101
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 476
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 476
mod = 1000000007
Local variables:
sqrt = 835124180
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 952
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 952
mod = 1000000007
Local variables:
sqrt = 138645663
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 953
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1906
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 1906
mod = 1000000007
Local variables:
sqrt = 367075618
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1907
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 3814
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 3814
mod = 1000000007
Local variables:
sqrt = 193435184
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 7628
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 7628
mod = 1000000007
Local variables:
sqrt = 147193666
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 7629
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 15258
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 15258
mod = 1000000007
Local variables:
sqrt = 579428869
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 30516
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 30516
mod = 1000000007
Local variables:
sqrt = 880454484
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 30517
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 61034
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 61034
mod = 1000000007
Local variables:
sqrt = 484652806
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 61035
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 122070
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 122070
mod = 1000000007
Local variables:
sqrt = 359727628
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 244140
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 244140
mod = 1000000007
Local variables:
sqrt = 440678629
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 488280
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 488280
mod = 1000000007
Local variables:
sqrt = 697936077
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 488281
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 976562
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 976562
mod = 1000000007
Local variables:
sqrt = 584173294
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1953124
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 1953124
mod = 1000000007
Local variables:
sqrt = 34001391
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1953125
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 3906250
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 3906250
mod = 1000000007
Local variables:
sqrt = 790921115
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 7812500
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 7812500
mod = 1000000007
Local variables:
sqrt = 773949790
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 15625000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 15625000
mod = 1000000007
Local variables:
sqrt = 248056189
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 31250000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 31250000
mod = 1000000007
Local variables:
sqrt = 470480617
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 62500000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 62500000
mod = 1000000007
Local variables:
sqrt = 423236626
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 125000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 125000000
mod = 1000000007
Local variables:
sqrt = 333959196
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 250000000
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 250000000
mod = 1000000007
Local variables:
sqrt = 812265215
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 250000001
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 500000002
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 500000002
mod = 1000000007
Local variables:
sqrt = 940286407
main[1] > 
Step completed: "thread=main", Main.modpow(), line=157 bci=25
157    			long sqrt = modpow(a, b >> 1, mod);

main[1] Method arguments:
a = 500000004
b = 1000000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modpow(), line=158 bci=27
158    			return sqrt * sqrt % mod;

main[1] Method arguments:
a = 500000004
b = 1000000004
mod = 1000000007
Local variables:
sqrt = 2
main[1] > 
Step completed: "thread=main", Main.modpow(), line=160 bci=46
160    		return a * modpow(a, b - 1, mod) % mod;

main[1] Method arguments:
a = 500000004
b = 1000000005
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.modinv(), line=150 bci=10
150    		return modpow(a, mod - 2, mod);

main[1] Method arguments:
a = 500000004
mod = 1000000007
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=362
49    		ans = ans * modinv((a + b) % M, M) % M;

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 1
scale = 2
a2 = 500000004
b2 = 500000004
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=368
50    		out(ans);

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 2
scale = 2
a2 = 500000004
b2 = 500000004
main[1] > 
Step completed: "thread=main", Main.out(), line=308 bci=0
308    		IO.out(String.valueOf(val));

main[1] Method arguments:
val = 2
Local variables:
main[1] > 
Step completed: "thread=main", IO.out(), line=599 bci=0
599    		out.println(val);

main[1] Method arguments:
val = "2"
Local variables:
main[1] > 
Step completed: "thread=main", IO.out(), line=600 bci=7
600    	}

main[1] Method arguments:
val = "2"
Local variables:
main[1] > 
Step completed: "thread=main", Main.out(), line=309 bci=7
309    	}

main[1] Method arguments:
val = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=373
51    	}

main[1] Method arguments:
Local variables:
n = 1
a = 250000002
b = 250000002
c = 500000004
na = 750000006
nb = 750000006
M = 1000000007
inv100 = 570000004
fa = instance of long[2] (id=446)
fai = instance of long[2] (id=447)
ans = 2
scale = 2
a2 = 500000004
b2 = 500000004
main[1] > 
Step completed: "thread=main", Main.main(), line=490 bci=3
490    			IO.flush();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", IO.flush(), line=603 bci=0
603    		out.flush();

main[1] No local variables
main[1] > 
Step completed: "thread=main", IO.flush(), line=604 bci=6
604    	}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=493 bci=6
493    		}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=494 bci=14
494    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
