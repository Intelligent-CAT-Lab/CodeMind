{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid run() {\n\t\tsolver();\n\t}\n\n\tvoid solver() {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint M = sc.nextInt();\n\t\tint N = sc.nextInt();\n\t\tint m0 = sc.nextInt();\n\t\tint md = sc.nextInt();\n\t\tint n0 = sc.nextInt();\n\t\tint nd = sc.nextInt();\n\t\tint[] m = new int[M];\n\t\tint[] n = new int[N];\n\t\tm[0] = m0;\n\t\tn[0] = n0;\n\n\t\tfor (int i = 1; i < M; ++i) {\n\t\t\tm[i] = (m[i - 1] * 58 + md) % (N + 1);\n\t\t}\n\t\tfor (int i = 1; i < N; ++i) {\n\t\t\tn[i] = (n[i - 1] * 58 + nd) % (M + 1);\n\t\t}\n\n\t\tm = sort(m, N);\n\t\tn = sort(n, M);\n\t\t\n\t\tlong[] accumN = new long[N + 1];\n\t\tlong[] accumM = new long[M + 1];\n\t\tfor (int i = 0; i < N; ++i) {\n\t\t\taccumN[i + 1] = accumN[i] + n[i];\n\t\t}\n\t\tfor (int i = 0; i < M; ++i) {\n\t\t\taccumM[i + 1] = accumM[i] + m[i];\n\t\t}\n\t\t\n\t\tint cur = N;\n\t\tlong sum = accumM[0] + accumN[cur] + (N - cur) * (M - 0);\n\t\tfor (int i = 0; i <= M; ++i) {\n\t\t\twhile (cur >= 1 && accumM[i] + accumN[cur] + (long)(N - cur) * (M - i) >= accumM[i] + accumN[cur - 1]\n\t\t\t\t\t+ (long)(N - (cur - 1)) *(M - i))\n\t\t\t\t--cur;\n\t\t\tsum = Math.min(sum, accumM[i] + accumN[cur] + (long)(N - cur) * (M - i));\n\t\t}\n\t\t\n\t\tSystem.out.println(sum);\n\t\tsc.close();\n\t}\n\n\tint[] sort(int[] a, int max) {\n\t\tint[] counter = new int[max + 1];\n\t\tfor (int i = 0; i < a.length; ++i) {\n\t\t\tcounter[a[i]]++;\n\t\t}\n\t\tint pos = 0;\n\t\tfor (int i = 0; i < counter.length; ++i) {\n\t\t\twhile (counter[i]-- > 0) {\n\t\t\t\ta[pos++] = i;\n\t\t\t}\n\t\t}\n\t\treturn a;\n\t}\n\n\tvoid tr(Object... objects) {\n\t\tSystem.out.println(Arrays.deepToString(objects));\n\t}\n}Gicen the following input:\n2 3 1 3 1 0\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "2\n"
    }
}