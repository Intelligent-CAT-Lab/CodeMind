some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=101 bci=0
101    	static String INPUT = null;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=91 bci=0
91    		sc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Scanner.<init>(), line=107 bci=0
107    		Scanner (InputStream in) {

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Scanner.<init>(), line=108 bci=4
108    			br = new BufferedReader(new InputStreamReader(in));

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Scanner.<init>(), line=109 bci=23
109    		}

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=91 bci=32
91    		sc = new Scanner(INPUT == null ? System.in : new ByteArrayInputStream(INPUT.getBytes()));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=92 bci=35
92    		pr = new Printer(System.out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Printer.<init>(), line=272 bci=0
272    			super(out);

main[1] Method arguments:
out = instance of java.io.PrintStream(id=452)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Printer.<init>(), line=273 bci=5
273    		}

main[1] Method arguments:
out = instance of java.io.PrintStream(id=452)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=92 bci=45
92    		pr = new Printer(System.out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=94 bci=48
94    		solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=10 bci=0
10    		int n = sc.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=151 bci=0
151    				boolean negative = false;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=152 bci=2
152    				int res = 0;

main[1] Method arguments:
Local variables:
negative = false
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=153 bci=4
153    				int limit = -Integer.MAX_VALUE;

main[1] Method arguments:
Local variables:
negative = false
res = 0
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=154 bci=7
154    				int radix = 10;

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=156 bci=11
156    				int fc = nextPrintable();

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
main[1] > 
Step completed: "thread=main", Main$Scanner.nextPrintable(), line=122 bci=0
122    				while (!isPrintable(ch = br.read())) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Scanner.isPrintable(), line=112 bci=0
112    			return ch >= '!' && ch <= '~';

main[1] Method arguments:
ch = 54
Local variables:
main[1] > 
Step completed: "thread=main", Main$Scanner.nextPrintable(), line=122 bci=13
122    				while (!isPrintable(ch = br.read())) {

main[1] Method arguments:
Local variables:
ch = 54
main[1] > 
Step completed: "thread=main", Main$Scanner.nextPrintable(), line=128 bci=29
128    				return ch;

main[1] Method arguments:
Local variables:
ch = 54
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=156 bci=15
156    				int fc = nextPrintable();

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=157 bci=17
157    				if (fc < '0') {

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
fc = 54
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=166 bci=63
166    				int multmin = limit / radix;

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
fc = 54
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=168 bci=69
168    				int ch = fc;

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
fc = 54
multmin = -214748364
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=170 bci=73
170    					int digit = ch - '0';

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
fc = 54
multmin = -214748364
ch = 54
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=171 bci=80
171    					if (digit < 0 || digit >= radix) {

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
fc = 54
multmin = -214748364
ch = 54
digit = 6
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=174 bci=100
174    					if (res < multmin) {

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
fc = 54
multmin = -214748364
ch = 54
digit = 6
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=177 bci=114
177    					res *= radix;

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
fc = 54
multmin = -214748364
ch = 54
digit = 6
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=178 bci=119
178    					if (res < limit + digit) {

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
fc = 54
multmin = -214748364
ch = 54
digit = 6
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=181 bci=135
181    					res -= digit;

main[1] Method arguments:
Local variables:
negative = false
res = 0
limit = -2147483647
radix = 10
fc = 54
multmin = -214748364
ch = 54
digit = 6
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=183 bci=140
183    				} while (isPrintable(ch = br.read()));

main[1] Method arguments:
Local variables:
negative = false
res = -6
limit = -2147483647
radix = 10
fc = 54
multmin = -214748364
ch = 54
main[1] > 
Step completed: "thread=main", Main$Scanner.isPrintable(), line=112 bci=0
112    			return ch >= '!' && ch <= '~';

main[1] Method arguments:
ch = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=183 bci=154
183    				} while (isPrintable(ch = br.read()));

main[1] Method arguments:
Local variables:
negative = false
res = -6
limit = -2147483647
radix = 10
fc = 54
multmin = -214748364
ch = 10
main[1] > 
Step completed: "thread=main", Main$Scanner.nextInt(), line=185 bci=157
185    				return negative ? res : -res;

main[1] Method arguments:
Local variables:
negative = false
res = -6
limit = -2147483647
radix = 10
fc = 54
multmin = -214748364
ch = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=10 bci=6
10    		int n = sc.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=12 bci=7
12    		pr.println(Euler.totient((long)n));

main[1] Method arguments:
Local variables:
n = 6
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=38 bci=0
38    			long i = n;

main[1] Method arguments:
n = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=39 bci=2
39    			long phi = n;

main[1] Method arguments:
n = 6
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=40 bci=5
40    			if (i % 2 == 0) {

main[1] Method arguments:
n = 6
Local variables:
i = 6
phi = 6
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=41 bci=15
41    				phi = phi / 2;

main[1] Method arguments:
n = 6
Local variables:
i = 6
phi = 6
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=42 bci=23
42    				while (i % 2 == 0) {

main[1] Method arguments:
n = 6
Local variables:
i = 6
phi = 3
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=43 bci=33
43    					i /= 2;

main[1] Method arguments:
n = 6
Local variables:
i = 6
phi = 3
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=42 bci=23
42    				while (i % 2 == 0) {

main[1] Method arguments:
n = 6
Local variables:
i = 3
phi = 3
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=46 bci=42
46    			if (i % 3 == 0) {

main[1] Method arguments:
n = 6
Local variables:
i = 3
phi = 3
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=47 bci=52
47    				phi = phi / 3 * 2;

main[1] Method arguments:
n = 6
Local variables:
i = 3
phi = 3
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=48 bci=64
48    				while (i % 3 == 0) {

main[1] Method arguments:
n = 6
Local variables:
i = 3
phi = 2
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=49 bci=74
49    					i /= 3;

main[1] Method arguments:
n = 6
Local variables:
i = 3
phi = 2
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=48 bci=64
48    				while (i % 3 == 0) {

main[1] Method arguments:
n = 6
Local variables:
i = 1
phi = 2
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=52 bci=83
52    			for (long j = 1; true; j++) {

main[1] Method arguments:
n = 6
Local variables:
i = 1
phi = 2
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=53 bci=86
53    				long tmp = j * 6 - 1;

main[1] Method arguments:
n = 6
Local variables:
i = 1
phi = 2
j = 1
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=54 bci=96
54    				if (tmp * tmp > n) {

main[1] Method arguments:
n = 6
Local variables:
i = 1
phi = 2
j = 1
tmp = 5
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=55 bci=106
55    					break;

main[1] Method arguments:
n = 6
Local variables:
i = 1
phi = 2
j = 1
tmp = 5
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=75 bci=217
75    			if (i != 1) {

main[1] Method arguments:
n = 6
Local variables:
i = 1
phi = 2
main[1] > 
Step completed: "thread=main", Main$Euler.totient(), line=85 bci=233
85    			return phi;

main[1] Method arguments:
n = 6
Local variables:
i = 1
phi = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=12 bci=15
12    		pr.println(Euler.totient((long)n));

main[1] Method arguments:
Local variables:
n = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=13 bci=18
13    	}

main[1] Method arguments:
Local variables:
n = 6
main[1] > 
Step completed: "thread=main", Main.main(), line=97 bci=51
97    		pr.flush();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=99 bci=57
99    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
