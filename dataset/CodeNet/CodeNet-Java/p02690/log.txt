some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=13 bci=0
13    		Main mainObj = new Main();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=8 bci=0
8    public class Main {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=10 bci=4
10    	long maxDiff = 1_000_000_000;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=13 bci=7
13    		Main mainObj = new Main();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=14 bci=8
14    		mainObj.solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
mainObj = instance of Main(id=443)
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=0
18    		FastScanner fs = new FastScanner();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=73 bci=0
73    		public FastScanner() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=74 bci=9
74    			st = null;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=75 bci=14
75    			reader = new BufferedReader(new InputStreamReader(System.in));

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=76 bci=35
76    		}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=18 bci=8
18    		FastScanner fs = new FastScanner();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=19 bci=9
19    		int x = fs.nextInt();

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextInt(), line=93 bci=0
93    			return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=79 bci=0
79    			if (st == null || !st.hasMoreElements()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=80 bci=17
80    				st = new StringTokenizer(reader.readLine());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=82 bci=35
82    			return st.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextInt(), line=93 bci=4
93    			return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=19 bci=13
19    		int x = fs.nextInt();

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=14
21    		HashMap<Long, Integer> powMap = new HashMap<>();

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
main[1] > 
Step completed: "thread=main", Main.solve(), line=22 bci=22
22    		powMap.put(0L, 0);

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
main[1] > 
Step completed: "thread=main", Main.solve(), line=23 bci=35
23    		powMap.put(1L, 1);

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=48
25    		long beforePow = 1;

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=51
26    		long base = 2;

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    			long powVal = pow(base, 5);

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 1
base = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=56 bci=0
56    		long retVal = 1;

main[1] Method arguments:
base = 2
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=3
57    		while (n > 0) {

main[1] Method arguments:
base = 2
n = 5
Local variables:
retVal = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=7
58    			if ((n & 1) == 1) {

main[1] Method arguments:
base = 2
n = 5
Local variables:
retVal = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=14
59    				retVal *= base;

main[1] Method arguments:
base = 2
n = 5
Local variables:
retVal = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=61 bci=20
61    			n >>= 1;

main[1] Method arguments:
base = 2
n = 5
Local variables:
retVal = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=24
62    			base *= base;

main[1] Method arguments:
base = 2
n = 2
Local variables:
retVal = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=3
57    		while (n > 0) {

main[1] Method arguments:
base = 4
n = 2
Local variables:
retVal = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=7
58    			if ((n & 1) == 1) {

main[1] Method arguments:
base = 4
n = 2
Local variables:
retVal = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=61 bci=20
61    			n >>= 1;

main[1] Method arguments:
base = 4
n = 2
Local variables:
retVal = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=24
62    			base *= base;

main[1] Method arguments:
base = 4
n = 1
Local variables:
retVal = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=3
57    		while (n > 0) {

main[1] Method arguments:
base = 16
n = 1
Local variables:
retVal = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=7
58    			if ((n & 1) == 1) {

main[1] Method arguments:
base = 16
n = 1
Local variables:
retVal = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=14
59    				retVal *= base;

main[1] Method arguments:
base = 16
n = 1
Local variables:
retVal = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=61 bci=20
61    			n >>= 1;

main[1] Method arguments:
base = 16
n = 1
Local variables:
retVal = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=24
62    			base *= base;

main[1] Method arguments:
base = 16
n = 0
Local variables:
retVal = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=3
57    		while (n > 0) {

main[1] Method arguments:
base = 256
n = 0
Local variables:
retVal = 32
main[1] > 
Step completed: "thread=main", Main.pow(), line=64 bci=31
64    		return retVal;

main[1] Method arguments:
base = 256
n = 0
Local variables:
retVal = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=63
28    			long powVal = pow(base, 5);

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 1
base = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=65
29    			powMap.put(powVal, (int)base);

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 1
base = 2
powVal = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=81
30    			if(powVal - beforePow > x) {

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 1
base = 2
powVal = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=95
33    			base++;

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 1
base = 2
powVal = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=34 bci=101
34    			beforePow = powVal;

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 1
base = 3
powVal = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=105
35    		}

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    			long powVal = pow(base, 5);

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=56 bci=0
56    		long retVal = 1;

main[1] Method arguments:
base = 3
n = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=3
57    		while (n > 0) {

main[1] Method arguments:
base = 3
n = 5
Local variables:
retVal = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=7
58    			if ((n & 1) == 1) {

main[1] Method arguments:
base = 3
n = 5
Local variables:
retVal = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=14
59    				retVal *= base;

main[1] Method arguments:
base = 3
n = 5
Local variables:
retVal = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=61 bci=20
61    			n >>= 1;

main[1] Method arguments:
base = 3
n = 5
Local variables:
retVal = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=24
62    			base *= base;

main[1] Method arguments:
base = 3
n = 2
Local variables:
retVal = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=3
57    		while (n > 0) {

main[1] Method arguments:
base = 9
n = 2
Local variables:
retVal = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=7
58    			if ((n & 1) == 1) {

main[1] Method arguments:
base = 9
n = 2
Local variables:
retVal = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=61 bci=20
61    			n >>= 1;

main[1] Method arguments:
base = 9
n = 2
Local variables:
retVal = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=24
62    			base *= base;

main[1] Method arguments:
base = 9
n = 1
Local variables:
retVal = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=3
57    		while (n > 0) {

main[1] Method arguments:
base = 81
n = 1
Local variables:
retVal = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=7
58    			if ((n & 1) == 1) {

main[1] Method arguments:
base = 81
n = 1
Local variables:
retVal = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=14
59    				retVal *= base;

main[1] Method arguments:
base = 81
n = 1
Local variables:
retVal = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=61 bci=20
61    			n >>= 1;

main[1] Method arguments:
base = 81
n = 1
Local variables:
retVal = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=24
62    			base *= base;

main[1] Method arguments:
base = 81
n = 0
Local variables:
retVal = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=3
57    		while (n > 0) {

main[1] Method arguments:
base = 6561
n = 0
Local variables:
retVal = 243
main[1] > 
Step completed: "thread=main", Main.pow(), line=64 bci=31
64    		return retVal;

main[1] Method arguments:
base = 6561
n = 0
Local variables:
retVal = 243
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=63
28    			long powVal = pow(base, 5);

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=65
29    			powMap.put(powVal, (int)base);

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
powVal = 243
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=81
30    			if(powVal - beforePow > x) {

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
powVal = 243
main[1] > 
Step completed: "thread=main", Main.solve(), line=31 bci=92
31    				break;

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
powVal = 243
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=108
37    		for(Map.Entry<Long, Integer> mapEntry : powMap.entrySet()) {

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=141
38    			long powVal = mapEntry.getKey();

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=456)
main[1] > 
Step completed: "thread=main", Main.solve(), line=40 bci=156
40    			long diff = Math.abs(x - powVal);

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=456)
powVal = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=41 bci=166
41    			if(powMap.containsKey(diff)) {

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=456)
powVal = 0
diff = 33
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=281
51    		}

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=119
37    		for(Map.Entry<Long, Integer> mapEntry : powMap.entrySet()) {

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=141
38    			long powVal = mapEntry.getKey();

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=457)
main[1] > 
Step completed: "thread=main", Main.solve(), line=40 bci=156
40    			long diff = Math.abs(x - powVal);

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=457)
powVal = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=41 bci=166
41    			if(powMap.containsKey(diff)) {

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=457)
powVal = 32
diff = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=42 bci=178
42    				System.out.print(powMap.get(powVal));

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=457)
powVal = 32
diff = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=193
43    				if(powVal - x < 0) {

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=457)
powVal = 32
diff = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=203
44    					System.out.print(" -"+powMap.get(diff));

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=457)
powVal = 32
diff = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=272
48    				System.out.print("\n");

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=457)
powVal = 32
diff = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=280
49    				return;

main[1] Method arguments:
Local variables:
fs = instance of Main$FastScanner(id=450)
x = 33
powMap = instance of java.util.HashMap(id=451)
beforePow = 32
base = 3
mapEntry = instance of java.util.HashMap$Node(id=457)
powVal = 32
diff = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=15 bci=12
15    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
mainObj = instance of Main(id=443)
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
