some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=7 bci=0
7    		DEBUG = args.length > 0 && args[0].equals("-DEBUG");

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=8 bci=24
8    		Solver solver = new Solver();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=76 bci=0
76    		public Solver() { }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=75 bci=4
75    		FastScanner sc = new FastScanner();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=13 bci=0
13    	static class FastScanner {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=14 bci=4
14    		private final InputStream in = System.in;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=15 bci=11
15    		private final byte[] buffer = new byte[1024];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=16 bci=20
16    		private int ptr = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=17 bci=25
17    		private int buflen = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=75 bci=12
75    		FastScanner sc = new FastScanner();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=146 bci=15
146    		PrintWriter out = new PrintWriter(System.out);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=147 bci=29
147    		PrintWriter err = new PrintWriter(System.err);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=657 bci=43
657    		long INF = (long)1e18 + 7;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=661 bci=50
661    		int I_INF = (int)1e9 + 7;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=668 bci=56
668    		long MOD = (long)1e9 + 7; // 998244353;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=687 bci=63
687    		int MAX_INV_SIZE = 100_100;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=688 bci=69
688    		HashMap<Long, Long> invMap = new HashMap<>();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=698 bci=80
698    		int MAX_FACT = 5_000_100;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=701 bci=86
701    		boolean isFactPrepared = false;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=76 bci=91
76    		public Solver() { }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=8 bci=31
8    		Solver solver = new Solver();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=9 bci=32
9    		solver.solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
solver = instance of Main$Solver(id=447)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=890 bci=0
890    	long n = nl();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.nl(), line=123 bci=0
123    		long nl() { return sc.nextLong(); }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=49 bci=0
49    			if(!hasNext()) throw new NoSuchElementException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNext(), line=37 bci=0
37    		public boolean hasNext() { skipUnprintable(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.skipUnprintable(), line=36 bci=0
36    		private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=0
19    			if(ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=22 bci=13
22    				ptr = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=24 bci=18
24    					buflen = in.read(buffer);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=27 bci=33
27    				}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=28 bci=41
28    				if(buflen <= 0) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=32 bci=50
32    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.skipUnprintable(), line=36 bci=4
36    		private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.isPrintableChar(), line=35 bci=0
35    		private boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}

main[1] Method arguments:
c = 51
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastScanner.skipUnprintable(), line=36 bci=20
36    		private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNext(), line=37 bci=4
37    		public boolean hasNext() { skipUnprintable(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=0
19    			if(ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=20 bci=11
20    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNext(), line=37 bci=8
37    		public boolean hasNext() { skipUnprintable(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=49 bci=4
49    			if(!hasNext()) throw new NoSuchElementException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=50 bci=15
50    			long n = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=51 bci=17
51    			boolean minus = false;

main[1] Method arguments:
Local variables:
n = 0
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=52 bci=19
52    			int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
minus = false
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=34 bci=0
34    		private int readByte() { if(hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=0
19    			if(ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=20 bci=11
20    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=34 bci=4
34    		private int readByte() { if(hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=52 bci=23
52    			int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
minus = false
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=53 bci=25
53    			if(b == '-') {

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=57 bci=40
57    			if(b < '0' || '9' < b) {

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=61 bci=62
61    				if('0' <= b && b <= '9') {

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=62 bci=76
62    					n *= 10;

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=63 bci=82
63    					n += b - '0';

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=69 bci=128
69    				b = readByte();

main[1] Method arguments:
Local variables:
n = 3
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=34 bci=0
34    		private int readByte() { if(hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=0
19    			if(ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=20 bci=11
20    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=34 bci=4
34    		private int readByte() { if(hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=69 bci=132
69    				b = readByte();

main[1] Method arguments:
Local variables:
n = 3
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=61 bci=62
61    				if('0' <= b && b <= '9') {

main[1] Method arguments:
Local variables:
n = 3
minus = false
b = 32
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=64 bci=94
64    				}else if(b == -1 || !isPrintableChar(b)){

main[1] Method arguments:
Local variables:
n = 3
minus = false
b = 32
main[1] > 
Step completed: "thread=main", Main$FastScanner.isPrintableChar(), line=35 bci=0
35    		private boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}

main[1] Method arguments:
c = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=64 bci=106
64    				}else if(b == -1 || !isPrintableChar(b)){

main[1] Method arguments:
Local variables:
n = 3
minus = false
b = 32
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=65 bci=109
65    					return minus ? -n : n;

main[1] Method arguments:
Local variables:
n = 3
minus = false
b = 32
main[1] > 
Step completed: "thread=main", Main$Solver.nl(), line=123 bci=7
123    		long nl() { return sc.nextLong(); }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=890 bci=4
890    	long n = nl();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=891 bci=5
891    	long p = nl();

main[1] Method arguments:
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main$Solver.nl(), line=123 bci=0
123    		long nl() { return sc.nextLong(); }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=49 bci=0
49    			if(!hasNext()) throw new NoSuchElementException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNext(), line=37 bci=0
37    		public boolean hasNext() { skipUnprintable(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.skipUnprintable(), line=36 bci=0
36    		private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=0
19    			if(ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=20 bci=11
20    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.skipUnprintable(), line=36 bci=4
36    		private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.isPrintableChar(), line=35 bci=0
35    		private boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}

main[1] Method arguments:
c = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastScanner.skipUnprintable(), line=36 bci=20
36    		private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNext(), line=37 bci=4
37    		public boolean hasNext() { skipUnprintable(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=0
19    			if(ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=20 bci=11
20    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNext(), line=37 bci=8
37    		public boolean hasNext() { skipUnprintable(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=49 bci=4
49    			if(!hasNext()) throw new NoSuchElementException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=50 bci=15
50    			long n = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=51 bci=17
51    			boolean minus = false;

main[1] Method arguments:
Local variables:
n = 0
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=52 bci=19
52    			int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
minus = false
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=34 bci=0
34    		private int readByte() { if(hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=0
19    			if(ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=20 bci=11
20    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=34 bci=4
34    		private int readByte() { if(hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=52 bci=23
52    			int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
minus = false
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=53 bci=25
53    			if(b == '-') {

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=57 bci=40
57    			if(b < '0' || '9' < b) {

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=61 bci=62
61    				if('0' <= b && b <= '9') {

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=62 bci=76
62    					n *= 10;

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=63 bci=82
63    					n += b - '0';

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=69 bci=128
69    				b = readByte();

main[1] Method arguments:
Local variables:
n = 2
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=34 bci=0
34    		private int readByte() { if(hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=0
19    			if(ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=20 bci=11
20    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=34 bci=4
34    		private int readByte() { if(hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=69 bci=132
69    				b = readByte();

main[1] Method arguments:
Local variables:
n = 2
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=61 bci=62
61    				if('0' <= b && b <= '9') {

main[1] Method arguments:
Local variables:
n = 2
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=62 bci=76
62    					n *= 10;

main[1] Method arguments:
Local variables:
n = 2
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=63 bci=82
63    					n += b - '0';

main[1] Method arguments:
Local variables:
n = 20
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=69 bci=128
69    				b = readByte();

main[1] Method arguments:
Local variables:
n = 24
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=34 bci=0
34    		private int readByte() { if(hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=0
19    			if(ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=20 bci=11
20    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=34 bci=4
34    		private int readByte() { if(hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=69 bci=132
69    				b = readByte();

main[1] Method arguments:
Local variables:
n = 24
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=61 bci=62
61    				if('0' <= b && b <= '9') {

main[1] Method arguments:
Local variables:
n = 24
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=64 bci=94
64    				}else if(b == -1 || !isPrintableChar(b)){

main[1] Method arguments:
Local variables:
n = 24
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main$FastScanner.isPrintableChar(), line=35 bci=0
35    		private boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}

main[1] Method arguments:
c = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=64 bci=106
64    				}else if(b == -1 || !isPrintableChar(b)){

main[1] Method arguments:
Local variables:
n = 24
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=65 bci=109
65    					return minus ? -n : n;

main[1] Method arguments:
Local variables:
n = 24
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main$Solver.nl(), line=123 bci=7
123    		long nl() { return sc.nextLong(); }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=891 bci=9
891    	long p = nl();

main[1] Method arguments:
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=892 bci=10
892    	long factor[][] = factor(p);

main[1] Method arguments:
Local variables:
n = 3
p = 24
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=390 bci=0
390    			List<Long> factorList = new ArrayList<Long>();

main[1] Method arguments:
a = 24
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=391 bci=8
391    			List<Long> degreeList = new ArrayList<Long>();

main[1] Method arguments:
a = 24
Local variables:
factorList = instance of java.util.ArrayList(id=448)
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=392 bci=17
392    			for(long i = 2; i * i <= a; i ++) {

main[1] Method arguments:
a = 24
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=393 bci=32
393    				if(a % i == 0) {

main[1] Method arguments:
a = 24
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=394 bci=41
394    					long count = 0;

main[1] Method arguments:
a = 24
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=395 bci=44
395    					while(a % i == 0) {

main[1] Method arguments:
a = 24
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 0
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=396 bci=53
396    						a /= i;

main[1] Method arguments:
a = 24
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 0
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=397 bci=58
397    						count ++;

main[1] Method arguments:
a = 12
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 0
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=395 bci=44
395    					while(a % i == 0) {

main[1] Method arguments:
a = 12
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 1
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=396 bci=53
396    						a /= i;

main[1] Method arguments:
a = 12
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 1
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=397 bci=58
397    						count ++;

main[1] Method arguments:
a = 6
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 1
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=395 bci=44
395    					while(a % i == 0) {

main[1] Method arguments:
a = 6
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 2
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=396 bci=53
396    						a /= i;

main[1] Method arguments:
a = 6
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 2
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=397 bci=58
397    						count ++;

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 2
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=395 bci=44
395    					while(a % i == 0) {

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 3
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=399 bci=67
399    					factorList.add(i);

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 3
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=400 bci=79
400    					degreeList.add(count);

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
count = 3
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=392 bci=92
392    			for(long i = 2; i * i <= a; i ++) {

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
i = 2
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=403 bci=101
403    			if(a > 1) {

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=404 bci=107
404    				factorList.add(a);

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=405 bci=118
405    				degreeList.add(1L);

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=407 bci=130
407    			long factor[][] = new long[factorList.size()][2];

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=408 bci=143
408    			for(int i = 0; i < factorList.size(); i ++) {

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
factor = instance of long[][2] (id=451)
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=409 bci=157
409    				factor[i][0] = factorList.get(i);

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
factor = instance of long[][2] (id=451)
i = 0
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=410 bci=178
410    				factor[i][1] = degreeList.get(i);

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
factor = instance of long[][2] (id=451)
i = 0
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=408 bci=200
408    			for(int i = 0; i < factorList.size(); i ++) {

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
factor = instance of long[][2] (id=451)
i = 0
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=409 bci=157
409    				factor[i][0] = factorList.get(i);

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
factor = instance of long[][2] (id=451)
i = 1
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=410 bci=178
410    				factor[i][1] = degreeList.get(i);

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
factor = instance of long[][2] (id=451)
i = 1
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=408 bci=200
408    			for(int i = 0; i < factorList.size(); i ++) {

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
factor = instance of long[][2] (id=451)
i = 1
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=412 bci=206
412    			Arrays.sort(factor, (sort1, sort2) -> Long.compare(sort1[0], sort2[0]));

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
factor = instance of long[][2] (id=451)
main[1] > No default thread specified: use the "thread" command first.
> 
Step completed: "thread=main", Main$Solver.lambda$factor$0(), line=412 bci=1
412    			Arrays.sort(factor, (sort1, sort2) -> Long.compare(sort1[0], sort2[0]));

main[1] > 
Step completed: "thread=main", Main$Solver$$Lambda$1.2003749087.compare(), line=-1 bci=11

main[1] Local variable information not available.  Compile with -g to generate variable information
main[1] > 
Step completed: "thread=main", Main$Solver.factor(), line=413 bci=216
413    			return factor;

main[1] Method arguments:
a = 3
Local variables:
factorList = instance of java.util.ArrayList(id=448)
degreeList = instance of java.util.ArrayList(id=449)
factor = instance of long[][2] (id=451)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=892 bci=15
892    	long factor[][] = factor(p);

main[1] Method arguments:
Local variables:
n = 3
p = 24
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=893 bci=17
893    	long ans = 1;

main[1] Method arguments:
Local variables:
n = 3
p = 24
factor = instance of long[][2] (id=451)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=894 bci=20
894    	for(int i = 0; i < factor.length; i ++) {

main[1] Method arguments:
Local variables:
n = 3
p = 24
factor = instance of long[][2] (id=451)
ans = 1
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=895 bci=31
895    		if(factor[i][1] >= n) ans *= pow(factor[i][0], factor[i][1] / n);

main[1] Method arguments:
Local variables:
n = 3
p = 24
factor = instance of long[][2] (id=451)
ans = 1
i = 0
main[1] > 
Step completed: "thread=main", Main$Solver.pow(), line=342 bci=0
342    			if(y == 0) { return 1;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.pow(), line=344 bci=8
344    				long tmp = pow(x, y / 2);

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.pow(), line=342 bci=0
342    			if(y == 0) { return 1;

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.pow(), line=344 bci=18
344    				long tmp = pow(x, y / 2);

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.pow(), line=345 bci=20
345    				return tmp * tmp * (y % 2 == 0 ? 1 : x);

main[1] Method arguments:
x = 2
y = 1
Local variables:
tmp = 1
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=895 bci=65
895    		if(factor[i][1] >= n) ans *= pow(factor[i][0], factor[i][1] / n);

main[1] Method arguments:
Local variables:
n = 3
p = 24
factor = instance of long[][2] (id=451)
ans = 1
i = 0
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=894 bci=68
894    	for(int i = 0; i < factor.length; i ++) {

main[1] Method arguments:
Local variables:
n = 3
p = 24
factor = instance of long[][2] (id=451)
ans = 2
i = 0
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=895 bci=31
895    		if(factor[i][1] >= n) ans *= pow(factor[i][0], factor[i][1] / n);

main[1] Method arguments:
Local variables:
n = 3
p = 24
factor = instance of long[][2] (id=451)
ans = 2
i = 1
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=894 bci=68
894    	for(int i = 0; i < factor.length; i ++) {

main[1] Method arguments:
Local variables:
n = 3
p = 24
factor = instance of long[][2] (id=451)
ans = 2
i = 1
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=897 bci=74
897    	prtln(ans);

main[1] Method arguments:
Local variables:
n = 3
p = 24
factor = instance of long[][2] (id=451)
ans = 2
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=151 bci=0
151    		<T> void prtln(T a) { out.println(a); }

main[1] Method arguments:
a = instance of java.lang.Long(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=898 bci=83
898    }

main[1] Method arguments:
Local variables:
n = 3
p = 24
factor = instance of long[][2] (id=451)
ans = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=10 bci=36
10    		solver.exit();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
solver = instance of Main$Solver(id=447)
main[1] > 
Step completed: "thread=main", Main$Solver.exit(), line=247 bci=0
247    		void exit() { flush(); System.exit(0); }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.flush(), line=246 bci=0
246    		void flush() { out.flush(); if(DEBUG) { err.flush(); } }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.exit(), line=247 bci=4
247    		void exit() { flush(); System.exit(0); }

main[1] No local variables
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
