{
    "0": {
        "prompt": "Consider the following code:\nimport java.io.*;\nimport java.util.*;\n\npublic class Main {\n    FastScanner in;\n    PrintWriter out;\n\n    final int mod = (int) 1e9 + 7;\n\n    int add(int x, int y) {\n        x += y;\n        if (x >= mod) {\n            x -= mod;\n        }\n        return x;\n    }\n\n    void solve() {\n        char[] s = in.next().toCharArray();\n        int[][] go = new int[][]{{0, 0}, {2, 2}, {1, 3}, {2, 0}, {5, 5}, {4, 6}, {5, 3}, {8, 8}, {7, 9}, {8, 6}};\n        int start = go.length - 1;\n        String win = \"W?W?L?W?L?\";\n        int states = win.length();\n        int[] dp = new int[states];\n        dp[start] = 1;\n        int[] ndp = new int[states];\n        for (char c : s) {\n            Arrays.fill(ndp, 0);\n            for (int st = 0; st < states; st++) {\n                if (c == '0' || c == '?') {\n                    int next = go[st][0];\n                    ndp[next] = add(ndp[next], dp[st]);\n                }\n                if (c == '1' || c == '?') {\n                    int next = go[st][1];\n                    ndp[next] = add(ndp[next], dp[st]);\n                }\n            }\n            int[] tmp = dp;\n            dp = ndp;\n            ndp = tmp;\n        }\n        long res = 0;\n        for (int i = 0; i < states; i++) {\n            if (dp[i] == 0) {\n                continue;\n            }\n            char w = win.charAt(i);\n            if (w == '?') {\n                throw new AssertionError();\n            }\n            if (w == 'W') {\n                res += dp[i];\n            }\n        }\n        out.println(res % mod);\n    }\n\n    void run() {\n        try {\n            in = new FastScanner(new File(\"Main.in\"));\n            out = new PrintWriter(new File(\"Main.out\"));\n\n            solve();\n\n            out.close();\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        }\n    }\n\n    void runIO() {\n\n        in = new FastScanner(System.in);\n        out = new PrintWriter(System.out);\n\n        solve();\n\n        out.close();\n    }\n\n    class FastScanner {\n        BufferedReader br;\n        StringTokenizer st;\n\n        public FastScanner(File f) {\n            try {\n                br = new BufferedReader(new FileReader(f));\n            } catch (FileNotFoundException e) {\n                e.printStackTrace();\n            }\n        }\n\n        public FastScanner(InputStream f) {\n            br = new BufferedReader(new InputStreamReader(f));\n        }\n\n        String next() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return null;\n                st = new StringTokenizer(s);\n            }\n            return st.nextToken();\n        }\n\n        boolean hasMoreTokens() {\n            while (st == null || !st.hasMoreTokens()) {\n                String s = null;\n                try {\n                    s = br.readLine();\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n                if (s == null)\n                    return false;\n                st = new StringTokenizer(s);\n            }\n            return true;\n        }\n\n        int nextInt() {\n            return Integer.parseInt(next());\n        }\n\n        long nextLong() {\n            return Long.parseLong(next());\n        }\n\n        double nextDouble() {\n            return Double.parseDouble(next());\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main().runIO();\n    }\n}Gicen the following input:\n1??00\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "2\n"
    }
}