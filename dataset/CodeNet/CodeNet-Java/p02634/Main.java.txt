1 import java.util.*;
2 import java.util.stream.Collectors;
3 import java.io.*;
4 import java.nio.charset.StandardCharsets;
5 
6 public class Main {
7 	public static void main(String[] args) throws IOException {
8 		InputStreamReader reader = new InputStreamReader(System.in, StandardCharsets.UTF_8);
9 		BufferedReader in = new BufferedReader(reader);
10 		Main ins = new Main(in);
11 		ins.calc();
12 		ins.showResult();
13 	}
14 
15 	int A, B, C, D;
16 	long MOD = 998244353L;
17 	long[][] cell;
18 
19 	Main(BufferedReader in) throws IOException {
20 		String[] tokens = in.readLine().split(" ");
21 		A = Integer.parseInt(tokens[0]);
22 		B = Integer.parseInt(tokens[1]);
23 		C = Integer.parseInt(tokens[2]);
24 		D = Integer.parseInt(tokens[3]);
25 		cell = new long[C][D];
26 		for (int i = 0; i < C; ++i) {
27 			Arrays.fill(cell[i], 0L);
28 		}
29 		cell[A - 1][B - 1] = 1L;
30 		for (int i = A; i < C; ++i) {
31 			cell[i][B - 1] = cell[i - 1][B - 1] * B % MOD;
32 		}
33 		for (int i = B; i < D; ++i) {
34 			cell[A - 1][i] = cell[A - 1][i - 1] * A % MOD;
35 		}
36 	}
37 
38 	void calc() {
39 		for (int i = A; i < C; ++i) {
40 			for (int j = B; j < D; ++j) {
41 				// このマスが白の場合: 例えば，左のパターン * 下一列のいずれかが黒
42 				cell[i][j] = cell[i - 1][j] * (long) j;
43 				cell[i][j] %= MOD;
44 				cell[i][j] += cell[i][j - 1] * (long) i;
45 				cell[i][j] %= MOD;
46 				long val = cell[i - 1][j - 1] * (long) i;
47 				val %= MOD;
48 				val *= (long) j;
49 				val %= MOD;
50 				cell[i][j] -= val;
51 				cell[i][j] += MOD;
52 				cell[i][j] %= MOD;
53 				cell[i][j] += cell[i - 1][j];
54 				cell[i][j] %= MOD;
55 				cell[i][j] += cell[i][j - 1];
56 				cell[i][j] %= MOD;
57 			}
58 		}
59 	}
60 
61 	void showCell() {
62 		for (int i = 0; i < C; ++i) {
63 			for (int j = 0; j < D; ++j) {
64 				System.out.print(cell[i][j] + " ");
65 			}
66 			System.out.println("");
67 		}
68 	}
69 
70 	void showResult() {
71 		System.out.println(cell[C - 1][D - 1]);
72 		// showCell();
73 	}
74 }