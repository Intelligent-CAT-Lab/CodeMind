some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=6 bci=0
6    		DEBUG = args.length > 0 && args[0].equals("-DEBUG");

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=7 bci=24
7    		Solver solver = new Solver();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.<clinit>(), line=73 bci=0
73    	static class Solver {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=7 bci=27
7    		Solver solver = new Solver();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=75 bci=0
75    		public Solver() { }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=74 bci=4
74    		FastScanner sc = new FastScanner();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=12 bci=0
12    	static class FastScanner {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=13 bci=4
13    		private final InputStream in = System.in;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=14 bci=11
14    		private final byte[] buffer = new byte[1024];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=15 bci=20
15    		private int ptr = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=16 bci=25
16    		private int buflen = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=74 bci=12
74    		FastScanner sc = new FastScanner();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=145 bci=15
145    		PrintWriter out = new PrintWriter(System.out);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=146 bci=29
146    		PrintWriter err = new PrintWriter(System.err);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=577 bci=43
577    		long INF = (long)1e18 + 7;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=581 bci=50
581    		int I_INF = (int)1e9 + 7;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=588 bci=56
588    		long MOD = (long)1e9 + 7; // 998244353;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=607 bci=63
607    		int MAX_INV_SIZE = 100_100;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=608 bci=69
608    		HashMap<Long, Long> invMap = new HashMap<>();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=618 bci=80
618    		int MAX_FACT = 5_000_100;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=621 bci=86
621    		boolean isFactPrepared = false;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.<init>(), line=75 bci=91
75    		public Solver() { }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=7 bci=31
7    		Solver solver = new Solver();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=8 bci=32
8    		solver.solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
solver = instance of Main$Solver(id=447)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=810 bci=0
810    	int l = ni();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.ni(), line=111 bci=0
111    		int ni() { return (int)sc.nextLong(); }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=48 bci=0
48    			if (!hasNext()) throw new NoSuchElementException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNext(), line=36 bci=0
36    		public boolean hasNext() { skipUnprintable(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.skipUnprintable(), line=35 bci=0
35    		private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=18 bci=0
18    			if (ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=21 bci=13
21    				ptr = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=23 bci=18
23    					buflen = in.read(buffer);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=26 bci=33
26    				}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=27 bci=41
27    				if (buflen <= 0) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=31 bci=50
31    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.skipUnprintable(), line=35 bci=4
35    		private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.isPrintableChar(), line=34 bci=0
34    		private boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}

main[1] Method arguments:
c = 52
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastScanner.skipUnprintable(), line=35 bci=20
35    		private void skipUnprintable() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNext(), line=36 bci=4
36    		public boolean hasNext() { skipUnprintable(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=18 bci=0
18    			if (ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=11
19    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNext(), line=36 bci=8
36    		public boolean hasNext() { skipUnprintable(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=48 bci=4
48    			if (!hasNext()) throw new NoSuchElementException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=49 bci=15
49    			long n = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=50 bci=17
50    			boolean minus = false;

main[1] Method arguments:
Local variables:
n = 0
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=51 bci=19
51    			int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
minus = false
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=33 bci=0
33    		private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=18 bci=0
18    			if (ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=11
19    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=33 bci=4
33    		private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=51 bci=23
51    			int b = readByte();

main[1] Method arguments:
Local variables:
n = 0
minus = false
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=52 bci=25
52    			if (b == '-') {

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=56 bci=40
56    			if (b < '0' || '9' < b) {

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=60 bci=62
60    				if ('0' <= b && b <= '9') {

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=61 bci=76
61    					n *= 10;

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=62 bci=82
62    					n += b - '0';

main[1] Method arguments:
Local variables:
n = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=68 bci=128
68    				b = readByte();

main[1] Method arguments:
Local variables:
n = 4
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=33 bci=0
33    		private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=18 bci=0
18    			if (ptr < buflen) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.hasNextByte(), line=19 bci=11
19    				return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.readByte(), line=33 bci=4
33    		private int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=68 bci=132
68    				b = readByte();

main[1] Method arguments:
Local variables:
n = 4
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=60 bci=62
60    				if ('0' <= b && b <= '9') {

main[1] Method arguments:
Local variables:
n = 4
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=63 bci=94
63    				}else if(b == -1 || !isPrintableChar(b)){

main[1] Method arguments:
Local variables:
n = 4
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main$FastScanner.isPrintableChar(), line=34 bci=0
34    		private boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}

main[1] Method arguments:
c = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=63 bci=106
63    				}else if(b == -1 || !isPrintableChar(b)){

main[1] Method arguments:
Local variables:
n = 4
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextLong(), line=64 bci=109
64    					return minus ? -n : n;

main[1] Method arguments:
Local variables:
n = 4
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main$Solver.ni(), line=111 bci=7
111    		int ni() { return (int)sc.nextLong(); }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=810 bci=4
810    	int l = ni();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=811 bci=5
811    	l --;

main[1] Method arguments:
Local variables:
l = 4
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=812 bci=8
812    	int crt = 1;

main[1] Method arguments:
Local variables:
l = 3
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=813 bci=10
813    	List<Edge> edges = new ArrayList<>();

main[1] Method arguments:
Local variables:
l = 3
crt = 1
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=814 bci=18
814    	int numNode = 20;

main[1] Method arguments:
Local variables:
l = 3
crt = 1
edges = instance of java.util.ArrayList(id=448)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=815 bci=22
815    	while(l >= 0 && crt < numNode) {

main[1] Method arguments:
Local variables:
l = 3
crt = 1
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=816 bci=32
816    		if(l % 2 == 0) {

main[1] Method arguments:
Local variables:
l = 3
crt = 1
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=820 bci=64
820    			l /= 2;

main[1] Method arguments:
Local variables:
l = 3
crt = 1
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=821 bci=68
821    			edges.add(new Edge(crt, crt + 1, 0));

main[1] Method arguments:
Local variables:
l = 1
crt = 1
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=797 bci=0
797    			Edge(int source, int target, long cost) {

main[1] Method arguments:
source = 1
target = 2
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=798 bci=9
798    				this.source = source;

main[1] Method arguments:
source = 1
target = 2
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=799 bci=14
799    				this.target = target;

main[1] Method arguments:
source = 1
target = 2
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=800 bci=19
800    				this.cost = cost;

main[1] Method arguments:
source = 1
target = 2
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=801 bci=25
801    			}

main[1] Method arguments:
source = 1
target = 2
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=821 bci=82
821    			edges.add(new Edge(crt, crt + 1, 0));

main[1] Method arguments:
Local variables:
l = 1
crt = 1
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=822 bci=88
822    			edges.add(new Edge(crt, crt + 1, l + 1));

main[1] Method arguments:
Local variables:
l = 1
crt = 1
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=797 bci=0
797    			Edge(int source, int target, long cost) {

main[1] Method arguments:
source = 1
target = 2
cost = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=798 bci=9
798    				this.source = source;

main[1] Method arguments:
source = 1
target = 2
cost = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=799 bci=14
799    				this.target = target;

main[1] Method arguments:
source = 1
target = 2
cost = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=800 bci=19
800    				this.cost = cost;

main[1] Method arguments:
source = 1
target = 2
cost = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=801 bci=25
801    			}

main[1] Method arguments:
source = 1
target = 2
cost = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=822 bci=105
822    			edges.add(new Edge(crt, crt + 1, l + 1));

main[1] Method arguments:
Local variables:
l = 1
crt = 1
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=823 bci=111
823    			crt ++;

main[1] Method arguments:
Local variables:
l = 1
crt = 1
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=815 bci=22
815    	while(l >= 0 && crt < numNode) {

main[1] Method arguments:
Local variables:
l = 1
crt = 2
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=816 bci=32
816    		if(l % 2 == 0) {

main[1] Method arguments:
Local variables:
l = 1
crt = 2
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=820 bci=64
820    			l /= 2;

main[1] Method arguments:
Local variables:
l = 1
crt = 2
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=821 bci=68
821    			edges.add(new Edge(crt, crt + 1, 0));

main[1] Method arguments:
Local variables:
l = 0
crt = 2
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=797 bci=0
797    			Edge(int source, int target, long cost) {

main[1] Method arguments:
source = 2
target = 3
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=798 bci=9
798    				this.source = source;

main[1] Method arguments:
source = 2
target = 3
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=799 bci=14
799    				this.target = target;

main[1] Method arguments:
source = 2
target = 3
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=800 bci=19
800    				this.cost = cost;

main[1] Method arguments:
source = 2
target = 3
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=801 bci=25
801    			}

main[1] Method arguments:
source = 2
target = 3
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=821 bci=82
821    			edges.add(new Edge(crt, crt + 1, 0));

main[1] Method arguments:
Local variables:
l = 0
crt = 2
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=822 bci=88
822    			edges.add(new Edge(crt, crt + 1, l + 1));

main[1] Method arguments:
Local variables:
l = 0
crt = 2
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=797 bci=0
797    			Edge(int source, int target, long cost) {

main[1] Method arguments:
source = 2
target = 3
cost = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=798 bci=9
798    				this.source = source;

main[1] Method arguments:
source = 2
target = 3
cost = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=799 bci=14
799    				this.target = target;

main[1] Method arguments:
source = 2
target = 3
cost = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=800 bci=19
800    				this.cost = cost;

main[1] Method arguments:
source = 2
target = 3
cost = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=801 bci=25
801    			}

main[1] Method arguments:
source = 2
target = 3
cost = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=822 bci=105
822    			edges.add(new Edge(crt, crt + 1, l + 1));

main[1] Method arguments:
Local variables:
l = 0
crt = 2
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=823 bci=111
823    			crt ++;

main[1] Method arguments:
Local variables:
l = 0
crt = 2
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=815 bci=22
815    	while(l >= 0 && crt < numNode) {

main[1] Method arguments:
Local variables:
l = 0
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=816 bci=32
816    		if(l % 2 == 0) {

main[1] Method arguments:
Local variables:
l = 0
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=817 bci=38
817    			edges.add(new Edge(crt, numNode, l));

main[1] Method arguments:
Local variables:
l = 0
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=797 bci=0
797    			Edge(int source, int target, long cost) {

main[1] Method arguments:
source = 3
target = 20
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=798 bci=9
798    				this.source = source;

main[1] Method arguments:
source = 3
target = 20
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=799 bci=14
799    				this.target = target;

main[1] Method arguments:
source = 3
target = 20
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=800 bci=19
800    				this.cost = cost;

main[1] Method arguments:
source = 3
target = 20
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver$Edge.<init>(), line=801 bci=25
801    			}

main[1] Method arguments:
source = 3
target = 20
cost = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=817 bci=52
817    			edges.add(new Edge(crt, numNode, l));

main[1] Method arguments:
Local variables:
l = 0
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=818 bci=58
818    			l --;

main[1] Method arguments:
Local variables:
l = 0
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=815 bci=22
815    	while(l >= 0 && crt < numNode) {

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=826 bci=117
826    	prtln(numNode, edges.size());

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=152 bci=0
152    			StringBuilder sb = new StringBuilder();

main[1] Method arguments:
a = instance of int[2] (id=450)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=153 bci=8
153    			for(int element : a){ sb.append(element+" "); }

main[1] Method arguments:
a = instance of int[2] (id=450)
Local variables:
sb = instance of java.lang.StringBuilder(id=451)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=154 bci=61
154    			prtln(sb.toString().trim());

main[1] Method arguments:
a = instance of int[2] (id=450)
Local variables:
sb = instance of java.lang.StringBuilder(id=451)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=150 bci=0
150    		<T> void prtln(T a) { out.println(a); }

main[1] Method arguments:
a = "20 5"
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=155 bci=72
155    		}

main[1] Method arguments:
a = instance of int[2] (id=450)
Local variables:
sb = instance of java.lang.StringBuilder(id=451)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=827 bci=138
827    	assert(edges.size() <= 60);

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=828 bci=163
828    	assert(crt <= numNode);

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=829 bci=183
829    	for(int i = 0; i < edges.size(); i ++) {

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=830 bci=197
830    		prtln(edges.get(i).source, edges.get(i).target, edges.get(i).cost);

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
i = 0
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=157 bci=0
157    			StringBuilder sb = new StringBuilder();

main[1] Method arguments:
a = instance of long[3] (id=453)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=158 bci=8
158    			for(long element : a){ sb.append(element+" "); }

main[1] Method arguments:
a = instance of long[3] (id=453)
Local variables:
sb = instance of java.lang.StringBuilder(id=454)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=159 bci=61
159    			prtln(sb.toString().trim());

main[1] Method arguments:
a = instance of long[3] (id=453)
Local variables:
sb = instance of java.lang.StringBuilder(id=454)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=150 bci=0
150    		<T> void prtln(T a) { out.println(a); }

main[1] Method arguments:
a = "1 2 0"
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=160 bci=72
160    		}

main[1] Method arguments:
a = instance of long[3] (id=453)
Local variables:
sb = instance of java.lang.StringBuilder(id=454)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=829 bci=257
829    	for(int i = 0; i < edges.size(); i ++) {

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
i = 0
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=830 bci=197
830    		prtln(edges.get(i).source, edges.get(i).target, edges.get(i).cost);

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
i = 1
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=157 bci=0
157    			StringBuilder sb = new StringBuilder();

main[1] Method arguments:
a = instance of long[3] (id=456)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=158 bci=8
158    			for(long element : a){ sb.append(element+" "); }

main[1] Method arguments:
a = instance of long[3] (id=456)
Local variables:
sb = instance of java.lang.StringBuilder(id=457)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=159 bci=61
159    			prtln(sb.toString().trim());

main[1] Method arguments:
a = instance of long[3] (id=456)
Local variables:
sb = instance of java.lang.StringBuilder(id=457)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=150 bci=0
150    		<T> void prtln(T a) { out.println(a); }

main[1] Method arguments:
a = "1 2 2"
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=160 bci=72
160    		}

main[1] Method arguments:
a = instance of long[3] (id=456)
Local variables:
sb = instance of java.lang.StringBuilder(id=457)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=829 bci=257
829    	for(int i = 0; i < edges.size(); i ++) {

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
i = 1
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=830 bci=197
830    		prtln(edges.get(i).source, edges.get(i).target, edges.get(i).cost);

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
i = 2
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=157 bci=0
157    			StringBuilder sb = new StringBuilder();

main[1] Method arguments:
a = instance of long[3] (id=459)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=158 bci=8
158    			for(long element : a){ sb.append(element+" "); }

main[1] Method arguments:
a = instance of long[3] (id=459)
Local variables:
sb = instance of java.lang.StringBuilder(id=460)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=159 bci=61
159    			prtln(sb.toString().trim());

main[1] Method arguments:
a = instance of long[3] (id=459)
Local variables:
sb = instance of java.lang.StringBuilder(id=460)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=150 bci=0
150    		<T> void prtln(T a) { out.println(a); }

main[1] Method arguments:
a = "2 3 0"
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=160 bci=72
160    		}

main[1] Method arguments:
a = instance of long[3] (id=459)
Local variables:
sb = instance of java.lang.StringBuilder(id=460)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=829 bci=257
829    	for(int i = 0; i < edges.size(); i ++) {

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
i = 2
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=830 bci=197
830    		prtln(edges.get(i).source, edges.get(i).target, edges.get(i).cost);

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
i = 3
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=157 bci=0
157    			StringBuilder sb = new StringBuilder();

main[1] Method arguments:
a = instance of long[3] (id=462)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=158 bci=8
158    			for(long element : a){ sb.append(element+" "); }

main[1] Method arguments:
a = instance of long[3] (id=462)
Local variables:
sb = instance of java.lang.StringBuilder(id=463)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=159 bci=61
159    			prtln(sb.toString().trim());

main[1] Method arguments:
a = instance of long[3] (id=462)
Local variables:
sb = instance of java.lang.StringBuilder(id=463)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=150 bci=0
150    		<T> void prtln(T a) { out.println(a); }

main[1] Method arguments:
a = "2 3 1"
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=160 bci=72
160    		}

main[1] Method arguments:
a = instance of long[3] (id=462)
Local variables:
sb = instance of java.lang.StringBuilder(id=463)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=829 bci=257
829    	for(int i = 0; i < edges.size(); i ++) {

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
i = 3
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=830 bci=197
830    		prtln(edges.get(i).source, edges.get(i).target, edges.get(i).cost);

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
i = 4
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=157 bci=0
157    			StringBuilder sb = new StringBuilder();

main[1] Method arguments:
a = instance of long[3] (id=465)
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=158 bci=8
158    			for(long element : a){ sb.append(element+" "); }

main[1] Method arguments:
a = instance of long[3] (id=465)
Local variables:
sb = instance of java.lang.StringBuilder(id=466)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=159 bci=61
159    			prtln(sb.toString().trim());

main[1] Method arguments:
a = instance of long[3] (id=465)
Local variables:
sb = instance of java.lang.StringBuilder(id=466)
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=150 bci=0
150    		<T> void prtln(T a) { out.println(a); }

main[1] Method arguments:
a = "3 20 0"
Local variables:
main[1] > 
Step completed: "thread=main", Main$Solver.prtln(), line=160 bci=72
160    		}

main[1] Method arguments:
a = instance of long[3] (id=465)
Local variables:
sb = instance of java.lang.StringBuilder(id=466)
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=829 bci=257
829    	for(int i = 0; i < edges.size(); i ++) {

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
i = 4
main[1] > 
Step completed: "thread=main", Main$Solver.solve(), line=832 bci=263
832    }

main[1] Method arguments:
Local variables:
l = -1
crt = 3
edges = instance of java.util.ArrayList(id=448)
numNode = 20
main[1] > 
Step completed: "thread=main", Main.main(), line=9 bci=36
9    		solver.exit();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
solver = instance of Main$Solver(id=447)
main[1] > 
Step completed: "thread=main", Main$Solver.exit(), line=246 bci=0
246    		void exit() { flush(); System.exit(0); }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.flush(), line=245 bci=0
245    		void flush() { out.flush(); if(DEBUG) { err.flush(); } }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$Solver.exit(), line=246 bci=4
246    		void exit() { flush(); System.exit(0); }

main[1] No local variables
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
