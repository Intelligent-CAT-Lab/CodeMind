some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=94 bci=0
94    			in = new BufferedReader(new InputStreamReader(System.in));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=95 bci=20
95    			out = new PrintWriter(System.out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=96 bci=33
96    			solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=0
21    		String s = scanString();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=82 bci=0
82    		while (tok == null || !tok.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=83 bci=15
83    			tok = new StringTokenizer(in.readLine());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=82 bci=0
82    		while (tok == null || !tok.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=85 bci=34
85    		return tok.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=3
21    		String s = scanString();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=22 bci=4
22    		int n = s.length();

main[1] Method arguments:
Local variables:
s = "0001"
main[1] > 
Step completed: "thread=main", Main.solve(), line=23 bci=9
23    		boolean dyn1[][][] = new boolean[n + 1][n + 1][n + 1];

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=24 bci=23
24    		dyn1[0][0][0] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=31
25    		for (int i = 0; i < n; i++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=38
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=68
29    						dyn1[i + 1][j][k] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=80
30    						if (j > 0 && s.charAt(i) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=111
33    						if (k > 0 && s.charAt(i) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=142
36    						if (i + 1 < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=149
37    							if (s.charAt(i) == '0' || s.charAt(i + 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=171
38    								dyn1[i + 2][j + 1][k] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=40 bci=185
40    							if (s.charAt(i) == '1' || s.charAt(i + 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=233
25    		for (int i = 0; i < n; i++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=38
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=68
29    						dyn1[i + 1][j][k] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=80
30    						if (j > 0 && s.charAt(i) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=111
33    						if (k > 0 && s.charAt(i) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=142
36    						if (i + 1 < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=149
37    							if (s.charAt(i) == '0' || s.charAt(i + 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=171
38    								dyn1[i + 2][j + 1][k] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=40 bci=185
40    							if (s.charAt(i) == '1' || s.charAt(i + 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=233
25    		for (int i = 0; i < n; i++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=38
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=68
29    						dyn1[i + 1][j][k] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=80
30    						if (j > 0 && s.charAt(i) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=111
33    						if (k > 0 && s.charAt(i) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=142
36    						if (i + 1 < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=149
37    							if (s.charAt(i) == '0' || s.charAt(i + 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=171
38    								dyn1[i + 2][j + 1][k] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=40 bci=185
40    							if (s.charAt(i) == '1' || s.charAt(i + 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=41 bci=207
41    								dyn1[i + 2][j][k + 1] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=68
29    						dyn1[i + 1][j][k] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=80
30    						if (j > 0 && s.charAt(i) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=111
33    						if (k > 0 && s.charAt(i) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=142
36    						if (i + 1 < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=149
37    							if (s.charAt(i) == '0' || s.charAt(i + 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=171
38    								dyn1[i + 2][j + 1][k] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=40 bci=185
40    							if (s.charAt(i) == '1' || s.charAt(i + 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=41 bci=207
41    								dyn1[i + 2][j][k + 1] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=233
25    		for (int i = 0; i < n; i++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=38
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=68
29    						dyn1[i + 1][j][k] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=80
30    						if (j > 0 && s.charAt(i) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=111
33    						if (k > 0 && s.charAt(i) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=142
36    						if (i + 1 < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=68
29    						dyn1[i + 1][j][k] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=80
30    						if (j > 0 && s.charAt(i) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=31 bci=95
31    							dyn1[i + 1][j - 1][k + 1] = true;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=111
33    						if (k > 0 && s.charAt(i) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=142
36    						if (i + 1 < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=47
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=56
28    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=221
27    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=227
26    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=233
25    		for (int i = 0; i < n; i++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=239
48    		int dyn2[][][] = new int[n + 1][n + 1][n + 1];

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=253
49    		dyn2[n][0][0] = 1;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=261
50    		int ans = MOD - 1;

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=265
51    		for (int i = n; i >= 0; i--) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 998244352
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=273
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 998244352
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 998244352
i = 4
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 998244352
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 998244352
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 998244352
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 998244352
b = 1
Local variables:
res = 998244353
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 998244352
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 0
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 1
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=440
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=476
63    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=535
51    		for (int i = n; i >= 0; i--) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=273
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 2
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 1
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 3
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=535
51    		for (int i = n; i >= 0; i--) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=273
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 4
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 4
b = 1
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 4
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 2
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 3
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 4
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 4
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 5
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 5
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 5
b = 1
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 5
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 2
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 3
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 4
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 4
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 5
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 2
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 3
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 4
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 4
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 5
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 2
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 3
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 4
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 4
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 5
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 2
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 3
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 4
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 4
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 5
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=535
51    		for (int i = n; i >= 0; i--) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=273
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 6
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 6
b = 1
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 6
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 3
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 6
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 4
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 4
b = 6
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 10
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 5
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 5
b = 10
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 15
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 3
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 6
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 4
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 4
b = 6
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 10
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 5
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 5
b = 10
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 15
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 3
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 6
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 4
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 4
b = 6
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 10
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 5
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 5
b = 10
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 15
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 3
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 6
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 4
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 4
b = 6
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 10
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 5
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 5
b = 10
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 15
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 3
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 3
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 6
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 4
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 4
b = 6
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 10
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 5
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 5
b = 10
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=339
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 0
b = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 15
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=375
58    						dyn2[i - 1][j][k] = add(dyn2[i - 1][j][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=535
51    		for (int i = n; i >= 0; i--) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=273
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=304
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 7
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 7
b = 1
Local variables:
res = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=319
55    						ans = add(ans, dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 7
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 1
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 4
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 6
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 6
b = 4
Local variables:
res = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 6
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 6
b = 10
Local variables:
res = 16
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 10
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 10
b = 10
Local variables:
res = 20
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 10
b = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 10
b = 20
Local variables:
res = 30
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 15
b = 20
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 15
b = 20
Local variables:
res = 35
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 15
b = 35
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 15
b = 35
Local variables:
res = 50
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 2
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 7
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 7
b = 2
Local variables:
res = 9
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 9
Local variables:
res = 12
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 16
b = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 16
b = 9
Local variables:
res = 25
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 6
b = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 6
b = 25
Local variables:
res = 31
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 30
b = 25
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 30
b = 25
Local variables:
res = 55
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 10
b = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 10
b = 55
Local variables:
res = 65
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 50
b = 55
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 50
b = 55
Local variables:
res = 105
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 15
b = 105
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 15
b = 105
Local variables:
res = 120
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 3
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 12
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 12
b = 3
Local variables:
res = 15
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 15
Local variables:
res = 18
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 31
b = 15
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 31
b = 15
Local variables:
res = 46
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 6
b = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 6
b = 46
Local variables:
res = 52
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 65
b = 46
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 65
b = 46
Local variables:
res = 111
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 10
b = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 10
b = 111
Local variables:
res = 121
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 120
b = 111
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 120
b = 111
Local variables:
res = 231
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 15
b = 231
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 15
b = 231
Local variables:
res = 246
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 1
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 1
b = 4
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 18
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 18
b = 4
Local variables:
res = 22
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 3
b = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 3
b = 22
Local variables:
res = 25
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 52
b = 22
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 52
b = 22
Local variables:
res = 74
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 6
b = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 6
b = 74
Local variables:
res = 80
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 121
b = 74
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 121
b = 74
Local variables:
res = 195
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 10
b = 195
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 10
b = 195
Local variables:
res = 205
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 246
b = 195
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 246
b = 195
Local variables:
res = 441
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=385
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 15
b = 441
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 15
b = 441
Local variables:
res = 456
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=421
60    						dyn2[i][j + 1][k] = add(dyn2[i][j + 1][k], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=282
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 25
b = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 25
b = 5
Local variables:
res = 30
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 80
b = 30
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 80
b = 30
Local variables:
res = 110
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 205
b = 110
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 205
b = 110
Local variables:
res = 315
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=486
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.add(), line=16 bci=0
16    		int res = a + b;

main[1] Method arguments:
a = 456
b = 315
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=4
17    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 456
b = 315
Local variables:
res = 771
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=522
65    						dyn2[i][j][k + 1] = add(dyn2[i][j][k + 1], dyn2[i][j][k]);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=291
54    					if (dyn1[i][j][k]) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=321
57    					if (i > 0 && s.charAt(i - 1) == '0') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=379
59    					} else if (j < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=422
62    					if (i > 0 && s.charAt(i - 1) == '1') {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=480
64    					} else if (k < n) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=523
53    				for (int k = 0; k <= n; k++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
k = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=529
52    			for (int j = 0; j <= n; j++) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
j = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=535
51    		for (int i = n; i >= 0; i--) {

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=70 bci=541
70    		out.print(ans);

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=71 bci=549
71    	}

main[1] Method arguments:
Local variables:
s = "0001"
n = 4
dyn1 = instance of boolean[][][5] (id=450)
dyn2 = instance of int[][][5] (id=452)
ans = 8
main[1] > 
Step completed: "thread=main", Main.main(), line=97 bci=36
97    			in.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=98 bci=42
98    			out.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=102 bci=48
102    		}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=103 bci=60
103    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
