1 import java.io.IOException;
2 import java.io.InputStream;
3 import java.util.NoSuchElementException;
4 
5 public class Main {
6 
7     public static void main(String[] args) {
8         FastScanner scanner = new FastScanner();
9         int a = scanner.nextInt();
10         int b = scanner.nextInt();
11         int c = scanner.nextInt();
12 
13         boolean i = (a + b == c);
14         boolean j = (a + c == b);
15         boolean k = (b + c == a);
16 
17 
18         if (i || j || k) {
19             System.out.println("Yes");
20         } else {
21             System.out.println("No");
22         }
23 
24 
25     }
26 
27 
28     /// self liblary
29     public static class FastScanner {
30         private final InputStream in = System.in;
31         private final byte[] buffer = new byte[1024];
32         private int ptr = 0;
33         private int buflen = 0;
34 
35         private boolean hasNextByte() {
36             if (ptr < buflen) {
37                 return true;
38             } else {
39                 ptr = 0;
40                 try {
41                     buflen = in.read(buffer);
42                 } catch (IOException e) {
43                     e.printStackTrace();
44                 }
45                 if (buflen <= 0) {
46                     return false;
47                 }
48             }
49             return true;
50         }
51 
52         private int readByte() {
53             if (hasNextByte()) return buffer[ptr++];
54             else return -1;
55         }
56 
57         private static boolean isPrintableChar(int c) {
58             return 33 <= c && c <= 126;
59         }
60 
61         public boolean hasNext() {
62             while (hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++;
63             return hasNextByte();
64         }
65 
66         public String next() {
67             if (!hasNext()) throw new NoSuchElementException();
68             StringBuilder sb = new StringBuilder();
69             int b = readByte();
70             while (isPrintableChar(b)) {
71                 sb.appendCodePoint(b);
72                 b = readByte();
73             }
74             return sb.toString();
75         }
76 
77         public long nextLong() {
78             if (!hasNext()) throw new NoSuchElementException();
79             long n = 0;
80             boolean minus = false;
81             int b = readByte();
82             if (b == '-') {
83                 minus = true;
84                 b = readByte();
85             }
86             if (b < '0' || '9' < b) {
87                 throw new NumberFormatException();
88             }
89             while (true) {
90                 if ('0' <= b && b <= '9') {
91                     n *= 10;
92                     n += b - '0';
93                 } else if (b == -1 || !isPrintableChar(b)) {
94                     return minus ? -n : n;
95                 } else {
96                     throw new NumberFormatException();
97                 }
98                 b = readByte();
99             }
100         }
101 
102         public int nextInt() {
103             long nl = nextLong();
104             if (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();
105             return (int) nl;
106         }
107 
108         public double nextDouble() {
109             return Double.parseDouble(next());
110         }
111     }
112 
113 }
