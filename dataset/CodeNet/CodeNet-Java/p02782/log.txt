some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=50 bci=0
50        static int MOD = 1_000_000_007;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=11 bci=0
11            FastScanner sc = new FastScanner(System.in);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=141 bci=0
141            FastScanner(InputStream in) {

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=142 bci=4
142                reader = new BufferedReader(new InputStreamReader(in));

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=143 bci=23
143                tokenizer = null;

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main$FastScanner.<init>(), line=144 bci=28
144            }

main[1] Method arguments:
in = instance of java.io.BufferedInputStream(id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=11 bci=10
11            FastScanner sc = new FastScanner(System.in);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=12 bci=11
12            R1 = sc.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextInt(), line=173 bci=0
173                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=147 bci=0
147                if (tokenizer == null || !tokenizer.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=149 bci=17
149                        tokenizer = new StringTokenizer(reader.readLine());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=152 bci=35
152                    }

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=154 bci=48
154                return tokenizer.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextInt(), line=173 bci=4
173                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=12 bci=15
12            R1 = sc.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main.main(), line=13 bci=18
13            C1 = sc.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextInt(), line=173 bci=0
173                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=147 bci=0
147                if (tokenizer == null || !tokenizer.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=154 bci=48
154                return tokenizer.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextInt(), line=173 bci=4
173                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=13 bci=22
13            C1 = sc.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main.main(), line=14 bci=25
14            R2 = sc.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextInt(), line=173 bci=0
173                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=147 bci=0
147                if (tokenizer == null || !tokenizer.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=154 bci=48
154                return tokenizer.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextInt(), line=173 bci=4
173                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=14 bci=29
14            R2 = sc.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main.main(), line=15 bci=32
15            C2 = sc.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextInt(), line=173 bci=0
173                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=147 bci=0
147                if (tokenizer == null || !tokenizer.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.next(), line=154 bci=48
154                return tokenizer.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$FastScanner.nextInt(), line=173 bci=4
173                return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=15 bci=36
15            C2 = sc.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main.main(), line=17 bci=39
17            System.out.println(solve());

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main.solve(), line=23 bci=0
23            int[] factorial = new int[R2+C2+11];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=24 bci=13
24            factorial[0] = 1;

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=17
25            factorial[1] = 1;

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=21
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 2
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 2
Local variables:
c = 2
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 2
Local variables:
c = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 3
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 2
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 2
b = 3
Local variables:
c = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 2
b = 3
Local variables:
c = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 4
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 6
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 6
b = 4
Local variables:
c = 24
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 6
b = 4
Local variables:
c = 24
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 5
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 24
b = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 24
b = 5
Local variables:
c = 120
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 24
b = 5
Local variables:
c = 120
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 120
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 120
b = 6
Local variables:
c = 720
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 120
b = 6
Local variables:
c = 720
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 7
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 720
b = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 720
b = 7
Local variables:
c = 5040
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 720
b = 7
Local variables:
c = 5040
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 8
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 5040
b = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 5040
b = 8
Local variables:
c = 40320
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 5040
b = 8
Local variables:
c = 40320
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 9
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 40320
b = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 40320
b = 9
Local variables:
c = 362880
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 40320
b = 9
Local variables:
c = 362880
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 9
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 9
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 10
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 362880
b = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 362880
b = 10
Local variables:
c = 3628800
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 362880
b = 10
Local variables:
c = 3628800
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 11
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 3628800
b = 11
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 3628800
b = 11
Local variables:
c = 39916800
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 3628800
b = 11
Local variables:
c = 39916800
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 11
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 11
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 12
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 39916800
b = 12
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 39916800
b = 12
Local variables:
c = 479001600
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 39916800
b = 12
Local variables:
c = 479001600
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 12
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 12
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 13
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 479001600
b = 13
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 479001600
b = 13
Local variables:
c = 6227020800
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 479001600
b = 13
Local variables:
c = 227020758
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 13
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 13
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=37
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 14
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 227020758
b = 14
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 227020758
b = 14
Local variables:
c = 3178290612
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 227020758
b = 14
Local variables:
c = 178290591
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=48
27                factorial[i] = mul(factorial[i-1], i);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 14
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=49
26            for (int i = 2; i <= R2+C2+10; i++) {

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
i = 14
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=55
30            int a = f(R2, C2, factorial);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
main[1] > 
Step completed: "thread=main", Main.f(), line=43 bci=0
43            int ret = factorial[r+c+2];

main[1] Method arguments:
r = 2
c = 2
factorial = instance of int[15] (id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=44 bci=8
44            ret = div(ret, factorial[r+1]);

main[1] Method arguments:
r = 2
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 720
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=0
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 720
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=53 bci=0
53            if( exp == 0 ) return 1;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=55 bci=8
55            int ans = 1;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=56 bci=10
56            base %= MOD;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 6
Local variables:
c = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 6
Local variables:
c = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 6
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 6
b = 6
Local variables:
c = 36
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 6
b = 6
Local variables:
c = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 36
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 36
b = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 36
b = 36
Local variables:
c = 1296
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 36
b = 36
Local variables:
c = 1296
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1296
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
c = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
c = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
c = 1679616
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
c = 1679616
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1679616
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
c = 2821109907456
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
c = 109887709
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 109887709
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
c = 12075308589268681
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
c = 504741525
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 504741525
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
c = 254764007059325625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
c = 275977590
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 275977590
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
c = 76163630182208100
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
c = 649062697
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 649062697
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
c = 421282384636913809
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
c = 687937142
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 687937142
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
c = 473257511343128164
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
c = 30325608
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 30325608
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
c = 235811927808
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
c = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
c = 919642500569664
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
c = 494132170
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 494132170
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
c = 244166601428908900
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
c = 719742707
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 719742707
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
c = 584377934441743241
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
c = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
c = 518029564279687849
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
c = 653480929
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 653480929
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
c = 427037324566703041
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
c = 577441794
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 577441794
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
c = 333439025457938436
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
c = 123865275
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 123865275
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
c = 43488817002191025
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
c = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
c = 15342606350825625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
c = 243427383
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 243427383
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
c = 169856157801297879
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
c = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
c = 59256890794228689
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
c = 379430459
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 379430459
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
c = 143967473216950681
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
c = 209178377
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 209178377
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
c = 128080921573990699
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
c = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
c = 43755593404354129
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
c = 98064978
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 98064978
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
c = 9616739910140484
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
c = 842823311
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 842823311
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
c = 570948956922101549
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
c = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
c = 710351133565002721
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
c = 592544825
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 592544825
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
c = 548375873057020125
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
c = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
c = 351109369634280625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
c = 176515056
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 176515056
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
c = 31157564994683136
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
c = 776580188
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 776580188
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
c = 603076788394115344
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
c = 172577856
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 172577856
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
c = 37689112642253952
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
c = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
c = 29783116381556736
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
c = 173074924
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 173074924
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
c = 65496772565907232
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
c = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
c = 29954929317605776
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
c = 107921273
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 107921273
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
c = 11593963795931044
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
c = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
c = 11647001165940529
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
c = 84411522
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 84411522
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
c = 7125305046356484
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
c = 996479356
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 996479356
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
c = 712256840659432868
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
c = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
c = 992971106934174736
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
c = 983377043
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 983377043
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
c = 662437216978976989
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
c = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
c = 967030408699423849
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
c = 930211042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 930211042
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
c = 318054508393048210
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
c = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
c = 865292582658725764
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
c = 601677732
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 601677732
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 601677732
exp = 0
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=65 bci=49
65            return ans;

main[1] Method arguments:
base = 601677732
exp = 0
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=11
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 720
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 720
b = 166666668
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 720
b = 166666668
Local variables:
c = 120000000960
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 720
b = 166666668
Local variables:
c = 120
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=14
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 720
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=44 bci=17
44            ret = div(ret, factorial[r+1]);

main[1] Method arguments:
r = 2
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 720
main[1] > 
Step completed: "thread=main", Main.f(), line=45 bci=18
45            ret = div(ret, factorial[c+1]);

main[1] Method arguments:
r = 2
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 120
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=0
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 120
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=53 bci=0
53            if( exp == 0 ) return 1;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=55 bci=8
55            int ans = 1;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=56 bci=10
56            base %= MOD;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 6
Local variables:
c = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 6
Local variables:
c = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 6
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 6
b = 6
Local variables:
c = 36
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 6
b = 6
Local variables:
c = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 36
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 36
b = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 36
b = 36
Local variables:
c = 1296
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 36
b = 36
Local variables:
c = 1296
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1296
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
c = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
c = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
c = 1679616
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
c = 1679616
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1679616
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
c = 2821109907456
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
c = 109887709
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 109887709
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
c = 12075308589268681
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
c = 504741525
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 504741525
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
c = 254764007059325625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
c = 275977590
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 275977590
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
c = 76163630182208100
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
c = 649062697
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 649062697
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
c = 421282384636913809
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
c = 687937142
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 687937142
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
c = 473257511343128164
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
c = 30325608
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 30325608
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
c = 235811927808
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
c = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
c = 919642500569664
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
c = 494132170
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 494132170
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
c = 244166601428908900
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
c = 719742707
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 719742707
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
c = 584377934441743241
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
c = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
c = 518029564279687849
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
c = 653480929
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 653480929
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
c = 427037324566703041
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
c = 577441794
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 577441794
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
c = 333439025457938436
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
c = 123865275
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 123865275
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
c = 43488817002191025
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
c = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
c = 15342606350825625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
c = 243427383
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 243427383
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
c = 169856157801297879
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
c = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
c = 59256890794228689
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
c = 379430459
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 379430459
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
c = 143967473216950681
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
c = 209178377
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 209178377
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
c = 128080921573990699
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
c = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
c = 43755593404354129
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
c = 98064978
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 98064978
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
c = 9616739910140484
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
c = 842823311
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 842823311
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
c = 570948956922101549
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
c = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
c = 710351133565002721
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
c = 592544825
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 592544825
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
c = 548375873057020125
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
c = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
c = 351109369634280625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
c = 176515056
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 176515056
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
c = 31157564994683136
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
c = 776580188
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 776580188
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
c = 603076788394115344
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
c = 172577856
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 172577856
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
c = 37689112642253952
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
c = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
c = 29783116381556736
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
c = 173074924
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 173074924
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
c = 65496772565907232
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
c = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
c = 29954929317605776
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
c = 107921273
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 107921273
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
c = 11593963795931044
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
c = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
c = 11647001165940529
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
c = 84411522
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 84411522
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
c = 7125305046356484
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
c = 996479356
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 996479356
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
c = 712256840659432868
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
c = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
c = 992971106934174736
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
c = 983377043
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 983377043
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
c = 662437216978976989
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
c = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
c = 967030408699423849
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
c = 930211042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 930211042
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
c = 318054508393048210
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
c = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
c = 865292582658725764
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
c = 601677732
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 601677732
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 601677732
exp = 0
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=65 bci=49
65            return ans;

main[1] Method arguments:
base = 601677732
exp = 0
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=11
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 120
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 120
b = 166666668
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 120
b = 166666668
Local variables:
c = 20000000160
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 120
b = 166666668
Local variables:
c = 20
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=14
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 120
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=45 bci=27
45            ret = div(ret, factorial[c+1]);

main[1] Method arguments:
r = 2
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 120
main[1] > 
Step completed: "thread=main", Main.f(), line=46 bci=28
46            ret = sub(ret, 1);

main[1] Method arguments:
r = 2
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 20
main[1] > 
Step completed: "thread=main", Main.sub(), line=69 bci=0
69            int c = a - b;

main[1] Method arguments:
a = 20
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.sub(), line=70 bci=4
70            if( c < 0 ) c += MOD;

main[1] Method arguments:
a = 20
b = 1
Local variables:
c = 19
main[1] > 
Step completed: "thread=main", Main.sub(), line=71 bci=14
71            return c;

main[1] Method arguments:
a = 20
b = 1
Local variables:
c = 19
main[1] > 
Step completed: "thread=main", Main.f(), line=46 bci=33
46            ret = sub(ret, 1);

main[1] Method arguments:
r = 2
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 20
main[1] > 
Step completed: "thread=main", Main.f(), line=47 bci=34
47            return ret;

main[1] Method arguments:
r = 2
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 19
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=65
30            int a = f(R2, C2, factorial);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
main[1] > 
Step completed: "thread=main", Main.solve(), line=31 bci=66
31            int b = f(R2, C1-1, factorial);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
a = 19
main[1] > 
Step completed: "thread=main", Main.f(), line=43 bci=0
43            int ret = factorial[r+c+2];

main[1] Method arguments:
r = 2
c = 0
factorial = instance of int[15] (id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=44 bci=8
44            ret = div(ret, factorial[r+1]);

main[1] Method arguments:
r = 2
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 24
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=0
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 24
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=53 bci=0
53            if( exp == 0 ) return 1;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=55 bci=8
55            int ans = 1;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=56 bci=10
56            base %= MOD;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 6
Local variables:
c = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 6
Local variables:
c = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 6
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 6
b = 6
Local variables:
c = 36
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 6
b = 6
Local variables:
c = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 36
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 36
b = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 36
b = 36
Local variables:
c = 1296
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 36
b = 36
Local variables:
c = 1296
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1296
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
c = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
c = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
c = 1679616
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
c = 1679616
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1679616
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
c = 2821109907456
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
c = 109887709
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 109887709
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
c = 12075308589268681
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
c = 504741525
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 504741525
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
c = 254764007059325625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
c = 275977590
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 275977590
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
c = 76163630182208100
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
c = 649062697
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 649062697
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
c = 421282384636913809
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
c = 687937142
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 687937142
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
c = 473257511343128164
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
c = 30325608
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 30325608
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
c = 235811927808
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
c = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
c = 919642500569664
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
c = 494132170
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 494132170
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
c = 244166601428908900
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
c = 719742707
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 719742707
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
c = 584377934441743241
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
c = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
c = 518029564279687849
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
c = 653480929
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 653480929
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
c = 427037324566703041
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
c = 577441794
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 577441794
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
c = 333439025457938436
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
c = 123865275
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 123865275
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
c = 43488817002191025
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
c = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
c = 15342606350825625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
c = 243427383
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 243427383
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
c = 169856157801297879
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
c = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
c = 59256890794228689
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
c = 379430459
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 379430459
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
c = 143967473216950681
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
c = 209178377
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 209178377
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
c = 128080921573990699
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
c = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
c = 43755593404354129
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
c = 98064978
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 98064978
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
c = 9616739910140484
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
c = 842823311
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 842823311
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
c = 570948956922101549
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
c = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
c = 710351133565002721
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
c = 592544825
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 592544825
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
c = 548375873057020125
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
c = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
c = 351109369634280625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
c = 176515056
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 176515056
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
c = 31157564994683136
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
c = 776580188
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 776580188
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
c = 603076788394115344
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
c = 172577856
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 172577856
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
c = 37689112642253952
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
c = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
c = 29783116381556736
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
c = 173074924
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 173074924
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
c = 65496772565907232
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
c = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
c = 29954929317605776
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
c = 107921273
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 107921273
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
c = 11593963795931044
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
c = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
c = 11647001165940529
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
c = 84411522
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 84411522
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
c = 7125305046356484
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
c = 996479356
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 996479356
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
c = 712256840659432868
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
c = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
c = 992971106934174736
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
c = 983377043
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 983377043
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
c = 662437216978976989
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
c = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
c = 967030408699423849
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
c = 930211042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 930211042
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
c = 318054508393048210
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
c = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
c = 865292582658725764
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
c = 601677732
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 601677732
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 601677732
exp = 0
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=65 bci=49
65            return ans;

main[1] Method arguments:
base = 601677732
exp = 0
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=11
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 24
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 24
b = 166666668
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 24
b = 166666668
Local variables:
c = 4000000032
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 24
b = 166666668
Local variables:
c = 4
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=14
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 24
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=44 bci=17
44            ret = div(ret, factorial[r+1]);

main[1] Method arguments:
r = 2
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 24
main[1] > 
Step completed: "thread=main", Main.f(), line=45 bci=18
45            ret = div(ret, factorial[c+1]);

main[1] Method arguments:
r = 2
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=0
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 4
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=53 bci=0
53            if( exp == 0 ) return 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=55 bci=8
55            int ans = 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=56 bci=10
56            base %= MOD;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 0
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=65 bci=49
65            return ans;

main[1] Method arguments:
base = 1
exp = 0
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=11
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 4
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 4
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 4
b = 1
Local variables:
c = 4
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 4
b = 1
Local variables:
c = 4
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=14
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 4
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=45 bci=27
45            ret = div(ret, factorial[c+1]);

main[1] Method arguments:
r = 2
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.f(), line=46 bci=28
46            ret = sub(ret, 1);

main[1] Method arguments:
r = 2
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.sub(), line=69 bci=0
69            int c = a - b;

main[1] Method arguments:
a = 4
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.sub(), line=70 bci=4
70            if( c < 0 ) c += MOD;

main[1] Method arguments:
a = 4
b = 1
Local variables:
c = 3
main[1] > 
Step completed: "thread=main", Main.sub(), line=71 bci=14
71            return c;

main[1] Method arguments:
a = 4
b = 1
Local variables:
c = 3
main[1] > 
Step completed: "thread=main", Main.f(), line=46 bci=33
46            ret = sub(ret, 1);

main[1] Method arguments:
r = 2
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.f(), line=47 bci=34
47            return ret;

main[1] Method arguments:
r = 2
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=31 bci=78
31            int b = f(R2, C1-1, factorial);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
a = 19
main[1] > 
Step completed: "thread=main", Main.solve(), line=32 bci=79
32            int c = f(R1-1, C2, factorial);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
a = 19
b = 3
main[1] > 
Step completed: "thread=main", Main.f(), line=43 bci=0
43            int ret = factorial[r+c+2];

main[1] Method arguments:
r = 0
c = 2
factorial = instance of int[15] (id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=44 bci=8
44            ret = div(ret, factorial[r+1]);

main[1] Method arguments:
r = 0
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 24
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=0
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 24
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=53 bci=0
53            if( exp == 0 ) return 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=55 bci=8
55            int ans = 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=56 bci=10
56            base %= MOD;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 0
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=65 bci=49
65            return ans;

main[1] Method arguments:
base = 1
exp = 0
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=11
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 24
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 24
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 24
b = 1
Local variables:
c = 24
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 24
b = 1
Local variables:
c = 24
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=14
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 24
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=44 bci=17
44            ret = div(ret, factorial[r+1]);

main[1] Method arguments:
r = 0
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 24
main[1] > 
Step completed: "thread=main", Main.f(), line=45 bci=18
45            ret = div(ret, factorial[c+1]);

main[1] Method arguments:
r = 0
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 24
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=0
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 24
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=53 bci=0
53            if( exp == 0 ) return 1;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=55 bci=8
55            int ans = 1;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=56 bci=10
56            base %= MOD;

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 6
Local variables:
c = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 6
Local variables:
c = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 6
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 6
b = 6
Local variables:
c = 36
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 6
b = 6
Local variables:
c = 36
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 6
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 36
exp = 1000000005
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 36
b = 36
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 36
b = 36
Local variables:
c = 1296
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 36
b = 36
Local variables:
c = 1296
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 36
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1296
exp = 500000002
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
c = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 6
b = 1296
Local variables:
c = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
c = 1679616
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1296
b = 1296
Local variables:
c = 1679616
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1296
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1679616
exp = 250000001
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
c = 2821109907456
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1679616
b = 1679616
Local variables:
c = 109887709
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1679616
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 109887709
exp = 125000000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
c = 12075308589268681
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 109887709
b = 109887709
Local variables:
c = 504741525
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 109887709
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 504741525
exp = 62500000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
c = 254764007059325625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 504741525
b = 504741525
Local variables:
c = 275977590
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 504741525
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 275977590
exp = 31250000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
c = 76163630182208100
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 275977590
b = 275977590
Local variables:
c = 649062697
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 275977590
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 649062697
exp = 15625000
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
c = 421282384636913809
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 649062697
b = 649062697
Local variables:
c = 687937142
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 649062697
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 687937142
exp = 7812500
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
c = 473257511343128164
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 687937142
b = 687937142
Local variables:
c = 30325608
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 687937142
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 30325608
exp = 3906250
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
c = 235811927808
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 7776
b = 30325608
Local variables:
c = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 7776
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
c = 919642500569664
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 30325608
b = 30325608
Local variables:
c = 494132170
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 30325608
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 494132170
exp = 1953125
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
c = 244166601428908900
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 494132170
b = 494132170
Local variables:
c = 719742707
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 494132170
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 719742707
exp = 976562
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
c = 584377934441743241
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 811926163
b = 719742707
Local variables:
c = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 811926163
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
c = 518029564279687849
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 719742707
b = 719742707
Local variables:
c = 653480929
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 719742707
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 653480929
exp = 488281
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
c = 427037324566703041
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 653480929
b = 653480929
Local variables:
c = 577441794
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 653480929
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 577441794
exp = 244140
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
c = 333439025457938436
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 577441794
b = 577441794
Local variables:
c = 123865275
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 577441794
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 123865275
exp = 122070
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
c = 43488817002191025
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 351097731
b = 123865275
Local variables:
c = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 351097731
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
c = 15342606350825625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 123865275
b = 123865275
Local variables:
c = 243427383
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 123865275
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 243427383
exp = 61035
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
c = 169856157801297879
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 697769313
b = 243427383
Local variables:
c = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 697769313
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
c = 59256890794228689
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 243427383
b = 243427383
Local variables:
c = 379430459
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 243427383
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 379430459
exp = 30517
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
c = 143967473216950681
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 379430459
b = 379430459
Local variables:
c = 209178377
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 379430459
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 209178377
exp = 15258
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
c = 128080921573990699
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 612304787
b = 209178377
Local variables:
c = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 612304787
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
c = 43755593404354129
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 209178377
b = 209178377
Local variables:
c = 98064978
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 209178377
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 98064978
exp = 7629
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
c = 9616739910140484
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 98064978
b = 98064978
Local variables:
c = 842823311
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 98064978
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 842823311
exp = 3814
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
c = 570948956922101549
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 677424259
b = 842823311
Local variables:
c = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 677424259
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
c = 710351133565002721
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 842823311
b = 842823311
Local variables:
c = 592544825
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 842823311
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 592544825
exp = 1907
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
c = 548375873057020125
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 925458885
b = 592544825
Local variables:
c = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 925458885
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
c = 351109369634280625
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 592544825
b = 592544825
Local variables:
c = 176515056
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 592544825
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 176515056
exp = 953
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
c = 31157564994683136
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 176515056
b = 176515056
Local variables:
c = 776580188
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 176515056
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 776580188
exp = 476
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
c = 603076788394115344
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 776580188
b = 776580188
Local variables:
c = 172577856
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 776580188
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 172577856
exp = 238
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
c = 37689112642253952
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 218389042
b = 172577856
Local variables:
c = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 218389042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
c = 29783116381556736
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 172577856
b = 172577856
Local variables:
c = 173074924
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 172577856
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 173074924
exp = 119
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
c = 65496772565907232
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 378430168
b = 173074924
Local variables:
c = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 378430168
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
c = 29954929317605776
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 173074924
b = 173074924
Local variables:
c = 107921273
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 173074924
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 107921273
exp = 59
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
c = 11593963795931044
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 107429828
b = 107921273
Local variables:
c = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 107429828
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
c = 11647001165940529
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 107921273
b = 107921273
Local variables:
c = 84411522
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 107921273
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 84411522
exp = 29
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
c = 7125305046356484
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 84411522
b = 84411522
Local variables:
c = 996479356
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 84411522
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 996479356
exp = 14
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
c = 712256840659432868
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 714773303
b = 996479356
Local variables:
c = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 714773303
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
c = 992971106934174736
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 996479356
b = 996479356
Local variables:
c = 983377043
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 996479356
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 983377043
exp = 7
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
c = 662437216978976989
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 673635023
b = 983377043
Local variables:
c = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 673635023
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
c = 967030408699423849
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 983377043
b = 983377043
Local variables:
c = 930211042
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 983377043
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 930211042
exp = 3
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
c = 318054508393048210
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 341916505
b = 930211042
Local variables:
c = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 341916505
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
c = 865292582658725764
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 930211042
b = 930211042
Local variables:
c = 601677732
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 930211042
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 601677732
exp = 1
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 601677732
exp = 0
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.pow(), line=65 bci=49
65            return ans;

main[1] Method arguments:
base = 601677732
exp = 0
Local variables:
ans = 166666668
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=11
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 24
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 24
b = 166666668
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 24
b = 166666668
Local variables:
c = 4000000032
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 24
b = 166666668
Local variables:
c = 4
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=14
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 24
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=45 bci=27
45            ret = div(ret, factorial[c+1]);

main[1] Method arguments:
r = 0
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 24
main[1] > 
Step completed: "thread=main", Main.f(), line=46 bci=28
46            ret = sub(ret, 1);

main[1] Method arguments:
r = 0
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.sub(), line=69 bci=0
69            int c = a - b;

main[1] Method arguments:
a = 4
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.sub(), line=70 bci=4
70            if( c < 0 ) c += MOD;

main[1] Method arguments:
a = 4
b = 1
Local variables:
c = 3
main[1] > 
Step completed: "thread=main", Main.sub(), line=71 bci=14
71            return c;

main[1] Method arguments:
a = 4
b = 1
Local variables:
c = 3
main[1] > 
Step completed: "thread=main", Main.f(), line=46 bci=33
46            ret = sub(ret, 1);

main[1] Method arguments:
r = 0
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 4
main[1] > 
Step completed: "thread=main", Main.f(), line=47 bci=34
47            return ret;

main[1] Method arguments:
r = 0
c = 2
factorial = instance of int[15] (id=451)
Local variables:
ret = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=32 bci=91
32            int c = f(R1-1, C2, factorial);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
a = 19
b = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=92
33            int d = f(R1-1, C1-1, factorial);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
a = 19
b = 3
c = 3
main[1] > 
Step completed: "thread=main", Main.f(), line=43 bci=0
43            int ret = factorial[r+c+2];

main[1] Method arguments:
r = 0
c = 0
factorial = instance of int[15] (id=451)
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=44 bci=8
44            ret = div(ret, factorial[r+1]);

main[1] Method arguments:
r = 0
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=0
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=53 bci=0
53            if( exp == 0 ) return 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=55 bci=8
55            int ans = 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=56 bci=10
56            base %= MOD;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 0
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=65 bci=49
65            return ans;

main[1] Method arguments:
base = 1
exp = 0
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=11
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 2
b = 1
Local variables:
c = 2
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 2
b = 1
Local variables:
c = 2
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=14
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=44 bci=17
44            ret = div(ret, factorial[r+1]);

main[1] Method arguments:
r = 0
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.f(), line=45 bci=18
45            ret = div(ret, factorial[c+1]);

main[1] Method arguments:
r = 0
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=0
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=53 bci=0
53            if( exp == 0 ) return 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=55 bci=8
55            int ans = 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=56 bci=10
56            base %= MOD;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1000000005
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 500000002
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 250000001
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 125000000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 62500000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 31250000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 15625000
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7812500
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3906250
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1953125
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 976562
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 488281
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 244140
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 122070
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 61035
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 30517
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 15258
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7629
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3814
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1907
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 953
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 476
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 238
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 119
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 59
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 29
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 14
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 7
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 3
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=58 bci=22
58                if( (exp & 1) == 1 ) {

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=30
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=59 bci=35
59                    ans = mul(ans, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=36
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 1
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=62 bci=41
62                base = mul(base, base);

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=63 bci=42
63                exp = exp >> 1;

main[1] Method arguments:
base = 1
exp = 1
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=57 bci=16
57            while( exp > 0 ) {

main[1] Method arguments:
base = 1
exp = 0
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=65 bci=49
65            return ans;

main[1] Method arguments:
base = 1
exp = 0
Local variables:
ans = 1
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=11
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=85 bci=0
85            long c = (long)a * b;

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=86 bci=6
86            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 2
b = 1
Local variables:
c = 2
main[1] > 
Step completed: "thread=main", Main.mul(), line=87 bci=22
87            return (int)c;

main[1] Method arguments:
a = 2
b = 1
Local variables:
c = 2
main[1] > 
Step completed: "thread=main", Main.div(), line=75 bci=14
75            return mul(a, pow(b, MOD-2));

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=45 bci=27
45            ret = div(ret, factorial[c+1]);

main[1] Method arguments:
r = 0
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.f(), line=46 bci=28
46            ret = sub(ret, 1);

main[1] Method arguments:
r = 0
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.sub(), line=69 bci=0
69            int c = a - b;

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.sub(), line=70 bci=4
70            if( c < 0 ) c += MOD;

main[1] Method arguments:
a = 2
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.sub(), line=71 bci=14
71            return c;

main[1] Method arguments:
a = 2
b = 1
Local variables:
c = 1
main[1] > 
Step completed: "thread=main", Main.f(), line=46 bci=33
46            ret = sub(ret, 1);

main[1] Method arguments:
r = 0
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 2
main[1] > 
Step completed: "thread=main", Main.f(), line=47 bci=34
47            return ret;

main[1] Method arguments:
r = 0
c = 0
factorial = instance of int[15] (id=451)
Local variables:
ret = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=106
33            int d = f(R1-1, C1-1, factorial);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
a = 19
b = 3
c = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=108
35            return add(sub(sub(a, b), c), d);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
a = 19
b = 3
c = 3
d = 1
main[1] > 
Step completed: "thread=main", Main.sub(), line=69 bci=0
69            int c = a - b;

main[1] Method arguments:
a = 19
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.sub(), line=70 bci=4
70            if( c < 0 ) c += MOD;

main[1] Method arguments:
a = 19
b = 3
Local variables:
c = 16
main[1] > 
Step completed: "thread=main", Main.sub(), line=71 bci=14
71            return c;

main[1] Method arguments:
a = 19
b = 3
Local variables:
c = 16
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=113
35            return add(sub(sub(a, b), c), d);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
a = 19
b = 3
c = 3
d = 1
main[1] > 
Step completed: "thread=main", Main.sub(), line=69 bci=0
69            int c = a - b;

main[1] Method arguments:
a = 16
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.sub(), line=70 bci=4
70            if( c < 0 ) c += MOD;

main[1] Method arguments:
a = 16
b = 3
Local variables:
c = 13
main[1] > 
Step completed: "thread=main", Main.sub(), line=71 bci=14
71            return c;

main[1] Method arguments:
a = 16
b = 3
Local variables:
c = 13
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=117
35            return add(sub(sub(a, b), c), d);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
a = 19
b = 3
c = 3
d = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=79 bci=0
79            int c = a + b;

main[1] Method arguments:
a = 13
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=80 bci=4
80            if( c >= MOD ) c %= MOD;

main[1] Method arguments:
a = 13
b = 1
Local variables:
c = 14
main[1] > 
Step completed: "thread=main", Main.add(), line=81 bci=17
81            return c;

main[1] Method arguments:
a = 13
b = 1
Local variables:
c = 14
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=122
35            return add(sub(sub(a, b), c), d);

main[1] Method arguments:
Local variables:
factorial = instance of int[15] (id=451)
a = 19
b = 3
c = 3
d = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=17 bci=45
17            System.out.println(solve());

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > 
Step completed: "thread=main", Main.main(), line=18 bci=48
18        }

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
sc = instance of Main$FastScanner(id=450)
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
