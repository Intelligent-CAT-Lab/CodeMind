1 import java.io.BufferedReader;
2 import java.io.IOException;
3 import java.io.InputStreamReader;
4 import java.util.StringTokenizer;
5 
6 public class Main {
7 	public static void main(String[] args) throws IOException {
8 		Main mainObj = new Main();
9 		mainObj.solve();
10 	}
11 
12 	public void solve() throws IOException {
13 		FastScanner fs = new FastScanner();
14 		int a = fs.nextInt();
15 		int b = fs.nextInt();
16 		int c = fs.nextInt();
17 		
18 		if(a == b && b == c) {
19 			System.out.println("Yes");
20 		}else {
21 			System.out.println("No");
22 		}
23 	}
24 
25 	
26 
27 	public class FastScanner {
28 
29 		BufferedReader reader;
30 		private StringTokenizer st;
31 
32 		public FastScanner() {
33 			st = null;
34 			reader = new BufferedReader(new InputStreamReader(System.in));
35 		}
36 
37 		public String next() throws IOException {
38 			if (st == null || !st.hasMoreElements()) {
39 				st = new StringTokenizer(reader.readLine());
40 			}
41 			return st.nextToken();
42 		}
43 
44 		public String nextLine() throws IOException {
45 			st = null;
46 			String readLine = null;
47 			readLine = reader.readLine();
48 			return readLine;
49 		}
50 
51 		public int nextInt() throws NumberFormatException, IOException {
52 			return Integer.parseInt(next());
53 		}
54 
55 		public long nextLong() throws NumberFormatException, IOException {
56 			return Long.parseLong(next());
57 		}
58 
59 		public int[] nextIntArr(int n) throws NumberFormatException, IOException {
60 			int[] retArr = new int[n];
61 			for (int i = 0; i < n; i++) {
62 				retArr[i] = nextInt();
63 			}
64 			return retArr;
65 		}
66 
67 		public long[] nextLongArr(int n) throws NumberFormatException, IOException {
68 			long[] retArr = new long[n];
69 			for (int i = 0; i < n; i++) {
70 				retArr[i] = nextLong();
71 			}
72 			return retArr;
73 		}
74 
75 		public void close() throws IOException {
76 			reader.close();
77 		}
78 	}
79 
80 
81 }
