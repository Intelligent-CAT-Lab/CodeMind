some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=132 bci=0
132    		new Main().run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=15 bci=0
15    public class Main {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=21 bci=4
21    	String INPUT = "";

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=135 bci=10
135    	private byte[] inbuf = new byte[1024];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=136 bci=19
136    	public int lenbuf = 0, ptrbuf = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=132 bci=7
132    		new Main().run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.run(), line=121 bci=0
121    		is = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=122 bci=34
122    		out = new PrintWriter(System.out);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=124 bci=48
124    		long s = System.currentTimeMillis();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=125 bci=52
125    		solve();

main[1] Method arguments:
Local variables:
s = 1693843677457
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=0
28    		int T = 1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=2
29    		for (int i = 0; i < T; i++)

main[1] Method arguments:
Local variables:
T = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=9
30    			solve(i);

main[1] Method arguments:
Local variables:
T = 1
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=34 bci=0
34    		int n = ni();

main[1] Method arguments:
T = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.ni(), line=225 bci=0
225    		int num = 0, b;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=226 bci=2
226    		boolean minus = false;

main[1] Method arguments:
Local variables:
num = 0
main[1] > 
Step completed: "thread=main", Main.ni(), line=227 bci=4
227    		while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.readByte(), line=140 bci=0
140    		if (lenbuf == -1)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=142 bci=16
142    		if (ptrbuf >= lenbuf) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=143 bci=27
143    			ptrbuf = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=145 bci=32
145    				lenbuf = is.read(inbuf);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=148 bci=47
148    			}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=149 bci=59
149    			if (lenbuf <= 0)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=152 bci=68
152    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=227 bci=8
227    		while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.ni(), line=229 bci=35
229    		if (b == '-') {

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main.ni(), line=235 bci=48
235    			if (b >= '0' && b <= '9') {

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main.ni(), line=236 bci=60
236    				num = num * 10 + (b - '0');

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main.ni(), line=240 bci=84
240    			b = readByte();

main[1] Method arguments:
Local variables:
num = 3
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main.readByte(), line=140 bci=0
140    		if (lenbuf == -1)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=142 bci=16
142    		if (ptrbuf >= lenbuf) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=152 bci=68
152    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=240 bci=88
240    			b = readByte();

main[1] Method arguments:
Local variables:
num = 3
minus = false
b = 51
main[1] > 
Step completed: "thread=main", Main.ni(), line=235 bci=48
235    			if (b >= '0' && b <= '9') {

main[1] Method arguments:
Local variables:
num = 3
minus = false
b = 32
main[1] > 
Step completed: "thread=main", Main.ni(), line=238 bci=73
238    				return minus ? -num : num;

main[1] Method arguments:
Local variables:
num = 3
minus = false
b = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=34 bci=4
34    		int n = ni();

main[1] Method arguments:
T = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=5
35    		int x = ni();

main[1] Method arguments:
T = 0
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main.ni(), line=225 bci=0
225    		int num = 0, b;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=226 bci=2
226    		boolean minus = false;

main[1] Method arguments:
Local variables:
num = 0
main[1] > 
Step completed: "thread=main", Main.ni(), line=227 bci=4
227    		while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.readByte(), line=140 bci=0
140    		if (lenbuf == -1)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=142 bci=16
142    		if (ptrbuf >= lenbuf) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=152 bci=68
152    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=227 bci=8
227    		while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.ni(), line=229 bci=35
229    		if (b == '-') {

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main.ni(), line=235 bci=48
235    			if (b >= '0' && b <= '9') {

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main.ni(), line=236 bci=60
236    				num = num * 10 + (b - '0');

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main.ni(), line=240 bci=84
240    			b = readByte();

main[1] Method arguments:
Local variables:
num = 4
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main.readByte(), line=140 bci=0
140    		if (lenbuf == -1)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=142 bci=16
142    		if (ptrbuf >= lenbuf) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=152 bci=68
152    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=240 bci=88
240    			b = readByte();

main[1] Method arguments:
Local variables:
num = 4
minus = false
b = 52
main[1] > 
Step completed: "thread=main", Main.ni(), line=235 bci=48
235    			if (b >= '0' && b <= '9') {

main[1] Method arguments:
Local variables:
num = 4
minus = false
b = 32
main[1] > 
Step completed: "thread=main", Main.ni(), line=238 bci=73
238    				return minus ? -num : num;

main[1] Method arguments:
Local variables:
num = 4
minus = false
b = 32
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=9
35    		int x = ni();

main[1] Method arguments:
T = 0
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=10
36    		int d = ni();

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
main[1] > 
Step completed: "thread=main", Main.ni(), line=225 bci=0
225    		int num = 0, b;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=226 bci=2
226    		boolean minus = false;

main[1] Method arguments:
Local variables:
num = 0
main[1] > 
Step completed: "thread=main", Main.ni(), line=227 bci=4
227    		while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.readByte(), line=140 bci=0
140    		if (lenbuf == -1)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=142 bci=16
142    		if (ptrbuf >= lenbuf) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=152 bci=68
152    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=227 bci=8
227    		while ((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'))

main[1] Method arguments:
Local variables:
num = 0
minus = false
main[1] > 
Step completed: "thread=main", Main.ni(), line=229 bci=35
229    		if (b == '-') {

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main.ni(), line=235 bci=48
235    			if (b >= '0' && b <= '9') {

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main.ni(), line=236 bci=60
236    				num = num * 10 + (b - '0');

main[1] Method arguments:
Local variables:
num = 0
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main.ni(), line=240 bci=84
240    			b = readByte();

main[1] Method arguments:
Local variables:
num = 2
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main.readByte(), line=140 bci=0
140    		if (lenbuf == -1)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=142 bci=16
142    		if (ptrbuf >= lenbuf) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=152 bci=68
152    		return inbuf[ptrbuf++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.ni(), line=240 bci=88
240    			b = readByte();

main[1] Method arguments:
Local variables:
num = 2
minus = false
b = 50
main[1] > 
Step completed: "thread=main", Main.ni(), line=235 bci=48
235    			if (b >= '0' && b <= '9') {

main[1] Method arguments:
Local variables:
num = 2
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main.ni(), line=238 bci=73
238    				return minus ? -num : num;

main[1] Method arguments:
Local variables:
num = 2
minus = false
b = 10
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=14
36    		int d = ni();

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=16
37    		if (d == 0)

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=45
46    		if (x == 0) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=66
51    		Map<Long, List<long[]>> m = new HashMap<Long, List<long[]>>();

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=75
53    		for (long take = 0; take <= n; ++take) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=86
54    			long b = take * x;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=93
55    			long sum = take * (take - 1) / 2L;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 0
b = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=56 bci=106
56    			long rsum = (n - take) * take + sum;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 0
b = 0
sum = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=119
57    			long c = b / d;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 0
b = 0
sum = 0
rsum = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=127
58    			add(m, b % d, new long[] { c + sum, c + rsum });

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 0
b = 0
sum = 0
rsum = 0
c = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=93 bci=0
93    		if (!m.containsKey(k))

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=446)
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=94 bci=13
94    			m.put(k, new ArrayList<long[]>());

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=446)
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=95 bci=31
95    		m.get(k).add(v);

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=446)
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=96 bci=52
96    	}

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=446)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=158
53    		for (long take = 0; take <= n; ++take) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=86
54    			long b = take * x;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=93
55    			long sum = take * (take - 1) / 2L;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 1
b = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=56 bci=106
56    			long rsum = (n - take) * take + sum;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 1
b = 4
sum = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=119
57    			long c = b / d;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 1
b = 4
sum = 0
rsum = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=127
58    			add(m, b % d, new long[] { c + sum, c + rsum });

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 1
b = 4
sum = 0
rsum = 2
c = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=93 bci=0
93    		if (!m.containsKey(k))

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=448)
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=95 bci=31
95    		m.get(k).add(v);

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=448)
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=96 bci=52
96    	}

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=448)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=158
53    		for (long take = 0; take <= n; ++take) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=86
54    			long b = take * x;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=93
55    			long sum = take * (take - 1) / 2L;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 2
b = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=56 bci=106
56    			long rsum = (n - take) * take + sum;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 2
b = 8
sum = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=119
57    			long c = b / d;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 2
b = 8
sum = 1
rsum = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=127
58    			add(m, b % d, new long[] { c + sum, c + rsum });

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 2
b = 8
sum = 1
rsum = 3
c = 4
main[1] > 
Step completed: "thread=main", Main.add(), line=93 bci=0
93    		if (!m.containsKey(k))

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=449)
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=95 bci=31
95    		m.get(k).add(v);

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=449)
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=96 bci=52
96    	}

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=449)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=158
53    		for (long take = 0; take <= n; ++take) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=86
54    			long b = take * x;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=55 bci=93
55    			long sum = take * (take - 1) / 2L;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 3
b = 12
main[1] > 
Step completed: "thread=main", Main.solve(), line=56 bci=106
56    			long rsum = (n - take) * take + sum;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 3
b = 12
sum = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=119
57    			long c = b / d;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 3
b = 12
sum = 3
rsum = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=127
58    			add(m, b % d, new long[] { c + sum, c + rsum });

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 3
b = 12
sum = 3
rsum = 3
c = 6
main[1] > 
Step completed: "thread=main", Main.add(), line=93 bci=0
93    		if (!m.containsKey(k))

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=450)
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=95 bci=31
95    		m.get(k).add(v);

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=450)
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=96 bci=52
96    	}

main[1] Method arguments:
m = instance of java.util.HashMap(id=445)
k = 0
v = instance of long[2] (id=450)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=158
53    		for (long take = 0; take <= n; ++take) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
take = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=167
60    		long ans = 0L;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=170
61    		for (Entry<Long, List<long[]>> en : m.entrySet()) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=206
62    			List<long[]> v = en.getValue();

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=218
63    			Collections.sort(v, new Comparator<long[]>() {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
main[1] > 
Step completed: "thread=main", Main$1.<init>(), line=63 bci=0
63    			Collections.sort(v, new Comparator<long[]>() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=228
63    			Collections.sort(v, new Comparator<long[]>() {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=63 bci=1
63    			Collections.sort(v, new Comparator<long[]>() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=65 bci=0
65    					if (o1[0] == o2[0])

main[1] Method arguments:
o1 = instance of long[2] (id=448)
o2 = instance of long[2] (id=446)
Local variables:
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=67 bci=21
67    					return Long.signum(o1[0] - o2[0]);

main[1] Method arguments:
o1 = instance of long[2] (id=448)
o2 = instance of long[2] (id=446)
Local variables:
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=63 bci=12
63    			Collections.sort(v, new Comparator<long[]>() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=63 bci=0
63    			Collections.sort(v, new Comparator<long[]>() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=65 bci=0
65    					if (o1[0] == o2[0])

main[1] Method arguments:
o1 = instance of long[2] (id=449)
o2 = instance of long[2] (id=448)
Local variables:
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=67 bci=21
67    					return Long.signum(o1[0] - o2[0]);

main[1] Method arguments:
o1 = instance of long[2] (id=449)
o2 = instance of long[2] (id=448)
Local variables:
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=63 bci=12
63    			Collections.sort(v, new Comparator<long[]>() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=63 bci=0
63    			Collections.sort(v, new Comparator<long[]>() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=65 bci=0
65    					if (o1[0] == o2[0])

main[1] Method arguments:
o1 = instance of long[2] (id=450)
o2 = instance of long[2] (id=449)
Local variables:
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=67 bci=21
67    					return Long.signum(o1[0] - o2[0]);

main[1] Method arguments:
o1 = instance of long[2] (id=450)
o2 = instance of long[2] (id=449)
Local variables:
main[1] > 
Step completed: "thread=main", Main$1.compare(), line=63 bci=12
63    			Collections.sort(v, new Comparator<long[]>() {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=70 bci=231
70    			long l = 0, r = 0;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
main[1] > 
Step completed: "thread=main", Main.solve(), line=71 bci=237
71    			boolean f = false;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=72 bci=240
72    			for (long p[] : v) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=73 bci=271
73    				if (!f) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = false
p = instance of long[2] (id=446)
main[1] > 
Step completed: "thread=main", Main.solve(), line=74 bci=276
74    					f = true;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = false
p = instance of long[2] (id=446)
main[1] > 
Step completed: "thread=main", Main.solve(), line=75 bci=279
75    					l = p[0];

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = true
p = instance of long[2] (id=446)
main[1] > 
Step completed: "thread=main", Main.solve(), line=76 bci=285
76    					r = p[1];

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = true
p = instance of long[2] (id=446)
main[1] > 
Step completed: "thread=main", Main.solve(), line=86 bci=342
86    			}

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=72 bci=249
72    			for (long p[] : v) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=73 bci=271
73    				if (!f) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = true
p = instance of long[2] (id=448)
main[1] > 
Step completed: "thread=main", Main.solve(), line=78 bci=294
78    					if (p[0] <= r) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = true
p = instance of long[2] (id=448)
main[1] > 
Step completed: "thread=main", Main.solve(), line=81 bci=318
81    						ans += r - l + 1;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 0
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = true
p = instance of long[2] (id=448)
main[1] > 
Step completed: "thread=main", Main.solve(), line=82 bci=330
82    						l = p[0];

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 1
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 0
r = 0
f = true
p = instance of long[2] (id=448)
main[1] > 
Step completed: "thread=main", Main.solve(), line=83 bci=336
83    						r = p[1];

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 1
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 2
r = 0
f = true
p = instance of long[2] (id=448)
main[1] > 
Step completed: "thread=main", Main.solve(), line=86 bci=342
86    			}

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 1
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 2
r = 4
f = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=72 bci=249
72    			for (long p[] : v) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 1
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 2
r = 4
f = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=73 bci=271
73    				if (!f) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 1
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 2
r = 4
f = true
p = instance of long[2] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=78 bci=294
78    					if (p[0] <= r) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 1
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 2
r = 4
f = true
p = instance of long[2] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=81 bci=318
81    						ans += r - l + 1;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 1
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 2
r = 4
f = true
p = instance of long[2] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=82 bci=330
82    						l = p[0];

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 4
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 2
r = 4
f = true
p = instance of long[2] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=83 bci=336
83    						r = p[1];

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 4
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 5
r = 4
f = true
p = instance of long[2] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=86 bci=342
86    			}

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 4
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 5
r = 7
f = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=72 bci=249
72    			for (long p[] : v) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 4
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 5
r = 7
f = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=73 bci=271
73    				if (!f) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 4
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 5
r = 7
f = true
p = instance of long[2] (id=450)
main[1] > 
Step completed: "thread=main", Main.solve(), line=78 bci=294
78    					if (p[0] <= r) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 4
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 5
r = 7
f = true
p = instance of long[2] (id=450)
main[1] > 
Step completed: "thread=main", Main.solve(), line=81 bci=318
81    						ans += r - l + 1;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 4
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 5
r = 7
f = true
p = instance of long[2] (id=450)
main[1] > 
Step completed: "thread=main", Main.solve(), line=82 bci=330
82    						l = p[0];

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 7
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 5
r = 7
f = true
p = instance of long[2] (id=450)
main[1] > 
Step completed: "thread=main", Main.solve(), line=83 bci=336
83    						r = p[1];

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 7
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 9
r = 7
f = true
p = instance of long[2] (id=450)
main[1] > 
Step completed: "thread=main", Main.solve(), line=86 bci=342
86    			}

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 7
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 9
r = 9
f = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=72 bci=249
72    			for (long p[] : v) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 7
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 9
r = 9
f = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=87 bci=345
87    			ans += r - l + 1;

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 7
en = instance of java.util.HashMap$Node(id=454)
v = instance of java.util.ArrayList(id=455)
l = 9
r = 9
f = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=88 bci=357
88    		}

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=184
61    		for (Entry<Long, List<long[]>> en : m.entrySet()) {

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=89 bci=360
89    		out.println(ans);

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=90 bci=369
90    	}

main[1] Method arguments:
T = 0
Local variables:
n = 3
x = 4
d = 2
m = instance of java.util.HashMap(id=445)
ans = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=14
29    		for (int i = 0; i < T; i++)

main[1] Method arguments:
Local variables:
T = 1
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=31 bci=20
31    	}

main[1] Method arguments:
Local variables:
T = 1
main[1] > 
Step completed: "thread=main", Main.run(), line=126 bci=56
126    		out.flush();

main[1] Method arguments:
Local variables:
s = 1693843677457
main[1] > 
Step completed: "thread=main", Main.run(), line=127 bci=63
127    		if (!INPUT.isEmpty())

main[1] Method arguments:
Local variables:
s = 1693843677457
main[1] > 
Step completed: "thread=main", Main.run(), line=129 bci=106
129    	}

main[1] Method arguments:
Local variables:
s = 1693843677457
main[1] > 
Step completed: "thread=main", Main.main(), line=133 bci=10
133    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
