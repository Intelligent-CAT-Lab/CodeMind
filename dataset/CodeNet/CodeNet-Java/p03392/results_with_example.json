{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN",
        "predict": "mon\nEND-OF-OUTPUT"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.util.*;\nimport java.io.*;\nimport java.lang.*;\nimport java.math.*;\npublic class Main {\n    public static void main(String[] args) throws Exception {\n        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));\n        PrintWriter out = new PrintWriter(new OutputStreamWriter(System.out));\n        String s = bf.readLine();\n        int n = s.length();\n        Set<String> abc = new HashSet<String>();\n        abc.add(\"abc\");\n        abc.add(\"acb\");\n        abc.add(\"bac\");\n        abc.add(\"bca\");\n        abc.add(\"cab\");\n        abc.add(\"cba\");\n        int diff = 0;\n        for(int i=0; i<n-1; i++) {\n          if(s.charAt(i) != s.charAt(i+1)) diff++;\n        }\n        if(n <= 2) {\n          if(s.charAt(0) == s.charAt(1)) out.println(1);\n          else out.println(2);\n        }\n        else if(abc.contains(s)) out.println(\"3\");\n        else if(diff == 0){\n          out.println(\"1\");\n\n        }\n        else {\n        int mod = 998244353;\n        long[][][] dp = new long[n][3][3]; // 0, 1, 2 as last remainder;\n        long[][][] dp_no_dpl = new long[n][3][3]; // a, b, c as last digit; 0, 1, 2 as last remainder\n        long ans = 1;\n        for(int i=0; i<n-1; i++) {\n          if(s.charAt(i) == s.charAt(i+1)) ans = 0;\n        }\n        int sum = 0;\n        for(int i=0; i<n; i++) {\n          sum += (s.charAt(i)-'a');\n          sum %= 3;\n        }\n        dp[0][0][0] = 1;\n        dp[0][1][1] = 1;\n        dp[0][2][2] = 1;\n        dp_no_dpl[0][0][0] = 1;\n        dp_no_dpl[0][1][1] = 1;\n        dp_no_dpl[0][2][2] = 1;\n        for(int i=1; i<n; i++) {\n          for(int j=0; j<3; j++) {\n            dp_no_dpl[i][0][j] += dp_no_dpl[i-1][1][(j+3-0)%3];\n            dp_no_dpl[i][0][j] += dp_no_dpl[i-1][2][(j+3-0)%3];\n            dp_no_dpl[i][1][j] += dp_no_dpl[i-1][0][(j+3-1)%3];\n            dp_no_dpl[i][1][j] += dp_no_dpl[i-1][2][(j+3-1)%3];\n            dp_no_dpl[i][2][j] += dp_no_dpl[i-1][0][(j+3-2)%3];\n            dp_no_dpl[i][2][j] += dp_no_dpl[i-1][1][(j+3-2)%3];\n\n            for(int k=0; k<3; k++) dp_no_dpl[i][k][j] %= mod;\n          }\n        }\n\n        ans += exp(3, n-1, mod) + mod;\n        ans += 1L*3*mod - dp_no_dpl[n-1][0][sum] - dp_no_dpl[n-1][1][sum] - dp_no_dpl[n-1][2][sum];\n        ans %= mod;\n        out.println(ans);\n        }\n        //\n        // int n = Integer.parseInt(bf.readLine());\n        // StringTokenizer st = new StringTokenizer(bf.readLine());\n        // int[] a = new int[n];\n        // for(int i=0; i<n; i++) a[i] =  Integer.parseInt(st.nextToken());\n\n        out.close(); System.exit(0);\n    }\n\n    public static int exp(int base, int e, int mod) {\n      if(e == 0) return 1;\n      if(e == 1) return base;\n      int val = exp(base, e/2, mod);\n      int ans = (int)(1L*val*val % mod);\n      if(e % 2 == 1)\n        ans = (int)(1L*ans*base % mod);\n      return ans;\n    }\n}\nGicen the following input:\nabc\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "3\n",
        "predict": "3\nEND-OF-OUTPUT"
    }
}