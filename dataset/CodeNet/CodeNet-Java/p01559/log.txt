some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=239 bci=0
239    		new Main().run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=12 bci=0
12    public class Main{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=13 bci=4
13    	Scanner sc=new Scanner(System.in);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=15 bci=18
15    	int INF=1<<28;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=16 bci=24
16    	int LIM=70;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=18 bci=30
18    	int[] dx={0, 0, -1, 1};

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=19 bci=53
19    	int[] dy={-1, 1, 0, 0};

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=25 bci=76
25    	int mod=(int)1e9+9;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=239 bci=7
239    		new Main().run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.run(), line=28 bci=0
28    		n=sc.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=29 bci=11
29    		m=sc.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=30 bci=22
30    		xs=new int[m];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=31 bci=32
31    		ys=new int[m];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=32 bci=42
32    		for(int i=0; i<m; i++){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=36 bci=88
36    		solve();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=88 bci=0
88    		if(n<=200){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=89 bci=10
89    			solveNaive();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=40 bci=0
40    		LIM=1000;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=41 bci=7
41    		TreeMap<P, Long> paths=new TreeMap<P, Long>();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=42 bci=15
42    		TreeMap<P, Integer> ds=new TreeMap<P, Integer>();

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=43 bci=23
43    		bfsLim(paths, ds, new P(0, 0));

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
ds = instance of java.util.TreeMap(id=595)
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=43 bci=36
43    		bfsLim(paths, ds, new P(0, 0));

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
ds = instance of java.util.TreeMap(id=595)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=52 bci=0
52    		HashSet<P> wall=new HashSet<P>();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=54 bci=9
54    		for(int i=0; i<m; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=58 bci=55
58    		path.put(p0, 1L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=58 bci=64
58    		path.put(p0, 1L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=59 bci=65
59    		d.put(p0, 0);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=59 bci=74
59    		d.put(p0, 0);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=61 bci=75
61    		LinkedList<P> que=new LinkedList<P>();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=62 bci=84
62    		que.offer(p0);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=64 bci=91
64    		for(; !que.isEmpty();){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=65 bci=99
65    			P p=que.poll();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=109
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=115
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=131
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 0
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 0
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 0
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 0
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 0
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 0
q = instance of Main$P(id=602)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=235
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=244
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=258
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=74 bci=259
74    						que.offer(q);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=305
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=315
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
q = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 2
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = -1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = -1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = -1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = -1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 2
q = instance of Main$P(id=604)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=235
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=244
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=258
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=74 bci=259
74    						que.offer(q);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=305
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=315
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
q = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=597)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=84 bci=363
84    		}

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=64 bci=91
64    		for(; !que.isEmpty();){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=65 bci=99
65    			P p=que.poll();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=109
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=115
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=131
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 0
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 0
q = instance of Main$P(id=606)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 0
q = instance of Main$P(id=606)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 0
q = instance of Main$P(id=606)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 0
q = instance of Main$P(id=606)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 0
q = instance of Main$P(id=606)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 0
q = instance of Main$P(id=606)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 0
q = instance of Main$P(id=606)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=235
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=244
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=258
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=74 bci=259
74    						que.offer(q);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=305
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=315
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
q = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 2
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = -1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = -1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = -1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = -1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 2
q = instance of Main$P(id=608)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=235
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=244
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=258
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=74 bci=259
74    						que.offer(q);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=305
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=315
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
q = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=603)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=84 bci=363
84    		}

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=64 bci=91
64    		for(; !que.isEmpty();){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=65 bci=99
65    			P p=que.poll();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=109
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=115
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=131
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 0
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 0
q = instance of Main$P(id=610)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
q = instance of Main$P(id=611)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 2
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 0
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 2
q = instance of Main$P(id=612)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 2
q = instance of Main$P(id=612)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 2
q = instance of Main$P(id=612)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 2
q = instance of Main$P(id=612)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 2
q = instance of Main$P(id=612)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 2
q = instance of Main$P(id=612)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=597)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 2
q = instance of Main$P(id=612)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=235
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=244
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=258
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=74 bci=259
74    						que.offer(q);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=305
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=315
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
q = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=605)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=84 bci=363
84    		}

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=64 bci=91
64    		for(; !que.isEmpty();){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=65 bci=99
65    			P p=que.poll();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=109
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=115
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=131
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 0
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 0
q = instance of Main$P(id=614)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 0
q = instance of Main$P(id=614)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 0
q = instance of Main$P(id=614)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 0
q = instance of Main$P(id=614)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 0
q = instance of Main$P(id=614)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 0
q = instance of Main$P(id=614)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 0
q = instance of Main$P(id=614)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 1
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 0
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 0
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 0
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 0
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 1
q = instance of Main$P(id=615)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 2
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = -1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = -1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = -1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = -1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 2
q = instance of Main$P(id=616)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=235
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=244
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=258
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=74 bci=259
74    						que.offer(q);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=305
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=315
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
q = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=607)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=84 bci=363
84    		}

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=64 bci=91
64    		for(; !que.isEmpty();){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=65 bci=99
65    			P p=que.poll();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=109
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=115
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=131
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 0
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 0
q = instance of Main$P(id=618)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 0
q = instance of Main$P(id=618)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 0
q = instance of Main$P(id=618)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 0
q = instance of Main$P(id=618)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 0
q = instance of Main$P(id=618)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 0
q = instance of Main$P(id=618)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 0
q = instance of Main$P(id=618)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
q = instance of Main$P(id=619)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 2
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 2
q = instance of Main$P(id=620)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 2
q = instance of Main$P(id=620)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 2
q = instance of Main$P(id=620)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 2
q = instance of Main$P(id=620)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 2
q = instance of Main$P(id=620)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 2
q = instance of Main$P(id=620)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 2
q = instance of Main$P(id=620)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=235
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=244
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=258
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=74 bci=259
74    						que.offer(q);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=305
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=315
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
q = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=609)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=84 bci=363
84    		}

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=64 bci=91
64    		for(; !que.isEmpty();){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=65 bci=99
65    			P p=que.poll();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=109
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=115
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=131
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 0
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = -1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 0
q = instance of Main$P(id=622)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
q = instance of Main$P(id=623)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 2
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 2
q = instance of Main$P(id=624)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 2
q = instance of Main$P(id=624)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 2
q = instance of Main$P(id=624)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 2
q = instance of Main$P(id=624)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 2
q = instance of Main$P(id=624)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 2
q = instance of Main$P(id=624)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 2
q = instance of Main$P(id=624)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 3
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 3
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 3
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 3
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 3
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 3
q = instance of Main$P(id=625)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=613)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=84 bci=363
84    		}

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=64 bci=91
64    		for(; !que.isEmpty();){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=65 bci=99
65    			P p=que.poll();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=109
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=115
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=131
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 0
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 0
q = instance of Main$P(id=626)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 0
q = instance of Main$P(id=626)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 0
q = instance of Main$P(id=626)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 0
q = instance of Main$P(id=626)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 0
q = instance of Main$P(id=626)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 0
q = instance of Main$P(id=626)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 0
q = instance of Main$P(id=626)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 1
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 1
q = instance of Main$P(id=627)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 2
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 2
q = instance of Main$P(id=628)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 2
q = instance of Main$P(id=628)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 2
q = instance of Main$P(id=628)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 2
q = instance of Main$P(id=628)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 2
q = instance of Main$P(id=628)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 2
q = instance of Main$P(id=628)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 2
q = instance of Main$P(id=628)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=235
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=244
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=73 bci=258
73    						d.put(q, d.get(p)+1);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=74 bci=259
74    						que.offer(q);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=305
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=78 bci=315
78    							path.put(q, 0L);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
q = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=617)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=84 bci=363
84    		}

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=64 bci=91
64    		for(; !que.isEmpty();){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=65 bci=99
65    			P p=que.poll();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=109
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=115
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=131
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 0
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 0
q = instance of Main$P(id=630)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 0
q = instance of Main$P(id=630)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 0
q = instance of Main$P(id=630)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 0
q = instance of Main$P(id=630)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 0
q = instance of Main$P(id=630)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 0
q = instance of Main$P(id=630)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=605)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=603)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=613)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 0
q = instance of Main$P(id=630)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=296
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=77 bci=302
77    						if(!path.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=316
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=325
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=337
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=80 bci=356
80    						path.put(q, (path.get(q)+path.get(p))%mod);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
q = instance of Main$P(id=631)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 2
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 2
q = instance of Main$P(id=632)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 2
q = instance of Main$P(id=632)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 2
q = instance of Main$P(id=632)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 2
q = instance of Main$P(id=632)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 2
q = instance of Main$P(id=632)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 2
q = instance of Main$P(id=632)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 2
q = instance of Main$P(id=632)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 3
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 3
q = instance of Main$P(id=633)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=621)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=84 bci=363
84    		}

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=64 bci=91
64    		for(; !que.isEmpty();){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=65 bci=99
65    			P p=que.poll();

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=109
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=66 bci=115
66    			if(d.get(p)==LIM){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=131
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 0
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 0
q = instance of Main$P(id=634)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 0
q = instance of Main$P(id=634)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 0
q = instance of Main$P(id=634)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 0
q = instance of Main$P(id=634)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 0
q = instance of Main$P(id=634)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 0
q = instance of Main$P(id=634)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=621)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 0
q = instance of Main$P(id=634)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 0
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 1
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 1
q = instance of Main$P(id=635)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 1
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 2
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 1
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 2
q = instance of Main$P(id=636)
main[1] > 
Step completed: "thread=main", Main$P.hashCode(), line=219 bci=1
219    			return x|(y<<16);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=223
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 2
q = instance of Main$P(id=636)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=226
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 2
q = instance of Main$P(id=636)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=72 bci=232
72    					if(!d.containsKey(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 2
q = instance of Main$P(id=636)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=267
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 2
q = instance of Main$P(id=636)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=273
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 2
q = instance of Main$P(id=636)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=76 bci=287
76    					if(d.get(p)+1==d.get(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 2
q = instance of Main$P(id=636)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 2
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=140
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 3
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 3
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 3
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 3
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 3
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=70 bci=174
70    				P q=new P(p.x+dx[i], p.y+dy[i]);

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=71 bci=176
71    				if(q.x>=0&&q.x<n&&q.y>=0&&q.y<n&&!wall.contains(q)){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 3
q = instance of Main$P(id=637)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=69 bci=357
69    			for(int i=0; i<4; i++){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
p = instance of Main$P(id=629)
i = 3
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=84 bci=363
84    		}

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=64 bci=91
64    		for(; !que.isEmpty();){

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.bfsLim(), line=85 bci=366
85    	}

main[1] Method arguments:
path = instance of java.util.TreeMap(id=594)
d = instance of java.util.TreeMap(id=595)
p0 = instance of Main$P(id=597)
Local variables:
wall = instance of java.util.HashSet(id=598)
que = instance of java.util.LinkedList(id=601)
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=44 bci=39
44    		if(paths.containsKey(new P(n-1, n-1))){

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
ds = instance of java.util.TreeMap(id=595)
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=44 bci=60
44    		if(paths.containsKey(new P(n-1, n-1))){

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
ds = instance of java.util.TreeMap(id=595)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=44 bci=63
44    		if(paths.containsKey(new P(n-1, n-1))){

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
ds = instance of java.util.TreeMap(id=595)
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=45 bci=66
45    			println(paths.get(new P(n-1, n-1))+"");

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
ds = instance of java.util.TreeMap(id=595)
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=203 bci=0
203    		P(int x, int y){

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=204 bci=9
204    			this.x=x;

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=205 bci=14
205    			this.y=y;

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.<init>(), line=206 bci=19
206    		}

main[1] Method arguments:
x = 2
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=45 bci=95
45    			println(paths.get(new P(n-1, n-1))+"");

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
ds = instance of java.util.TreeMap(id=595)
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=1
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=211 bci=11
211    				return y-p.y;

main[1] Method arguments:
p = instance of Main$P(id=609)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=607)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=617)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=0
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=210 bci=0
210    			if(y!=p.y){

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=213 bci=21
213    				return x-p.x;

main[1] Method arguments:
p = instance of Main$P(id=629)
Local variables:
main[1] > 
Step completed: "thread=main", Main$P.compareTo(), line=200 bci=8
200    	class P implements Comparable<P>{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=45 bci=98
45    			println(paths.get(new P(n-1, n-1))+"");

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
ds = instance of java.util.TreeMap(id=595)
main[1] > 
Step completed: "thread=main", Main.println(), line=235 bci=0
235    		System.out.println(s);

main[1] Method arguments:
s = "6"
Local variables:
main[1] > 
Step completed: "thread=main", Main.println(), line=236 bci=7
236    	}

main[1] Method arguments:
s = "6"
Local variables:
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=45 bci=112
45    			println(paths.get(new P(n-1, n-1))+"");

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
ds = instance of java.util.TreeMap(id=595)
main[1] > 
Step completed: "thread=main", Main.solveNaive(), line=49 bci=121
49    	}

main[1] Method arguments:
Local variables:
paths = instance of java.util.TreeMap(id=594)
ds = instance of java.util.TreeMap(id=595)
main[1] > 
Step completed: "thread=main", Main.solve(), line=90 bci=14
90    			return;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=37 bci=92
37    	}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=240 bci=10
240    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
