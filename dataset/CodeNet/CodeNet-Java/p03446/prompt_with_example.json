{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.io.*;\nimport java.math.BigInteger;\nimport java.util.*;\n\npublic class Main {\n\n\tvoid submit() {\n\t\tint a = nextInt();\n\t\tint b = nextInt();\n\t\tint c = nextInt();\n\t\tint d = nextInt();\n\t\tint e = nextInt();\n\t\tint f = nextInt();\n\n\t\tif (d % a != 0 || e % b != 0 || f % c != 0) {\n\t\t\tout.println(0);\n\t\t\treturn;\n\t\t}\n\n\t\tint p = d / a;\n\t\tint q = e / b;\n\t\tint r = f / c;\n\n\t\tint[][] dp = new int[p + 1][q + 1];\n\t\tdp[p][q] = 1;\n\n\t\tint ans = 0;\n\n\t\tfor (int x = p - 1; x >= 1; x--) {\n\t\t\tfor (int y = q - 1; y >= 1; y--) {\n\t\t\t\tdp[x][y] = (int) ((long) ways[p][x] * ways[q][y] % P\n\t\t\t\t\t\t* pow(c, (p - x) * (q - y)) % P);\n\n\t\t\t\tfor (int xb = x; xb <= p; xb++) {\n\t\t\t\t\tfor (int yb = y; yb <= q; yb++) {\n\t\t\t\t\t\tif (xb + yb == x + y) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdp[x][y] -= (int) ((long) dp[xb][yb] * ways[xb][x] % P\n\t\t\t\t\t\t\t\t* ways[yb][y] % P);\n\t\t\t\t\t\tif (dp[x][y] < 0) {\n\t\t\t\t\t\t\tdp[x][y] += P;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tint foo = pow(b, x);\n\t\t\t\tint bar = pow(a, y);\n\n\t\t\t\tint delta = 0;\n\n\t\t\t\tdelta += pow(Math.floorMod(foo + bar - 1, P), r);\n\t\t\t\tif (delta >= P) {\n\t\t\t\t\tdelta -= P;\n\t\t\t\t}\n\n\t\t\t\tdelta -= pow(foo, r);\n\t\t\t\tif (delta < 0) {\n\t\t\t\t\tdelta += P;\n\t\t\t\t}\n\n\t\t\t\tdelta -= pow(bar, r);\n\t\t\t\tif (delta < 0) {\n\t\t\t\t\tdelta += P;\n\t\t\t\t}\n\n\t\t\t\tdelta++;\n\t\t\t\tif (delta >= P) {\n\t\t\t\t\tdelta -= P;\n\t\t\t\t}\n\n\t\t\t\tdelta = (int) ((long) delta * dp[x][y] % P);\n\t\t\t\tans += delta;\n\t\t\t\tif (ans >= P) {\n\t\t\t\t\tans -= P;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tans += (int) ((long) pow(one2D(a, p, b, q), r) * pow(a * b, r - 1) % P);\n\t\tif (ans >= P) {\n\t\t\tans -= P;\n\t\t}\n\n\t\tans += (int) ((long) pow(one2D(b, q, c, r), p) * pow(b * c, p - 1) % P);\n\t\tif (ans >= P) {\n\t\t\tans -= P;\n\t\t}\n\n\t\tans += (int) ((long) pow(one2D(c, r, a, p), q) * pow(c * a, q - 1) % P); // LOOOOOOOOOOOOOOL\n\t\tif (ans >= P) {\n\t\t\tans -= P;\n\t\t}\n\n\t\tans -= pow(a, q * r - 1);\n\t\tif (ans < 0) {\n\t\t\tans += P;\n\t\t}\n\n\t\tans -= pow(b, r * p - 1);\n\t\tif (ans < 0) {\n\t\t\tans += P;\n\t\t}\n\n\t\tans -= pow(c, p * q - 1);\n\t\tif (ans < 0) {\n\t\t\tans += P;\n\t\t}\n\n\t\tans++;\n\t\tif (ans >= P) {\n\t\t\tans -= P;\n\t\t}\n\t\tans = (int) ((long) ans * a % P * b % P * c % P);\n\n\t\tout.println(ans);\n\t}\n\n\tint one2D(int a, int p, int b, int q) {\n\t\treturn Math.floorMod(pow(b, p - 1) + pow(a, q - 1) - 1, P);\n\t}\n\n\tint pow(int a, int b) {\n\t\tint ret = 1;\n\t\tfor (; b > 0; b >>= 1) {\n\t\t\tif ((b & 1) == 1) {\n\t\t\t\tret = (int) ((long) ret * a % P);\n\t\t\t}\n\t\t\ta = (int) ((long) a * a % P);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tstatic final int C = 110;\n\tstatic final int P = BigInteger.TEN.pow(9).intValueExact() + 7;\n\tint[][] ways;\n\n\tvoid preCalc() {\n\t\tways = new int[C][];\n\t\tfor (int i = 0; i < C; i++) {\n\t\t\tways[i] = new int[i + 1];\n\t\t\tways[i][0] = ways[i][i] = 1;\n\t\t\tfor (int j = 1; j < i; j++) {\n\t\t\t\tways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid stress() {\n\n\t}\n\n\tvoid test() {\n\n\t}\n\n\tMain() throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tout = new PrintWriter(System.out);\n\t\tpreCalc();\n\t\tsubmit();\n\t\t// stress();\n\t\t// test();\n\t\tout.close();\n\t}\n\n\tstatic final Random rng = new Random();\n\n\tstatic int rand(int l, int r) {\n\t\treturn l + rng.nextInt(r - l + 1);\n\t}\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tnew Main();\n\t}\n\n\tBufferedReader br;\n\tPrintWriter out;\n\tStringTokenizer st;\n\n\tString nextToken() {\n\t\twhile (st == null || !st.hasMoreTokens()) {\n\t\t\ttry {\n\t\t\t\tst = new StringTokenizer(br.readLine());\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new RuntimeException(e);\n\t\t\t}\n\t\t}\n\t\treturn st.nextToken();\n\t}\n\n\tString nextString() {\n\t\ttry {\n\t\t\treturn br.readLine();\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n\tint nextInt() {\n\t\treturn Integer.parseInt(nextToken());\n\t}\n\n\tlong nextLong() {\n\t\treturn Long.parseLong(nextToken());\n\t}\n\n\tdouble nextDouble() {\n\t\treturn Double.parseDouble(nextToken());\n\t}\n}\nGicen the following input:\n1 1 1 2 2 2\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "1\n"
    }
}