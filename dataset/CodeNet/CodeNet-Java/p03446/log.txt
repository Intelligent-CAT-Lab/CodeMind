some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=135 bci=0
135    	static final int P = BigInteger.TEN.pow(9).intValueExact() + 7;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=167 bci=17
167    	static final Random rng = new Random();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=174 bci=0
174    		new Main();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=445)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=157 bci=0
157    	Main() throws IOException {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=158 bci=4
158    		br = new BufferedReader(new InputStreamReader(System.in));

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=159 bci=25
159    		out = new PrintWriter(System.out);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=160 bci=39
160    		preCalc();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=139 bci=0
139    		ways = new int[C][];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=9
140    		for (int i = 0; i < C; i++) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 3
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 4
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 4
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 4
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 4
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 4
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 5
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 5
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 5
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 5
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 5
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 5
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 5
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 5
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 6
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 6
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 6
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 6
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 6
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 6
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 6
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 6
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 6
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 6
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 7
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 7
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 7
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 7
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 7
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 7
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 7
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 7
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 7
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 7
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 7
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 7
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 8
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 8
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 8
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 8
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 8
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 8
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 8
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 8
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 8
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 8
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 8
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 8
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 8
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 8
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 9
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 9
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 9
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 9
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 9
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 9
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 9
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 9
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 9
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 9
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 9
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 9
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 9
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 9
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 9
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 9
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 10
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 10
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 10
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 10
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 10
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 10
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 10
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 10
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 10
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 10
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 10
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 10
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 10
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 10
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 10
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 10
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 10
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 10
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 11
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 11
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 11
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 11
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 11
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 11
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 11
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 11
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 11
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 11
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 11
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 12
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 12
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 13
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 13
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 14
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 14
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 15
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 15
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 16
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 16
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 17
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 17
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 18
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 18
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 19
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 19
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 20
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 20
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 21
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 21
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 22
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 22
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 23
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 23
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 24
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 24
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 25
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 25
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 26
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 26
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 27
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 27
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 28
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 28
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 29
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 29
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 30
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 30
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 31
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 31
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 32
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 32
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 33
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 33
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 34
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 34
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 35
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 35
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 36
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 36
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 37
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 37
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 38
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 38
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 39
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 39
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 40
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 40
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 41
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 41
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 42
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 42
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 43
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 43
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 44
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 44
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 45
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 45
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 46
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 46
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 47
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 47
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 48
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 48
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 49
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 49
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 50
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 50
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 51
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 51
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 52
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 52
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 53
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 53
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 54
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 54
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 55
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 55
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 56
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 56
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 57
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 57
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 58
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 58
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 59
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 59
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 60
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 60
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 61
j = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 61
j = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 62
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 62
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 62
j = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 62
j = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 62
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 63
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 63
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 63
j = 62
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 63
j = 62
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 63
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 64
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 64
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 62
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 62
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 64
j = 63
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 64
j = 63
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 64
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 65
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 65
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 28
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 29
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 30
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 31
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 32
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 33
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 34
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 35
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 36
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 37
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 38
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 39
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 40
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 41
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 42
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 43
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 44
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 45
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 46
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 47
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 48
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 49
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 50
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 51
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 52
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 53
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 54
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 55
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 56
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 57
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 58
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 59
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 60
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 61
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 62
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 62
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 63
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 63
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 65
j = 64
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 65
j = 64
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=140 bci=94
140    		for (int i = 0; i < C; i++) {

main[1] Method arguments:
Local variables:
i = 65
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=141 bci=17
141    			ways[i] = new int[i + 1];

main[1] Method arguments:
Local variables:
i = 66
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=142 bci=28
142    			ways[i][0] = ways[i][i] = 1;

main[1] Method arguments:
Local variables:
i = 66
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=46
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 1
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 2
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 3
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 4
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 5
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 6
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 7
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 8
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 9
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 10
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 11
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 12
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 13
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 14
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 15
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 16
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 17
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 18
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 19
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 20
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 21
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 22
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 23
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 24
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 25
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 26
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] Method arguments:
Local variables:
i = 66
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=143 bci=88
143    			for (int j = 1; j < i; j++) {

main[1] Method arguments:
Local variables:
i = 66
j = 27
main[1] > 
Step completed: "thread=main", Main.preCalc(), line=144 bci=53
144    				ways[i][j] = (ways[i - 1][j] + ways[i - 1][j - 1]) % P;

main[1] 