some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=18 bci=0
18    	static final int[][] _PRI = {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=52 bci=0
52    		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=56 bci=18
56    		main = new Main();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
main[1] > 
Step completed: "thread=main", Main.<init>(), line=14 bci=0
14    public class Main {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=39 bci=4
39    		PRI = new int[_PRI.length][128];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=18
40    		for (int i = 0; i < PRI.length; i++) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 9
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 10
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 11
main[1] > 
Step completed: "thread=main", Main.<init>(), line=41 bci=28
41    			PRI[i]['('] = 5;

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.<init>(), line=42 bci=37
42    			PRI[i][127] = 4;

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.<init>(), line=43 bci=46
43    			PRI[i]['+'] = _PRI[i][0];

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.<init>(), line=44 bci=61
44    			PRI[i]['-'] = _PRI[i][1];

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.<init>(), line=45 bci=76
45    			PRI[i]['*'] = _PRI[i][2];

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.<init>(), line=46 bci=91
46    			PRI[i][')'] = 0;

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.<init>(), line=47 bci=100
47    			PRI[i]['\0'] = -1;

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.<init>(), line=40 bci=108
40    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
Local variables:
i = 12
main[1] > 
Step completed: "thread=main", Main.<init>(), line=49 bci=114
49    	}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=56 bci=25
56    		main = new Main();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
main[1] > 
Step completed: "thread=main", Main.main(), line=59 bci=28
59    		line = br.readLine();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
main[1] > 
Step completed: "thread=main", Main.main(), line=60 bci=33
60    		words = line.split("(?<!\\d)|(?!\\d)");

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
main[1] > 
Step completed: "thread=main", Main.main(), line=61 bci=40
61    		List<Elm> expr = new ArrayList<>();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
main[1] > 
Step completed: "thread=main", Main.main(), line=63 bci=49
63    		for (String word : words) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
main[1] > 
Step completed: "thread=main", Main.main(), line=64 bci=74
64    			char c = word.charAt(0);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "3"
main[1] > 
Step completed: "thread=main", Main.main(), line=65 bci=82
65    			switch (c) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "3"
c = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=82 bci=254
82    					expr.add(main.new Num(parseInt(word)));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "3"
c = 3
main[1] > 
Step completed: "thread=main", Main$Num.<init>(), line=241 bci=0
241    		Num(long value) {

main[1] Method arguments:
value = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Num.<init>(), line=242 bci=9
242    			this.value = value;

main[1] Method arguments:
value = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Num.<init>(), line=243 bci=14
243    		}

main[1] Method arguments:
value = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=82 bci=277
82    					expr.add(main.new Num(parseInt(word)));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "3"
c = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=63 bci=283
63    		for (String word : words) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
main[1] > 
Step completed: "thread=main", Main.main(), line=64 bci=74
64    			char c = word.charAt(0);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "-"
main[1] > 
Step completed: "thread=main", Main.main(), line=65 bci=82
65    			switch (c) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "-"
c = -
main[1] > 
Step completed: "thread=main", Main.main(), line=76 bci=202
76    					expr.add(main.new Subtract());

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "-"
c = -
main[1] > 
Step completed: "thread=main", Main$Subtract.<init>(), line=199 bci=0
199    	class Subtract implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=76 bci=219
76    					expr.add(main.new Subtract());

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "-"
c = -
main[1] > 
Step completed: "thread=main", Main.main(), line=77 bci=225
77    					break;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "-"
c = -
main[1] > 
Step completed: "thread=main", Main.main(), line=63 bci=283
63    		for (String word : words) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
main[1] > 
Step completed: "thread=main", Main.main(), line=64 bci=74
64    			char c = word.charAt(0);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "2"
main[1] > 
Step completed: "thread=main", Main.main(), line=65 bci=82
65    			switch (c) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "2"
c = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=82 bci=254
82    					expr.add(main.new Num(parseInt(word)));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "2"
c = 2
main[1] > 
Step completed: "thread=main", Main$Num.<init>(), line=241 bci=0
241    		Num(long value) {

main[1] Method arguments:
value = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Num.<init>(), line=242 bci=9
242    			this.value = value;

main[1] Method arguments:
value = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main$Num.<init>(), line=243 bci=14
243    		}

main[1] Method arguments:
value = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=82 bci=277
82    					expr.add(main.new Num(parseInt(word)));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "2"
c = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=63 bci=283
63    		for (String word : words) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
main[1] > 
Step completed: "thread=main", Main.main(), line=64 bci=74
64    			char c = word.charAt(0);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "*"
main[1] > 
Step completed: "thread=main", Main.main(), line=65 bci=82
65    			switch (c) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "*"
c = *
main[1] > 
Step completed: "thread=main", Main.main(), line=79 bci=228
79    					expr.add(main.new Multiply());

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "*"
c = *
main[1] > 
Step completed: "thread=main", Main$Multiply.<init>(), line=212 bci=0
212    	class Multiply implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=79 bci=245
79    					expr.add(main.new Multiply());

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "*"
c = *
main[1] > 
Step completed: "thread=main", Main.main(), line=80 bci=251
80    					break;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "*"
c = *
main[1] > 
Step completed: "thread=main", Main.main(), line=63 bci=283
63    		for (String word : words) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
main[1] > 
Step completed: "thread=main", Main.main(), line=64 bci=74
64    			char c = word.charAt(0);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "3"
main[1] > 
Step completed: "thread=main", Main.main(), line=65 bci=82
65    			switch (c) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "3"
c = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=82 bci=254
82    					expr.add(main.new Num(parseInt(word)));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "3"
c = 3
main[1] > 
Step completed: "thread=main", Main$Num.<init>(), line=241 bci=0
241    		Num(long value) {

main[1] Method arguments:
value = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Num.<init>(), line=242 bci=9
242    			this.value = value;

main[1] Method arguments:
value = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main$Num.<init>(), line=243 bci=14
243    		}

main[1] Method arguments:
value = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=82 bci=277
82    					expr.add(main.new Num(parseInt(word)));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
word = "3"
c = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=63 bci=283
63    		for (String word : words) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
main[1] > 
Step completed: "thread=main", Main.main(), line=87 bci=289
87    		long max = Long.MIN_VALUE;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=294
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = -9223372036854775808
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = -9223372036854775808
i = 0
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=492)
p1 = 3
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=492)
p1 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=492)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=492)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
e = instance of Main$Num(id=492)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=483)
Local variables:
stack = instance of java.util.ArrayDeque(id=484)
list = instance of java.util.ArrayList(id=485)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = -9223372036854775808
i = 0
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Multiply(id=491)
b = 3
a = 2
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 2
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Multiply(id=491)
b = 3
a = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Subtract(id=489)
b = 6
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Subtract(id=489)
b = 6
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Subtract(id=489)
b = 6
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=485)
Local variables:
stack = instance of java.util.ArrayDeque(id=493)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = -9223372036854775808
i = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = -3
i = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = -3
i = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=490)
p1 = 3
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=490)
p1 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=490)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=490)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=490)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = 3
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = 3
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = 3
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = 3
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=495)
Local variables:
stack = instance of java.util.ArrayDeque(id=496)
list = instance of java.util.ArrayList(id=497)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = -3
i = 1
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Subtract(id=489)
b = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=497)
Local variables:
stack = instance of java.util.ArrayDeque(id=498)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = -3
i = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=490)
p1 = 1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=490)
p1 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=492)
p1 = 3
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=492)
p1 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=492)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=492)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
e = instance of Main$Num(id=492)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=499)
Local variables:
stack = instance of java.util.ArrayDeque(id=500)
list = instance of java.util.ArrayList(id=501)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Multiply(id=491)
b = 3
a = 2
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 2
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Multiply(id=491)
b = 3
a = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Subtract(id=489)
b = 6
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Subtract(id=489)
b = 6
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Subtract(id=489)
b = 6
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=501)
Local variables:
stack = instance of java.util.ArrayDeque(id=502)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=490)
p1 = 3
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=490)
p1 = 3
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=490)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=490)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=490)
p1 = 3
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = 3
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = 3
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = 3
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = 3
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=492)
p1 = 1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=492)
p1 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=503)
Local variables:
stack = instance of java.util.ArrayDeque(id=504)
list = instance of java.util.ArrayList(id=505)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Subtract(id=489)
b = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=505)
Local variables:
stack = instance of java.util.ArrayDeque(id=506)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=490)
p1 = 1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=490)
p1 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=507)
Local variables:
stack = instance of java.util.ArrayDeque(id=508)
list = instance of java.util.ArrayList(id=509)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 4
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Multiply(id=491)
b = 3
a = 2
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 2
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Multiply(id=491)
b = 3
a = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Subtract(id=489)
b = 6
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Subtract(id=489)
b = 6
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Subtract(id=489)
b = 6
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=509)
Local variables:
stack = instance of java.util.ArrayDeque(id=510)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 4
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 4
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 5
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=492)
p1 = 1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=492)
p1 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=511)
Local variables:
stack = instance of java.util.ArrayDeque(id=512)
list = instance of java.util.ArrayList(id=513)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 5
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Subtract(id=489)
b = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=513)
Local variables:
stack = instance of java.util.ArrayDeque(id=514)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 5
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 5
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 6
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=490)
p1 = 1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=490)
p1 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=515)
Local variables:
stack = instance of java.util.ArrayDeque(id=516)
list = instance of java.util.ArrayList(id=517)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 6
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Multiply(id=491)
b = 3
a = 2
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 2
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Multiply(id=491)
b = 3
a = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Subtract(id=489)
b = 6
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Subtract(id=489)
b = 6
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Subtract(id=489)
b = 6
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=517)
Local variables:
stack = instance of java.util.ArrayDeque(id=518)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 6
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 6
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 7
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=492)
p1 = 1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=492)
p1 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=519)
Local variables:
stack = instance of java.util.ArrayDeque(id=520)
list = instance of java.util.ArrayList(id=521)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 7
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Subtract(id=489)
b = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=521)
Local variables:
stack = instance of java.util.ArrayDeque(id=522)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 7
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 7
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 8
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=490)
p1 = 1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=490)
p1 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=492)
p1 = 1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=492)
p1 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=523)
Local variables:
stack = instance of java.util.ArrayDeque(id=524)
list = instance of java.util.ArrayList(id=525)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 8
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Subtract(id=489)
b = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=525)
Local variables:
stack = instance of java.util.ArrayDeque(id=526)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 8
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 8
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 9
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=492)
p1 = 1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=492)
p1 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
e = instance of Main$Num(id=492)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=527)
Local variables:
stack = instance of java.util.ArrayDeque(id=528)
list = instance of java.util.ArrayList(id=529)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 9
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Subtract(id=489)
b = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=529)
Local variables:
stack = instance of java.util.ArrayDeque(id=530)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 9
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 9
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 10
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=490)
p1 = 1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=490)
p1 = 1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=490)
p1 = 1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Multiply(id=491)
p1 = 1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=531)
Local variables:
stack = instance of java.util.ArrayDeque(id=532)
list = instance of java.util.ArrayList(id=533)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 10
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Multiply(id=491)
b = 3
a = 2
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 2
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Multiply(id=491)
b = 3
a = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Subtract(id=489)
b = 6
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Subtract(id=489)
b = 6
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Subtract(id=489)
b = 6
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=533)
Local variables:
stack = instance of java.util.ArrayDeque(id=534)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 10
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 10
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 11
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=535)
Local variables:
stack = instance of java.util.ArrayDeque(id=536)
list = instance of java.util.ArrayList(id=537)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 11
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Subtract(id=489)
b = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=537)
Local variables:
stack = instance of java.util.ArrayDeque(id=538)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 11
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 11
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=306
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 12
main[1] > 
Step completed: "thread=main", Main.postfix(), line=96 bci=0
96    		Deque<Elm> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
main[1] > 
Step completed: "thread=main", Main.postfix(), line=97 bci=8
97    		List<Elm> list = new ArrayList<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=16
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main$Nop.<init>(), line=225 bci=0
225    	class Nop implements Op {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=99 bci=32
99    		stack.push(main.new Nop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=37
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=488)
p1 = -1
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=488)
p1 = -1
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Subtract(id=489)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=490)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=490)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Subtract.pri(), line=208 bci=0
208    			return '-';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = 4
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=105 bci=115
105    				list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=128
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 2
main[1] > 
Step completed: "thread=main", Main$Nop.pri(), line=234 bci=0
234    			return 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=106 bci=143
106    				p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = 2
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Multiply(id=491)
p1 = -1
p2 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=67
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main$Multiply.pri(), line=221 bci=0
221    			return '*';

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=102 bci=82
102    			p1 = pri[stack.peek().pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=85
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main$Num.pri(), line=247 bci=0
247    			return 127;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.postfix(), line=103 bci=93
103    			p2 = pri[e.pri()];

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=492)
p1 = 2
main[1] > 
Step completed: "thread=main", Main.postfix(), line=104 bci=96
104    			while (p2 <= p1 && !(stack.peek() instanceof Lp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=108 bci=149
108    			if (!(e instanceof Rp)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=109 bci=157
109    				stack.push(e);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
e = instance of Main$Num(id=492)
p1 = 2
p2 = 4
main[1] > 
Step completed: "thread=main", Main.postfix(), line=114 bci=175
114    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=100 bci=45
100    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=116 bci=190
116    			list.add(stack.pop());

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=115 bci=178
115    		while (!(stack.peek() instanceof Nop)) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.postfix(), line=118 bci=206
118    		return list;

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=472)
pri = instance of int[128] (id=539)
Local variables:
stack = instance of java.util.ArrayDeque(id=540)
list = instance of java.util.ArrayList(id=541)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=319
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 12
main[1] > 
Step completed: "thread=main", Main.eval(), line=122 bci=0
122    		Deque<Long> stack = new ArrayDeque<>();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=8
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Num(id=488)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Num(id=490)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Subtract(id=489)
b = 2
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main$Subtract.operate(), line=203 bci=0
203    			return a - b;

main[1] Method arguments:
a = 3
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Subtract(id=489)
b = 2
a = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Subtract(id=489)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=133 bci=94
133    				stack.push(((Num) e).value);

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Num(id=492)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=127 bci=34
127    			if (e instanceof Op) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=129 bci=41
129    				b = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=130 bci=55
130    				a = stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Multiply(id=491)
b = 3
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=69
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main$Multiply.operate(), line=216 bci=0
216    			return a * b;

main[1] Method arguments:
a = 1
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.eval(), line=131 bci=83
131    				stack.push(((Op) e).operate(a, b));

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Multiply(id=491)
b = 3
a = 1
main[1] > 
Step completed: "thread=main", Main.eval(), line=132 bci=91
132    			} else {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
e = instance of Main$Multiply(id=491)
main[1] > 
Step completed: "thread=main", Main.eval(), line=135 bci=110
135    		}

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=126 bci=15
126    		for (Elm e : expr) {

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.eval(), line=136 bci=113
136    		return stack.pop();

main[1] Method arguments:
expr = instance of java.util.ArrayList(id=541)
Local variables:
stack = instance of java.util.ArrayDeque(id=542)
main[1] > 
Step completed: "thread=main", Main.main(), line=90 bci=322
90    			max = Math.max(max, eval(postfix(expr, PRI[i])));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 12
main[1] > 
Step completed: "thread=main", Main.main(), line=88 bci=327
88    		for (int i = 0; i < PRI.length; i++) {

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
i = 12
main[1] > 
Step completed: "thread=main", Main.main(), line=92 bci=333
92    		System.out.println(max);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=93 bci=341
93    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
br = instance of java.io.BufferedReader(id=448)
line = "3-2*3"
words = instance of java.lang.String[5] (id=471)
expr = instance of java.util.ArrayList(id=472)
max = 3
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
