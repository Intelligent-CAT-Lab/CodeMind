{
    "0": {
        "prompt": "Consider the following code:\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.util.HashSet;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\n    public static void main(String[] args) throws IOException {\n        Scanner s = new Scanner(System.in);\n        String word = s.next();\n        boolean flag = false;\n        for(int i=0;i<word.length()-1;i++){\n            if(word.charAt(i)==word.charAt(i+1)){\n                flag = true;\n                break;\n            }\n        }\n        if(flag) System.out.println(\"Bad\");\n        else System.out.println(\"Good\");\n    }\n\n\n\n\n}\n\n\nclass Scanner\n{\n    StringTokenizer st;\n    BufferedReader br;\n\n    public Scanner(InputStream s){\tbr = new BufferedReader(new InputStreamReader(s));}\n\n    public String next() throws IOException\n    {\n        while (st == null || !st.hasMoreTokens())\n            st = new StringTokenizer(br.readLine());\n        return st.nextToken();\n    }\n\n    public int nextInt() throws IOException {return Integer.parseInt(next());}\n\n    public long nextLong() throws IOException {return Long.parseLong(next());}\n\n    public String nextLine() throws IOException {return br.readLine();}\n\n    public double nextDouble() throws IOException\n    {\n        String x = next();\n        StringBuilder sb = new StringBuilder(\"0\");\n        double res = 0, f = 1;\n        boolean dec = false, neg = false;\n        int start = 0;\n        if(x.charAt(0) == '-')\n        {\n            neg = true;\n            start++;\n        }\n        for(int i = start; i < x.length(); i++)\n            if(x.charAt(i) == '.')\n            {\n                res = Long.parseLong(sb.toString());\n                sb = new StringBuilder(\"0\");\n                dec = true;\n            }\n            else\n            {\n                sb.append(x.charAt(i));\n                if(dec)\n                    f *= 10;\n            }\n        res += Long.parseLong(sb.toString()) / f;\n        return res * (neg?-1:1);\n    }\n\n    public boolean ready() throws IOException {return br.ready();}\n\n\n}Gicen the following input:\n3776\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "Bad\n",
        "predict": "Good"
    }
}