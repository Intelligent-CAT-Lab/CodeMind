1 import java.io.BufferedReader;
2 import java.io.InputStreamReader;
3 import java.io.IOException;
4 import java.io.InputStream;
5 import java.io.OutputStream;
6 import java.io.PrintWriter;
7 import java.util.Arrays;
8 import java.util.StringTokenizer;
9 import java.math.BigInteger;
10 
11 public class Main {
12 //  ??Â¨?????????????????????
13   static InputReader in;
14   static PrintWriter out;
15   
16   static class Solution {
17     void solve() throws IOException {
18       int a = in.nextInt();
19       int b = in.nextInt();
20       out.println(a*b+" "+(2*a+2*b));
21     }
22   }
23 
24   public static void main(String[] args) throws IOException {
25 //    ??????
26     in = new InputReader(System.in);
27     out = new PrintWriter(System.out);
28     Solution solver = new Solution();
29     solver.solve();
30     out.close();
31 }
32 
33   static class InputReader {
34 //    ??\???
35     public BufferedReader br;
36     public StringTokenizer st;
37     
38     public InputReader(InputStream stream) {
39 //      ?????????????????????
40       br = new BufferedReader(new InputStreamReader(stream));
41     }
42    
43 //    ????????????????????????
44     public int nextInt() throws IOException {
45       while (st == null || !st.hasMoreTokens()) {
46         st = new StringTokenizer(br.readLine());
47       }
48       return Integer.parseInt(st.nextToken());
49     }
50     
51     public long nextLong() throws IOException {
52       while (st == null || !st.hasMoreTokens()) {
53         st = new StringTokenizer(br.readLine());
54       }
55       return Long.parseLong(st.nextToken()); 
56     }
57     
58     public String next() throws IOException {
59       while (st == null || !st.hasMoreTokens()) {
60         st = new StringTokenizer(br.readLine());
61       }
62       return st.nextToken();
63     }
64     
65     public double nextDouble() throws IOException {
66       while (st == null || !st.hasMoreTokens()) {
67         st = new StringTokenizer(br.readLine());
68       }
69       return Double.parseDouble(st.nextToken());
70     }
71     
72   }
73   
74 }