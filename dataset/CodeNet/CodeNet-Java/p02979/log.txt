some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=104 bci=0
104    			in = new BufferedReader(new InputStreamReader(System.in));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=105 bci=20
105    			out = new PrintWriter(System.out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=106 bci=33
106    			solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=0
29    		int n = scanInt(), k = scanInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanInt(), line=84 bci=0
84    		return parseInt(scanString());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=92 bci=0
92    		while (tok == null || !tok.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=93 bci=15
93    			tok = new StringTokenizer(in.readLine());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=92 bci=0
92    		while (tok == null || !tok.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=95 bci=34
95    		return tok.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanInt(), line=84 bci=3
84    		return parseInt(scanString());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=3
29    		int n = scanInt(), k = scanInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanInt(), line=84 bci=0
84    		return parseInt(scanString());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=92 bci=0
92    		while (tok == null || !tok.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=95 bci=34
95    		return tok.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanInt(), line=84 bci=3
84    		return parseInt(scanString());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=7
29    		int n = scanInt(), k = scanInt();

main[1] Method arguments:
Local variables:
n = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=8
30    		mod = scanInt();

main[1] Method arguments:
Local variables:
n = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.scanInt(), line=84 bci=0
84    		return parseInt(scanString());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=92 bci=0
92    		while (tok == null || !tok.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=95 bci=34
95    		return tok.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanInt(), line=84 bci=3
84    		return parseInt(scanString());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=11
30    		mod = scanInt();

main[1] Method arguments:
Local variables:
n = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=31 bci=14
31    		if (k % 2 == 0) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=34 bci=56
34    			int dyn[][] = new int[k + 2][k + 2];

main[1] Method arguments:
Local variables:
n = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=67
35    			dyn[0][0] = 1;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=73
36    			int ndyn[][] = new int[k + 2][k + 2];

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=84
37    			for (int i = 0; i < (n | 1) / 2 + k / 2 + 2; i++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=103
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=128
39    					fill(a, 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
a = instance of int[3] (id=452)
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=134
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=128
39    					fill(a, 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
a = instance of int[3] (id=453)
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=134
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=128
39    					fill(a, 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
a = instance of int[3] (id=454)
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=134
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=41 bci=140
41    				int mask = (i < (n + 1) / 2 ? 1 : 0) + (i >= k / 2 + 2 ? 2 : 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=42 bci=173
42    				for (int m = mask;; m = (m - 1) & mask) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=177
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 0
nj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 0
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 0
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 0
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 1
nj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 1
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 1
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 1
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 2
nj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 2
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 2
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 2
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 0
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 1
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 2
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 0
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 1
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 2
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=306
52    					if (m == 0) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=42 bci=314
42    				for (int m = mask;; m = (m - 1) & mask) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=177
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=306
52    					if (m == 0) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=311
53    						break;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
m = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=56 bci=326
56    				int t[][] = dyn;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=329
57    				dyn = ndyn;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
t = instance of int[][3] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=331
58    				ndyn = t;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=451)
i = 0
mask = 1
t = instance of int[][3] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=334
37    			for (int i = 0; i < (n | 1) / 2 + k / 2 + 2; i++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=103
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=128
39    					fill(a, 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
a = instance of int[3] (id=455)
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=134
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=128
39    					fill(a, 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
a = instance of int[3] (id=456)
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=134
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=128
39    					fill(a, 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
a = instance of int[3] (id=457)
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=134
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=41 bci=140
41    				int mask = (i < (n + 1) / 2 ? 1 : 0) + (i >= k / 2 + 2 ? 2 : 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=42 bci=173
42    				for (int m = mask;; m = (m - 1) & mask) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=177
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 0
nj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 0
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 0
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 0
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 1
nj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 1
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 1
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 1
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 2
nj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 2
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 2
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 2
nj = 1
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 0
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 1
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 2
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 0
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 0
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 1
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 1
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 2
nj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 2
nj = 2
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=306
52    					if (m == 0) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=42 bci=314
42    				for (int m = mask;; m = (m - 1) & mask) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=177
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 2
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 2
b = 0
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 2
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 2
b = 0
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 2
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 2
b = 0
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 2
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 2
b = 0
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 2
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 2
b = 0
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=306
52    					if (m == 0) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=311
53    						break;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
m = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=56 bci=326
56    				int t[][] = dyn;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=329
57    				dyn = ndyn;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
t = instance of int[][3] (id=451)
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=331
58    				ndyn = t;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=449)
i = 1
mask = 1
t = instance of int[][3] (id=451)
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=334
37    			for (int i = 0; i < (n | 1) / 2 + k / 2 + 2; i++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=103
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=128
39    					fill(a, 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
a = instance of int[3] (id=452)
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=134
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=128
39    					fill(a, 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
a = instance of int[3] (id=453)
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=134
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=39 bci=128
39    					fill(a, 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
a = instance of int[3] (id=454)
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=134
38    				for (int a[]: ndyn) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=41 bci=140
41    				int mask = (i < (n + 1) / 2 ? 1 : 0) + (i >= k / 2 + 2 ? 2 : 0);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=42 bci=173
42    				for (int m = mask;; m = (m - 1) & mask) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=177
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 1
nj = 0
njj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 1
nj = 0
njj = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 0
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 1
nj = 0
njj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 2
nj = 0
njj = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 0
nj = 0
njj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 0
nj = 0
njj = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 0
nj = 0
njj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 1
nj = 0
njj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 1
nj = 0
njj = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 1
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 1
b = 0
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 1
nj = 0
njj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 2
nj = 0
njj = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 0
nj = 0
njj = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 1
nj = 0
njj = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 2
nj = 0
njj = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=306
52    					if (m == 0) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=42 bci=314
42    				for (int m = mask;; m = (m - 1) & mask) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=177
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 2
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 2
b = 2
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 4
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 4
b = 0
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 4
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 4
b = 0
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 4
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 4
b = 1
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 5
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 5
b = 0
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 5
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 5
b = 0
Local variables:
res = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=188
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 0
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 5
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 5
b = 1
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 0
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 1
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 6
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 6
b = 0
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 1
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=199
45    							int nj = (m & 1) != 0 ? min(j + 1, k + 1) : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=222
46    							int njj = (m & 2) != 0 && (j != 0 || jj != 0) ? max(j, jj) + 1 : 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 2
nj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=254
47    							if (nj < k + 2 && njj < k + 2) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=270
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 6
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 6
b = 0
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=293
48    								ndyn[nj][njj] = add(ndyn[nj][njj], dyn[j][jj]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 2
nj = 0
njj = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=44 bci=294
44    						for (int jj = 0; jj < k + 2; jj++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
jj = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=43 bci=300
43    					for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=306
52    					if (m == 0) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=311
53    						break;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
m = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=56 bci=326
56    				int t[][] = dyn;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=329
57    				dyn = ndyn;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=449)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
t = instance of int[][3] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=331
58    				ndyn = t;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=451)
i = 2
mask = 2
t = instance of int[][3] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=334
37    			for (int i = 0; i < (n | 1) / 2 + k / 2 + 2; i++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=340
60    			int ans = 0;

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=343
61    			for (int i = 0; i < k + 2; i++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=354
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 0
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=365
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 0
i = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 0
b = 6
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=377
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 0
i = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=379
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 6
i = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=365
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 6
i = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 6
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 6
b = 0
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=377
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 6
i = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=379
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 6
i = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=365
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 6
i = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 6
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 6
b = 1
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=377
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 6
i = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=379
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=385
61    			for (int i = 0; i < k + 2; i++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=354
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=365
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 7
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 7
b = 0
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=377
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=379
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=365
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 7
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 7
b = 0
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=377
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=379
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=365
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 7
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 7
b = 0
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=377
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=379
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=385
61    			for (int i = 0; i < k + 2; i++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=354
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=365
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 7
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 7
b = 0
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=377
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=379
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=365
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 7
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 7
b = 0
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=377
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=379
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=365
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 7
b = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= mod ? res - mod : res;

main[1] Method arguments:
a = 7
b = 0
Local variables:
res = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=377
63    					ans = add(ans, dyn[i][j]);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=379
62    				for (int j = 0; j < k + 2; j++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=385
61    			for (int i = 0; i < k + 2; i++) {

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=66 bci=391
66    			out.print(ans);

main[1] Method arguments:
Local variables:
n = 3
k = 1
dyn = instance of int[][3] (id=451)
ndyn = instance of int[][3] (id=449)
ans = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=399
68    	}

main[1] Method arguments:
Local variables:
n = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=107 bci=36
107    			in.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=108 bci=42
108    			out.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=112 bci=48
112    		}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=113 bci=60
113    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
