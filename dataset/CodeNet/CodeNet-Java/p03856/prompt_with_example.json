{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.awt.geom.*;\nimport java.io.*;\nimport java.math.*;\nimport java.text.*; \nimport java.util.*;\nimport java.util.regex.*;\n\n/*\n\t\t  br = new BufferedReader(new FileReader(\"input.txt\"));\n\t\t  pw = new PrintWriter(new BufferedWriter(new FileWriter(\"output.txt\")));\n\t\t  br = new BufferedReader(new InputStreamReader(System.in));\n\t\t  pw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n */\n\npublic class Main {\n\tprivate static BufferedReader br;\n\tprivate static StringTokenizer st;\n\tprivate static PrintWriter pw;\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\tpw = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));\n\t\t//int qq = 1;\n\t\tint qq = Integer.MAX_VALUE;\n\t\t//int qq = readInt();\n\t\tfor(int casenum = 1; casenum <= qq; casenum++) {\n\t\t\tString s = readLine();\n\t\t\tString[] good = new String[] {\"dream\", \"dreamer\", \"erase\", \"eraser\"};\n\t\t\tboolean[] poss = new boolean[s.length()+1];\n\t\t\tposs[0] = true;\n\t\t\tfor(int i = 0; i < s.length(); i++) {\n\t\t\t\tif(!poss[i]) continue;\n\t\t\t\tfor(String out: good) {\n\t\t\t\t\tif(i + out.length() > s.length()) continue;\n\t\t\t\t\tint match = 0;\n\t\t\t\t\tfor(int a = 0; a < out.length(); a++) {\n\t\t\t\t\t\tif(out.charAt(a) == s.charAt(i+a)) {\n\t\t\t\t\t\t\tmatch++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(match == out.length()) {\n\t\t\t\t\t\tposs[i+match] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tpw.println(poss[s.length()] ? \"YES\" : \"NO\");\n\t\t}\n\t\texitImmediately();\n\t}\n\n\t\n\tprivate static void exitImmediately() {\n\t\tpw.close();\n\t\tSystem.exit(0);\n\t}\n\n\tprivate static long readLong() throws IOException {\n\t\treturn Long.parseLong(readToken());\n\t}\n\n\tprivate static double readDouble() throws IOException {\n\t\treturn Double.parseDouble(readToken());\n\t}\n\n\tprivate static int readInt() throws IOException {\n\t\treturn Integer.parseInt(readToken());\n\t}\n\n\tprivate static String readLine() throws IOException  {\n\t\tString s = br.readLine();\n\t\tif(s == null) {\n\t\t\texitImmediately();\n\t\t}\n\t\tst = null;\n\t\treturn s;\n\t}\n\n\tprivate static String readToken() throws IOException  {\n\t\twhile(st == null || !st.hasMoreTokens())  {\n\t\t\tst = new StringTokenizer(readLine().trim());\n\t\t}\n\t\treturn st.nextToken();\n\t}\n}Gicen the following input:\nerasedream\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "YES\n"
    }
}