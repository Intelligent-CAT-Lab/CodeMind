{
    "0": {
        "prompt": "Consider the following code:\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.util.Arrays;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tstatic InputStream is;\n\tstatic PrintWriter out;\n\tstatic String INPUT = \"\";\n\t\n\tstatic void solve()\n\t{\n\t\tint S = ni();\n\t\t\n\t\tint mod = 1000000007;\n\t\tlong ans = 0;\n\t\touter:\n\t\tfor(int midl = 2;midl <= 8;midl++){\n\t\t\tlong mid = 0;\n\t\t\tfor(int midr = midl;midr <= 8;midr++){\n\t\t\t\tmid += (long)Math.pow(10, midr-1)*9*midr;\n\t\t\t\tif(mid >= S)continue outer;\n\t\t\t\t\n\t\t\t\tlong rem = S - mid;\n\t\t\t\tlong l = midl-1, r = midr+1;\n\t\t\t\tlong lnum = (long)Math.pow(10, l-1)*9;\n\t\t\t\tlong rnum = (long)Math.pow(10, r-1)*9;\n\t\t\t\t// l*a + r*b = rem\n\t\t\t\t// 1 <= a <= lnum, 1 <= b <= rnum\n\t\t\t\t\n//\t\t\t\tlong lans = 0;\n//\t\t\t\tfor(long a = 1;a <= lnum;a++){\n//\t\t\t\t\tif((rem-l*a)%r == 0 && (rem-l*a)/r <= rnum && (rem-l*a)/r >= 1){\n//\t\t\t\t\t\tlans++;\n//\t\t\t\t\t}\n//\t\t\t\t}\n\t\t\t\tlong res = count(l, r, rem, lnum, rnum);\n//\t\t\t\tif(res != lans){\n//\t\t\t\t\ttr(\"!!\", l, r, rem, lnum, rnum, res, lans);\n//\t\t\t\t}\n\t\t\t\tans += res;\n\t\t\t\tans %= mod;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int l = 1;l <= 10000;l++){\n\t\t\t// l,l+1\n\t\t\t// la+(l+1)b = S\n\t\t\tlong lnum = l > 10 ? Long.MAX_VALUE/2 : (long)Math.pow(10, l-1)*9;\n\t\t\tlong rnum = l+1 > 10 ? Long.MAX_VALUE/2 : (long)Math.pow(10, l+1-1)*9;\n\t\t\tans += count(l, l+1, S, lnum, rnum);\n\t\t\tans %= mod;\n\t\t}\n\t\tfor(int k = 1;S/k > 10000;k++){\n\t\t\tint l = S/k;\n\t\t\tlong lnum = l > 10 ? Long.MAX_VALUE/2 : (long)Math.pow(10, l-1)*9;\n\t\t\tlong rnum = l+1 > 10 ? Long.MAX_VALUE/2 : (long)Math.pow(10, l+1-1)*9;\n\t\t\tans += count(l, l+1, S, lnum, rnum);\n\t\t\tans %= mod;\n\t\t}\n\t\t\n//\t\ttr(ans);\n\t\tfor(int d = 1;d*d <= S;d++){\n\t\t\tif(S % d == 0){\n\t\t\t\t// d * (S/d)\n\t\t\t\t{\n\t\t\t\t\tlong lnum = d > 10 ? Long.MAX_VALUE/2 : (long)Math.pow(10, d-1)*9;\n\t\t\t\t\tif(S/d <= lnum){\n\t\t\t\t\t\tans += (pow(10, d-1, mod)*9 - S/d + mod + 1);\n\t\t\t\t\t\tans %= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(d*d < S){\n\t\t\t\t\tlong lnum = S/d > 10 ? Long.MAX_VALUE/2 : (long)Math.pow(10, S/d-1)*9;\n\t\t\t\t\tif(d <= lnum){\n\t\t\t\t\t\tans += (pow(10, S/d-1, mod)*9 - d + mod + 1);\n\t\t\t\t\t\tans %= mod;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tout.println(ans%mod);\n\t}\n\t\n\tpublic static long pow(long a, long n, long mod) {\n\t\t//\t\ta %= mod;\n\t\tlong ret = 1;\n\t\tint x = 63 - Long.numberOfLeadingZeros(n);\n\t\tfor (; x >= 0; x--) {\n\t\t\tret = ret * ret % mod;\n\t\t\tif (n << 63 - x < 0)\n\t\t\t\tret = ret * a % mod;\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\tstatic long check(long l, long r, long rem, long lnum, long rnum)\n\t{\n\t\tlong lans = 0;\n\t\tfor(long a = 1;a <= lnum;a++){\n\t\t\tif((rem-l*a)%r == 0 && (rem-l*a)/r <= rnum && (rem-l*a)/r >= 1){\n\t\t\t\tlans++;\n\t\t\t}\n\t\t}\n\t\treturn lans;\n\t}\n\n\t\n\tstatic long count(long l, long r, long rem, long lnum, long rnum)\n\t{\n//\t\tif((double)l*lnum + (double)r*rnum < rem)return 0;\n\t\t\n\t\t// l*a + r*b = rem\n\t\t// 1 <= a <= lnum, 1 <= b <= rnum\n\t\t\n\t\tlong a = 0, b = 0, da = 0, db = 0;\n\t\t\n\t\tif(r-l > 1){\n\t\t\tlong[] gpr = exgcd(l, r);\n\t\t\tif(rem % gpr[0] != 0)return 0;\n\t\t\ta = gpr[1]*(rem/gpr[0]); b = gpr[2]*(rem/gpr[0]);\n\t\t\tda = r / gpr[0]; db = l / gpr[0];\n\t\t}else{\n\t\t\t// l*-1+(l+1)*1=1\n\t\t\ta = -rem; b = rem;\n\t\t\tda = r; db = l;\n\t\t}\n\t\t{\n\t\t\tif(a <= 0){\n\t\t\t\tlong need = -a/(da)+1;\n\t\t\t\ta += need*(da);\n\t\t\t\tb -= need*(db);\n\t\t\t}\n\t\t\t{\n\t\t\t\tlong need = (a-1)/(da);\n\t\t\t\ta -= need*(da);\n\t\t\t\tb += need*(db);\n\t\t\t}\n//\t\t\ttr(a, b);\n\t\t\tif(b > rnum){\n\t\t\t\tlong need = (b-(rnum+1))/(db)+1;\n\t\t\t\tb -= need*(db);\n\t\t\t\ta += need*(da);\n\t\t\t}\n\t\t}\n\t\t\n\t\tlong mina = a;\n\t\t\n\t\t{\n\t\t\tif(b <= 0){\n\t\t\t\tlong need = -b/(db)+1;\n\t\t\t\tb += need*(db);\n\t\t\t\ta -= need*(da);\n\t\t\t}\n\t\t\t{\n\t\t\t\tlong need = (b-1)/(db);\n\t\t\t\tb -= need*(db);\n\t\t\t\ta += need*(da);\n\t\t\t}\n\t\t\tif(a > lnum){\n\t\t\t\tlong need = (a-(lnum+1))/(da)+1;\n\t\t\t\ta -= need*(da);\n\t\t\t\tb += need*(db);\n\t\t\t}\n\t\t}\n\t\tlong maxa = a;\n\t\tlong ret = mina > maxa ? 0 : (maxa-mina)/da+1;\n\t\t\n//\t\tif(r <= 9 && ret != check(l, r, rem, lnum, rnum)){\n//\t\t\ttr(\"error\", mina, maxa, l, r, rem, lnum, rnum, check(l, r, rem, lnum, rnum));\n//\t\t\tassert false;\n//\t\t}\n\t\treturn ret;\n\t}\n\t\n\tpublic static long[] exgcd(long a, long b)\n\t{\n\t\tif(a == 0 || b == 0)return null;\n\t\tint as = Long.signum(a);\n\t\tint bs = Long.signum(b);\n\t\ta = Math.abs(a); b = Math.abs(b);\n\t\tlong p = 1, q = 0, r = 0, s = 1;\n\t\twhile(b > 0){\n\t\t\tlong c = a / b;\n\t\t\tlong d;\n\t\t\td = a; a = b; b = d % b;\n\t\t\td = p; p = q; q = d - c * q;\n\t\t\td = r; r = s; s = d - c * s;\n\t\t}\n\t\treturn new long[]{a, p * as, r * bs};\n\t}\n\n\t\n\tpublic static void main(String[] args) throws Exception\n\t{\n\t\tlong S = System.currentTimeMillis();\n\t\tis = INPUT.isEmpty() ? System.in : new ByteArrayInputStream(INPUT.getBytes());\n\t\tout = new PrintWriter(System.out);\n\t\t\n\t\tsolve();\n\t\tout.flush();\n\t\tlong G = System.currentTimeMillis();\n\t\ttr(G-S+\"ms\");\n\t}\n\t\n\tprivate static boolean eof()\n\t{\n\t\tif(lenbuf == -1)return true;\n\t\tint lptr = ptrbuf;\n\t\twhile(lptr < lenbuf)if(!isSpaceChar(inbuf[lptr++]))return false;\n\t\t\n\t\ttry {\n\t\t\tis.mark(1000);\n\t\t\twhile(true){\n\t\t\t\tint b = is.read();\n\t\t\t\tif(b == -1){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn true;\n\t\t\t\t}else if(!isSpaceChar(b)){\n\t\t\t\t\tis.reset();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\tprivate static byte[] inbuf = new byte[1024];\n\tstatic int lenbuf = 0, ptrbuf = 0;\n\t\n\tprivate static int readByte()\n\t{\n\t\tif(lenbuf == -1)throw new InputMismatchException();\n\t\tif(ptrbuf >= lenbuf){\n\t\t\tptrbuf = 0;\n\t\t\ttry { lenbuf = is.read(inbuf); } catch (IOException e) { throw new InputMismatchException(); }\n\t\t\tif(lenbuf <= 0)return -1;\n\t\t}\n\t\treturn inbuf[ptrbuf++];\n\t}\n\t\n\tprivate static boolean isSpaceChar(int c) { return !(c >= 33 && c <= 126); }\n//\tprivate static boolean isSpaceChar(int c) { return !(c >= 32 && c <= 126); }\n\tprivate static int skip() { int b; while((b = readByte()) != -1 && isSpaceChar(b)); return b; }\n\t\n\tprivate static double nd() { return Double.parseDouble(ns()); }\n\tprivate static char nc() { return (char)skip(); }\n\t\n\tprivate static String ns()\n\t{\n\t\tint b = skip();\n\t\tStringBuilder sb = new StringBuilder();\n\t\twhile(!(isSpaceChar(b))){\n\t\t\tsb.appendCodePoint(b);\n\t\t\tb = readByte();\n\t\t}\n\t\treturn sb.toString();\n\t}\n\t\n\tprivate static char[] ns(int n)\n\t{\n\t\tchar[] buf = new char[n];\n\t\tint b = skip(), p = 0;\n\t\twhile(p < n && !(isSpaceChar(b))){\n\t\t\tbuf[p++] = (char)b;\n\t\t\tb = readByte();\n\t\t}\n\t\treturn n == p ? buf : Arrays.copyOf(buf, p);\n\t}\n\t\n\tprivate static char[][] nm(int n, int m)\n\t{\n\t\tchar[][] map = new char[n][];\n\t\tfor(int i = 0;i < n;i++)map[i] = ns(m);\n\t\treturn map;\n\t}\n\t\n\tprivate static int[] na(int n)\n\t{\n\t\tint[] a = new int[n];\n\t\tfor(int i = 0;i < n;i++)a[i] = ni();\n\t\treturn a;\n\t}\n\t\n\tprivate static int ni()\n\t{\n\t\tint num = 0, b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static long nl()\n\t{\n\t\tlong num = 0;\n\t\tint b;\n\t\tboolean minus = false;\n\t\twhile((b = readByte()) != -1 && !((b >= '0' && b <= '9') || b == '-'));\n\t\tif(b == '-'){\n\t\t\tminus = true;\n\t\t\tb = readByte();\n\t\t}\n\t\t\n\t\twhile(true){\n\t\t\tif(b >= '0' && b <= '9'){\n\t\t\t\tnum = num * 10 + (b - '0');\n\t\t\t}else{\n\t\t\t\treturn minus ? -num : num;\n\t\t\t}\n\t\t\tb = readByte();\n\t\t}\n\t}\n\t\n\tprivate static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }\n}\nGicen the following input:\n1\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "9\n"
    }
}