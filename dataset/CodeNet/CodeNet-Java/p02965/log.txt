some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=101 bci=0
101    			in = new BufferedReader(new InputStreamReader(System.in));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=102 bci=20
102    			out = new PrintWriter(System.out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=103 bci=33
103    			solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=56 bci=0
56    		int n = scanInt(), m = scanInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanInt(), line=81 bci=0
81    		return parseInt(scanString());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=89 bci=0
89    		while (tok == null || !tok.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=90 bci=15
90    			tok = new StringTokenizer(in.readLine());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=89 bci=0
89    		while (tok == null || !tok.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=92 bci=34
92    		return tok.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanInt(), line=81 bci=3
81    		return parseInt(scanString());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=56 bci=3
56    		int n = scanInt(), m = scanInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanInt(), line=81 bci=0
81    		return parseInt(scanString());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=89 bci=0
89    		while (tok == null || !tok.hasMoreTokens()) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanString(), line=92 bci=34
92    		return tok.nextToken();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.scanInt(), line=81 bci=3
81    		return parseInt(scanString());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=56 bci=7
56    		int n = scanInt(), m = scanInt();

main[1] Method arguments:
Local variables:
n = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=57 bci=8
57    		facts = new int[n + 3 * m / 2 + 1];

main[1] Method arguments:
Local variables:
n = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=22
58    		facts[0] = 1;

main[1] Method arguments:
Local variables:
n = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=28
59    		for (int i = 1; i < facts.length; i++) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=38
60    			facts[i] = mul(facts[i - 1], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=53
60    			facts[i] = mul(facts[i - 1], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=54
59    		for (int i = 1; i < facts.length; i++) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=38
60    			facts[i] = mul(facts[i - 1], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=53
60    			facts[i] = mul(facts[i - 1], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=54
59    		for (int i = 1; i < facts.length; i++) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=38
60    			facts[i] = mul(facts[i - 1], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 2
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 2
b = 3
Local variables:
res = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=53
60    			facts[i] = mul(facts[i - 1], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=54
59    		for (int i = 1; i < facts.length; i++) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=38
60    			facts[i] = mul(facts[i - 1], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 6
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 6
b = 4
Local variables:
res = 24
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=53
60    			facts[i] = mul(facts[i - 1], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=54
59    		for (int i = 1; i < facts.length; i++) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=38
60    			facts[i] = mul(facts[i - 1], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 5
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 24
b = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 24
b = 5
Local variables:
res = 120
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=53
60    			facts[i] = mul(facts[i - 1], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=54
59    		for (int i = 1; i < facts.length; i++) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=60
62    		factsInv = new int[facts.length];

main[1] Method arguments:
Local variables:
n = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=69
63    		factsInv[facts.length - 1] = inv(facts[facts.length - 1]);

main[1] Method arguments:
Local variables:
n = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.inv(), line=46 bci=0
46    		return pow(a, MOD - 2);

main[1] Method arguments:
a = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=32 bci=0
32    		if (e == 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=35 bci=6
35    		int r = a;

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=8
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 120
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 120
i = 28
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 120
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 120
b = 120
Local variables:
res = 14400
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 120
i = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 14400
i = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 14400
i = 28
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 14400
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 14400
b = 120
Local variables:
res = 1728000
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 14400
i = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 1728000
i = 28
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 1728000
i = 27
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1728000
b = 1728000
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1728000
b = 1728000
Local variables:
res = 235140177
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 1728000
i = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 235140177
i = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 235140177
i = 27
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 235140177
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 235140177
b = 120
Local variables:
res = 265979356
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 235140177
i = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 265979356
i = 27
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 265979356
i = 26
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 265979356
b = 265979356
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 265979356
b = 265979356
Local variables:
res = 536146769
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 265979356
i = 26
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 536146769
i = 26
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 536146769
i = 26
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 536146769
i = 25
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 536146769
b = 536146769
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 536146769
b = 536146769
Local variables:
res = 109115425
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 536146769
i = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 109115425
i = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 109115425
i = 25
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 109115425
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 109115425
b = 120
Local variables:
res = 116674411
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 109115425
i = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 116674411
i = 25
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 116674411
i = 24
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 116674411
b = 116674411
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 116674411
b = 116674411
Local variables:
res = 692789694
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 116674411
i = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 692789694
i = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 692789694
i = 24
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 692789694
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 692789694
b = 120
Local variables:
res = 280481981
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 692789694
i = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 280481981
i = 24
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 280481981
i = 23
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 280481981
b = 280481981
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 280481981
b = 280481981
Local variables:
res = 574039508
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 280481981
i = 23
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 574039508
i = 23
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 574039508
i = 23
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 574039508
i = 22
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 574039508
b = 574039508
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 574039508
b = 574039508
Local variables:
res = 394397423
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 574039508
i = 22
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 394397423
i = 22
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 394397423
i = 22
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 394397423
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 394397423
b = 120
Local variables:
res = 410206169
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 394397423
i = 22
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 410206169
i = 22
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 410206169
i = 21
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 410206169
b = 410206169
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 410206169
b = 410206169
Local variables:
res = 794193088
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 410206169
i = 21
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 794193088
i = 21
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 794193088
i = 21
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 794193088
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 794193088
b = 120
Local variables:
res = 469957025
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 794193088
i = 21
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 469957025
i = 21
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 469957025
i = 20
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 469957025
b = 469957025
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 469957025
b = 469957025
Local variables:
res = 801021211
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 469957025
i = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 801021211
i = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 801021211
i = 20
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 801021211
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 801021211
b = 120
Local variables:
res = 291087432
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 801021211
i = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 291087432
i = 20
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 291087432
i = 19
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 291087432
b = 291087432
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 291087432
b = 291087432
Local variables:
res = 988620335
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 291087432
i = 19
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 988620335
i = 19
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 988620335
i = 19
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 988620335
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 988620335
b = 120
Local variables:
res = 841606546
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 988620335
i = 19
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 841606546
i = 19
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 841606546
i = 18
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 841606546
b = 841606546
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 841606546
b = 841606546
Local variables:
res = 844608040
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 841606546
i = 18
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 844608040
i = 18
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 844608040
i = 18
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 844608040
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 844608040
b = 120
Local variables:
res = 530285147
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 844608040
i = 18
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 530285147
i = 18
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 530285147
i = 17
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 530285147
b = 530285147
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 530285147
b = 530285147
Local variables:
res = 440938968
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 530285147
i = 17
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 440938968
i = 17
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 440938968
i = 17
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 440938968
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 440938968
b = 120
Local variables:
res = 5725451
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 440938968
i = 17
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 5725451
i = 17
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 5725451
i = 16
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 5725451
b = 5725451
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 5725451
b = 5725451
Local variables:
res = 441089587
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 5725451
i = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 441089587
i = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 441089587
i = 16
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 441089587
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 441089587
b = 120
Local variables:
res = 23799731
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 441089587
i = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 23799731
i = 16
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 23799731
i = 15
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 23799731
b = 23799731
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 23799731
b = 23799731
Local variables:
res = 390160042
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 23799731
i = 15
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 390160042
i = 15
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 390160042
i = 15
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 390160042
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 390160042
b = 120
Local variables:
res = 899964802
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 390160042
i = 15
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 899964802
i = 15
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 899964802
i = 14
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 899964802
b = 899964802
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 899964802
b = 899964802
Local variables:
res = 534076080
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 899964802
i = 14
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 534076080
i = 14
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 534076080
i = 14
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 534076080
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 534076080
b = 120
Local variables:
res = 201491008
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 534076080
i = 14
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 201491008
i = 14
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 201491008
i = 13
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 201491008
b = 201491008
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 201491008
b = 201491008
Local variables:
res = 517504180
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 201491008
i = 13
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 517504180
i = 13
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 517504180
i = 13
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 517504180
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 517504180
b = 120
Local variables:
res = 209351714
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 517504180
i = 13
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 209351714
i = 13
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 209351714
i = 12
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 209351714
b = 209351714
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 209351714
b = 209351714
Local variables:
res = 226026430
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 209351714
i = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 226026430
i = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 226026430
i = 12
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 226026430
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 226026430
b = 120
Local variables:
res = 170574069
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 226026430
i = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 170574069
i = 12
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 170574069
i = 11
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 170574069
b = 170574069
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 170574069
b = 170574069
Local variables:
res = 303541309
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 170574069
i = 11
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 303541309
i = 11
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 303541309
i = 11
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 303541309
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 303541309
b = 120
Local variables:
res = 488160372
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 303541309
i = 11
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 488160372
i = 11
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 488160372
i = 10
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 488160372
b = 488160372
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 488160372
b = 488160372
Local variables:
res = 239075816
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 488160372
i = 10
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 239075816
i = 10
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 239075816
i = 10
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 239075816
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 239075816
b = 120
Local variables:
res = 738256036
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 239075816
i = 10
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 738256036
i = 10
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 738256036
i = 9
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 738256036
b = 738256036
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 738256036
b = 738256036
Local variables:
res = 757696677
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 738256036
i = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 757696677
i = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 757696677
i = 9
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 757696677
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 757696677
b = 120
Local variables:
res = 83365117
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 757696677
i = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 83365117
i = 9
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 83365117
i = 8
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 83365117
b = 83365117
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 83365117
b = 83365117
Local variables:
res = 485390044
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 83365117
i = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 485390044
i = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 485390044
i = 8
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 485390044
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 485390044
b = 120
Local variables:
res = 348632806
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 485390044
i = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 348632806
i = 8
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 348632806
i = 7
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 348632806
b = 348632806
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 348632806
b = 348632806
Local variables:
res = 536736542
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 348632806
i = 7
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 536736542
i = 7
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 536736542
i = 7
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 536736542
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 536736542
b = 120
Local variables:
res = 520746448
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 536736542
i = 7
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 520746448
i = 7
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 520746448
i = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 520746448
b = 520746448
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 520746448
b = 520746448
Local variables:
res = 267824481
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 520746448
i = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 267824481
i = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 267824481
i = 6
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 267824481
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 267824481
b = 120
Local variables:
res = 195118424
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 267824481
i = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 195118424
i = 6
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 195118424
i = 5
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 195118424
b = 195118424
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 195118424
b = 195118424
Local variables:
res = 523410708
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 195118424
i = 5
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 523410708
i = 5
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 523410708
i = 5
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 523410708
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 523410708
b = 120
Local variables:
res = 918135074
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 523410708
i = 5
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 918135074
i = 5
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 918135074
i = 4
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 918135074
b = 918135074
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 918135074
b = 918135074
Local variables:
res = 255487442
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 918135074
i = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 255487442
i = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 255487442
i = 4
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 255487442
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 255487442
b = 120
Local variables:
res = 711162450
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 255487442
i = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 711162450
i = 4
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 711162450
i = 3
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 711162450
b = 711162450
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 711162450
b = 711162450
Local variables:
res = 942376411
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 711162450
i = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 942376411
i = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 942376411
i = 3
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 942376411
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 942376411
b = 120
Local variables:
res = 283557431
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 942376411
i = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 283557431
i = 3
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 283557431
i = 2
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 283557431
b = 283557431
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 283557431
b = 283557431
Local variables:
res = 417113630
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 283557431
i = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 417113630
i = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 417113630
i = 2
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 417113630
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 417113630
b = 120
Local variables:
res = 141417950
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 417113630
i = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 141417950
i = 2
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 141417950
i = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 141417950
b = 141417950
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 141417950
b = 141417950
Local variables:
res = 581130723
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 141417950
i = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 581130723
i = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 581130723
i = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 581130723
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 581130723
b = 120
Local variables:
res = 856826403
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 581130723
i = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 856826403
i = 1
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=20
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 856826403
i = 0
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 856826403
b = 856826403
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 856826403
b = 856826403
Local variables:
res = 581130723
main[1] > 
Step completed: "thread=main", Main.pow(), line=37 bci=25
37    			r = mul(r, r);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 856826403
i = 0
main[1] > 
Step completed: "thread=main", Main.pow(), line=38 bci=26
38    			if ((e & (1 << i)) != 0) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 581130723
i = 0
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=34
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 581130723
i = 0
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 581130723
b = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 581130723
b = 120
Local variables:
res = 856826403
main[1] > 
Step completed: "thread=main", Main.pow(), line=39 bci=39
39    				r = mul(r, a);

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 581130723
i = 0
main[1] > 
Step completed: "thread=main", Main.pow(), line=36 bci=40
36    		for (int i = 30 - Integer.numberOfLeadingZeros(e); i >= 0; i--) {

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 856826403
i = 0
main[1] > 
Step completed: "thread=main", Main.pow(), line=42 bci=46
42    		return r;

main[1] Method arguments:
a = 120
e = 998244351
Local variables:
r = 856826403
main[1] > 
Step completed: "thread=main", Main.inv(), line=46 bci=6
46    		return pow(a, MOD - 2);

main[1] Method arguments:
a = 120
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=91
63    		factsInv[facts.length - 1] = inv(facts[facts.length - 1]);

main[1] Method arguments:
Local variables:
n = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=92
64    		for (int i = facts.length - 1; i > 0; i--) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=103
65    			factsInv[i - 1] = mul(factsInv[i], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 5
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 856826403
b = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 856826403
b = 5
Local variables:
res = 291154603
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=118
65    			factsInv[i - 1] = mul(factsInv[i], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=119
64    		for (int i = facts.length - 1; i > 0; i--) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=103
65    			factsInv[i - 1] = mul(factsInv[i], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 291154603
b = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 291154603
b = 4
Local variables:
res = 166374059
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=118
65    			factsInv[i - 1] = mul(factsInv[i], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=119
64    		for (int i = facts.length - 1; i > 0; i--) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=103
65    			factsInv[i - 1] = mul(factsInv[i], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 166374059
b = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 166374059
b = 3
Local variables:
res = 499122177
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=118
65    			factsInv[i - 1] = mul(factsInv[i], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=119
64    		for (int i = facts.length - 1; i > 0; i--) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=103
65    			factsInv[i - 1] = mul(factsInv[i], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 499122177
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 499122177
b = 2
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=118
65    			factsInv[i - 1] = mul(factsInv[i], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=119
64    		for (int i = facts.length - 1; i > 0; i--) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=103
65    			factsInv[i - 1] = mul(factsInv[i], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 1
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=65 bci=118
65    			factsInv[i - 1] = mul(factsInv[i], i);

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=119
64    		for (int i = facts.length - 1; i > 0; i--) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=67 bci=125
67    		int ans = 0;

main[1] Method arguments:
Local variables:
n = 2
m = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=127
68    		for (int nOdd = m % 2; nOdd <= m && nOdd <= n; nOdd += 2) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=141
69    			int cans = c(nOdd, n - nOdd);

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=0
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=15
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 2
b = 499122177
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 2
b = 499122177
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=23
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 0
y = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=148
69    			int cans = c(nOdd, n - nOdd);

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=70 bci=150
70    			int cans1 = c((3 * m - nOdd) / 2, n - 1);

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=0
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 24
b = 166374059
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 24
b = 166374059
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=15
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 4
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 4
b = 1
Local variables:
res = 4
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=23
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 3
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=70 bci=163
70    			int cans1 = c((3 * m - nOdd) / 2, n - 1);

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=71 bci=165
71    			int cans2 = mul(nOdd, c((m - nOdd) / 2, n - 1));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=0
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=15
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=23
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 1
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=71 bci=177
71    			int cans2 = mul(nOdd, c((m - nOdd) / 2, n - 1));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 0
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 0
b = 2
Local variables:
res = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=71 bci=180
71    			int cans2 = mul(nOdd, c((m - nOdd) / 2, n - 1));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=72 bci=182
72    			if (nOdd < m) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
cans2 = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=73 bci=187
73    				cans2 = add(cans2, mul(n - nOdd, c((m - nOdd) / 2 - 1, n - 1)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
cans2 = 0
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=0
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=15
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=23
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=73 bci=205
73    				cans2 = add(cans2, mul(n - nOdd, c((m - nOdd) / 2 - 1, n - 1)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
cans2 = 0
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=73 bci=208
73    				cans2 = add(cans2, mul(n - nOdd, c((m - nOdd) / 2 - 1, n - 1)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
cans2 = 0
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=73 bci=211
73    				cans2 = add(cans2, mul(n - nOdd, c((m - nOdd) / 2 - 1, n - 1)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
cans2 = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=75 bci=213
75    			ans = add(ans, mul(cans, sub(cans1, cans2)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
cans2 = 2
main[1] > 
Step completed: "thread=main", Main.sub(), line=22 bci=0
22    		int res = a - b;

main[1] Method arguments:
a = 4
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.sub(), line=23 bci=4
23    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 4
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=75 bci=223
75    			ans = add(ans, mul(cans, sub(cans1, cans2)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
cans2 = 2
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=75 bci=226
75    			ans = add(ans, mul(cans, sub(cans1, cans2)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
cans2 = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 0
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 0
b = 2
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=75 bci=229
75    			ans = add(ans, mul(cans, sub(cans1, cans2)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 0
nOdd = 0
cans = 1
cans1 = 4
cans2 = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=230
68    		for (int nOdd = m % 2; nOdd <= m && nOdd <= n; nOdd += 2) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=141
69    			int cans = c(nOdd, n - nOdd);

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=0
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 2
b = 499122177
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 2
b = 499122177
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=15
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=23
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 2
y = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=148
69    			int cans = c(nOdd, n - nOdd);

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=70 bci=150
70    			int cans1 = c((3 * m - nOdd) / 2, n - 1);

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
cans = 1
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=0
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 6
b = 499122177
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 6
b = 499122177
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=15
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 3
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 3
b = 1
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=23
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 2
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=70 bci=163
70    			int cans1 = c((3 * m - nOdd) / 2, n - 1);

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
cans = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=71 bci=165
71    			int cans2 = mul(nOdd, c((m - nOdd) / 2, n - 1));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
cans = 1
cans1 = 3
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=0
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=15
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.c(), line=52 bci=23
52    		return mul(mul(facts[x + y], factsInv[x]), factsInv[y]);

main[1] Method arguments:
x = 0
y = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=71 bci=177
71    			int cans2 = mul(nOdd, c((m - nOdd) / 2, n - 1));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
cans = 1
cans1 = 3
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=71 bci=180
71    			int cans2 = mul(nOdd, c((m - nOdd) / 2, n - 1));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
cans = 1
cans1 = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=72 bci=182
72    			if (nOdd < m) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
cans = 1
cans1 = 3
cans2 = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=75 bci=213
75    			ans = add(ans, mul(cans, sub(cans1, cans2)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
cans = 1
cans1 = 3
cans2 = 2
main[1] > 
Step completed: "thread=main", Main.sub(), line=22 bci=0
22    		int res = a - b;

main[1] Method arguments:
a = 3
b = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.sub(), line=23 bci=4
23    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 3
b = 2
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=75 bci=223
75    			ans = add(ans, mul(cans, sub(cans1, cans2)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
cans = 1
cans1 = 3
cans2 = 2
main[1] > 
Step completed: "thread=main", Main.mul(), line=27 bci=0
27    		int res = (int) ((long) a * b % MOD);

main[1] Method arguments:
a = 1
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.mul(), line=28 bci=11
28    		return res < 0 ? res + MOD : res;

main[1] Method arguments:
a = 1
b = 1
Local variables:
res = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=75 bci=226
75    			ans = add(ans, mul(cans, sub(cans1, cans2)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
cans = 1
cans1 = 3
cans2 = 2
main[1] > 
Step completed: "thread=main", Main.add(), line=17 bci=0
17    		int res = a + b;

main[1] Method arguments:
a = 2
b = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.add(), line=18 bci=4
18    		return res >= MOD ? res - MOD : res;

main[1] Method arguments:
a = 2
b = 1
Local variables:
res = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=75 bci=229
75    			ans = add(ans, mul(cans, sub(cans1, cans2)));

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 2
nOdd = 2
cans = 1
cans1 = 3
cans2 = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=230
68    		for (int nOdd = m % 2; nOdd <= m && nOdd <= n; nOdd += 2) {

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 3
nOdd = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=77 bci=236
77    		out.print(ans);

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=78 bci=243
78    	}

main[1] Method arguments:
Local variables:
n = 2
m = 2
ans = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=104 bci=36
104    			in.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=105 bci=42
105    			out.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=109 bci=48
109    		}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=110 bci=60
110    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
