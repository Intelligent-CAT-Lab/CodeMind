{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN",
        "predict": "mon\nEND-OF-OUTPUT"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.util.*;\nimport java.io.*;\nimport java.util.function.*;\n\nclass Main {\n    static In in = new In();\n    static Out out = new Out();\n    static long mod = 1000000007;\n    static long inf = 0xfffffffffffffffL;\n\n    void solve() {\n        long n = in.nextLong();\n        long a = in.nextLong();\n        long b = in.nextLong();\n        if (a > b) {\n            long t = b;\n            b = a;\n            a = t;\n        }\n        if ((b - a) % 2 == 1) {\n            long ans1 = a - 1 + (b - a + 1) / 2;\n            a = n - a + 1;\n            b = n - b + 1;\n            if (a > b) {\n                long t = b;\n                b = a;\n                a = t;\n            }\n            long ans2 = a - 1 + (b - a + 1) / 2;\n            out.println(Math.min(ans1, ans2));\n        } else {\n            out.println((b - a) / 2);\n        }\n    }\n\n    public static void main(String[]$) {\n        new Main().solve();\n        out.flush();\n    }\n}\n\nclass In {\n    private BufferedReader reader = new BufferedReader(new InputStreamReader(System.in), 0x10000);\n    private StringTokenizer tokenizer;\n\n    String next() {\n        try {\n            while (tokenizer == null || !tokenizer.hasMoreTokens()) {\n                tokenizer = new StringTokenizer(reader.readLine());\n            }\n        } catch (IOException ignored) {\n        }\n        return tokenizer.nextToken();\n    }\n\n    int nextInt() {\n        return Integer.parseInt(next());\n    }\n\n    long nextLong() {\n        return Long.parseLong(next());\n    }\n\n    char[][] nextCharArray(int n, int m) {\n        char[][] a = new char[n][m];\n        for (int i = 0; i < n; i++) {\n            a[i] = next().toCharArray();\n        }\n        return a;\n    }\n\n    int[] nextIntArray(int n) {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextInt();\n        }\n        return a;\n    }\n\n    int[] nextIntArray(int n, IntUnaryOperator op) {\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = op.applyAsInt(nextInt());\n        }\n        return a;\n    }\n\n    long[] nextLongArray(int n) {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = nextLong();\n        }\n        return a;\n    }\n\n    long[] nextLongArray(int n, LongUnaryOperator op) {\n        long[] a = new long[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = op.applyAsLong(nextLong());\n        }\n        return a;\n    }\n}\n\nclass Out {\n    private static PrintWriter out = new PrintWriter(System.out);\n\n    void println(Object... a) {\n        StringJoiner joiner = new StringJoiner(\" \");\n        for (Object obj : a) {\n            joiner.add(String.valueOf(obj));\n        }\n        out.println(joiner);\n    }\n\n    void flush() {\n        out.flush();\n    }\n}\nGicen the following input:\n5 2 4\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "1\n",
        "predict": "1\nEND-OF-OUTPUT"
    }
}