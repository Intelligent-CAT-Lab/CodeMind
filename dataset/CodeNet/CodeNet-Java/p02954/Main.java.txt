1 import java.io.*;
2 import java.math.*;
3 import java.util.*;
4 public class Main {
5  
6 	public static void main(String[] args) {
7 		Scanner input = new Scanner(System.in);
8 		String S = input.next();
9 		int N = S.length();
10 		int[] ans = new int[N];
11 		int curIndex = 0;
12 		while (curIndex < N) {
13 			int numLeft = 0;
14 			int numRight = 0;
15 			while (S.charAt(curIndex)=='R') {
16 				numRight++;
17 				curIndex++;
18 				if (curIndex==N) break;
19 			}
20 			//curIndex--; //After last ever L/R, curIndex is incremented which causes array 
21 			//out of bounds
22 			int R = curIndex-1;
23 			while (S.charAt(curIndex)=='L') {
24 				numLeft++;
25 				curIndex++;
26 				if (curIndex==N) break;
27 			}
28 			int left = numLeft;
29 			int right = numRight;
30 			if ((left+right)%2==0) { //Children cascade into adjacent numbers as close to 
31 				//each other as possible
32 				int sum = left+right;
33 				left=sum/2;
34 				right=sum/2;
35 			}else {
36 				int sum = left+right;
37 				if (right%2==1) { //The greater number is given to the R/L count with odd parity
38 					right=sum/2;
39 					left=sum-right;
40 				}else {
41 					left=sum/2;
42 					right=sum-left;
43 				}
44 			}
45 			ans[R]=left;
46 			ans[R+1]=right; //Children moving swaps squares 
47 			if (curIndex==N-1) break;
48 		}
49 		for (int i = 0; i < N; i++)
50 			System.out.print(ans[i]+" ");
51 	}
52 }