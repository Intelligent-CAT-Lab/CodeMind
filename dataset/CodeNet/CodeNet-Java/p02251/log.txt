some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=39 bci=0
39    	static int maxInt = Integer.MAX_VALUE, minInt = Integer.MIN_VALUE;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=40 bci=10
40    	static int mod = 1000000007;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=70 bci=15
70    	static InputStream in = System.in;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=71 bci=21
71    	static  byte[] buffer = new byte[1024];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=72 bci=29
72    	static int length = 0, p = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=0
33    		out = new PrintWriter(System.out);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=13
34    		new Main().solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=4 bci=0
4    class Main {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=20
34    		new Main().solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=7 bci=0
7    		int n = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=107 bci=0
107    	public static int nextInt () {return Math.toIntExact(nextLong());}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=114 bci=0
114    		if (!hasNext()) throw new NoSuchElementException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=91 bci=0
91    	public static boolean hasNext () {skip(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.skip(), line=89 bci=0
89    		while (hasNextByte() && !isPrintable(buffer[p])) p++;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=74 bci=0
74    		if (p < length) return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=76 bci=11
76    			p = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=77 bci=15
77    			try {length = in.read(buffer);}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=78 bci=27
78    			catch (Exception e) {e.printStackTrace();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=79 bci=35
79    			if (length == 0) return false;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=81 bci=43
81    		return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.skip(), line=89 bci=3
89    		while (hasNextByte() && !isPrintable(buffer[p])) p++;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.isPrintable(), line=87 bci=0
87    	public static boolean isPrintable (int n) {return 33<=n&&n<=126;}

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.skip(), line=89 bci=16
89    		while (hasNextByte() && !isPrintable(buffer[p])) p++;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.skip(), line=90 bci=30
90    	}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=91 bci=3
91    	public static boolean hasNext () {skip(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=74 bci=0
74    		if (p < length) return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=91 bci=6
91    	public static boolean hasNext () {skip(); return hasNextByte();}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=114 bci=3
114    		if (!hasNext()) throw new NoSuchElementException();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=115 bci=14
115    		boolean minus = false;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=116 bci=16
116    		int temp = readByte();

main[1] Method arguments:
Local variables:
minus = false
main[1] > 
Step completed: "thread=main", Main.readByte(), line=84 bci=0
84    		if (hasNextByte() == true) return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=74 bci=0
74    		if (p < length) return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=84 bci=3
84    		if (hasNextByte() == true) return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=116 bci=19
116    		int temp = readByte();

main[1] Method arguments:
Local variables:
minus = false
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=117 bci=20
117    		if (temp == '-') {

main[1] Method arguments:
Local variables:
minus = false
temp = 49
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=121 bci=32
121    		if (temp<'0' || '9'<temp) throw new NumberFormatException();

main[1] Method arguments:
Local variables:
minus = false
temp = 49
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=122 bci=52
122    		long n = 0;

main[1] Method arguments:
Local variables:
minus = false
temp = 49
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=123 bci=54
123    		while (isPrintable(temp)) {

main[1] Method arguments:
Local variables:
minus = false
temp = 49
n = 0
main[1] > 
Step completed: "thread=main", Main.isPrintable(), line=87 bci=0
87    	public static boolean isPrintable (int n) {return 33<=n&&n<=126;}

main[1] Method arguments:
n = 49
Local variables:
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=123 bci=58
123    		while (isPrintable(temp)) {

main[1] Method arguments:
Local variables:
minus = false
temp = 49
n = 0
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=124 bci=61
124    			if ('0'<=temp && temp<='9') {

main[1] Method arguments:
Local variables:
minus = false
temp = 49
n = 0
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=125 bci=73
125    				n *= 10;

main[1] Method arguments:
Local variables:
minus = false
temp = 49
n = 0
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=126 bci=79
126    				n += temp - '0';

main[1] Method arguments:
Local variables:
minus = false
temp = 49
n = 0
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=128 bci=87
128    			temp = readByte();

main[1] Method arguments:
Local variables:
minus = false
temp = 49
n = 1
main[1] > 
Step completed: "thread=main", Main.readByte(), line=84 bci=0
84    		if (hasNextByte() == true) return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=74 bci=0
74    		if (p < length) return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=84 bci=3
84    		if (hasNextByte() == true) return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=128 bci=90
128    			temp = readByte();

main[1] Method arguments:
Local variables:
minus = false
temp = 49
n = 1
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=123 bci=54
123    		while (isPrintable(temp)) {

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 1
main[1] > 
Step completed: "thread=main", Main.isPrintable(), line=87 bci=0
87    	public static boolean isPrintable (int n) {return 33<=n&&n<=126;}

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=123 bci=58
123    		while (isPrintable(temp)) {

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 1
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=124 bci=61
124    			if ('0'<=temp && temp<='9') {

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 1
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=125 bci=73
125    				n *= 10;

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 1
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=126 bci=79
126    				n += temp - '0';

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 10
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=128 bci=87
128    			temp = readByte();

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 10
main[1] > 
Step completed: "thread=main", Main.readByte(), line=84 bci=0
84    		if (hasNextByte() == true) return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=74 bci=0
74    		if (p < length) return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=84 bci=3
84    		if (hasNextByte() == true) return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=128 bci=90
128    			temp = readByte();

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 10
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=123 bci=54
123    		while (isPrintable(temp)) {

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 10
main[1] > 
Step completed: "thread=main", Main.isPrintable(), line=87 bci=0
87    	public static boolean isPrintable (int n) {return 33<=n&&n<=126;}

main[1] Method arguments:
n = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=123 bci=58
123    		while (isPrintable(temp)) {

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 10
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=124 bci=61
124    			if ('0'<=temp && temp<='9') {

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 10
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=125 bci=73
125    				n *= 10;

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 10
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=126 bci=79
126    				n += temp - '0';

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 100
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=128 bci=87
128    			temp = readByte();

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 100
main[1] > 
Step completed: "thread=main", Main.readByte(), line=84 bci=0
84    		if (hasNextByte() == true) return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=74 bci=0
74    		if (p < length) return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.readByte(), line=84 bci=3
84    		if (hasNextByte() == true) return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=128 bci=90
128    			temp = readByte();

main[1] Method arguments:
Local variables:
minus = false
temp = 48
n = 100
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=123 bci=54
123    		while (isPrintable(temp)) {

main[1] Method arguments:
Local variables:
minus = false
temp = 10
n = 100
main[1] > 
Step completed: "thread=main", Main.isPrintable(), line=87 bci=0
87    	public static boolean isPrintable (int n) {return 33<=n&&n<=126;}

main[1] Method arguments:
n = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=123 bci=58
123    		while (isPrintable(temp)) {

main[1] Method arguments:
Local variables:
minus = false
temp = 10
n = 100
main[1] > 
Step completed: "thread=main", Main.nextLong(), line=130 bci=94
130    		return minus? -n : n;

main[1] Method arguments:
Local variables:
minus = false
temp = 10
n = 100
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=107 bci=3
107    	public static int nextInt () {return Math.toIntExact(nextLong());}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=7 bci=3
7    		int n = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=8 bci=4
8    		int ans = 0;

main[1] Method arguments:
Local variables:
n = 100
main[1] > 
Step completed: "thread=main", Main.solve(), line=11 bci=6
11    		ans += n/25;

main[1] Method arguments:
Local variables:
n = 100
ans = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=12 bci=13
12    		n %= 25;

main[1] Method arguments:
Local variables:
n = 100
ans = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=15 bci=18
15    		ans += n/10;

main[1] Method arguments:
Local variables:
n = 0
ans = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=25
16    		n %= 10;

main[1] Method arguments:
Local variables:
n = 0
ans = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=19 bci=30
19    		ans += n/5;

main[1] Method arguments:
Local variables:
n = 0
ans = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=36
20    		n %= 5;

main[1] Method arguments:
Local variables:
n = 0
ans = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=23 bci=40
23    		ans += n;

main[1] Method arguments:
Local variables:
n = 0
ans = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=44
25    		out.println(ans);

main[1] Method arguments:
Local variables:
n = 0
ans = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=27 bci=51
27    	}

main[1] Method arguments:
Local variables:
n = 0
ans = 4
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=23
35    		out.flush();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=29
36    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
