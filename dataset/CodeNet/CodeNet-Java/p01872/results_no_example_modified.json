{
    "0": {
        "prompt": "Consider the following code:\nimport java.io.*;\nimport java.util.*;\npublic class Main\n{\n\tpublic void solve()\n\t{\n\t\tString s = next();\n\t\tif(s.charAt(s.length() - 1) == '?')\n\t\t{\n\t\t\tint sum = 0;\n\t\t\tfor(int i = 0;i < s.length() - 1;i++)\n\t\t\t{\n\t\t\t\tint n = 11 - i;\n\t\t\t\tint q = 0;\n\t\t\t\tint p = s.charAt(i) - '0';\n\t\t\t\tif(n <= 6 && n >= 1)\n\t\t\t\t{\n\t\t\t\t\tq = n + 1;\n\t\t\t\t}else //if(n >= 7 && n <= 11)\n\t\t\t\t{\n\t\t\t\t\tq = n - 5; \n\t\t\t\t}\n\t\t\t\tsum += q * p;\n\t\t\t}\n\t\t\tsum %= 11;\n\t\t\tif(sum <= 1)sum = 0;\n\t\t\telse sum = 11 - sum;\n\t\t\tout.println(sum);\n\t\t}else\n\t\t{\n\t\t\tint check = s.charAt(s.length() - 1) - '0';\n\t\t\tint cnt = 0;\n\t\t\tint ans = 0;\n\t\t\tfor(int j = 0;j <= 9;j++)\n\t\t\t{\n\t\t\t\tint sum = 0;\n\t\t\t\tfor(int i = 0;i < s.length() - 1;i++)\n\t\t\t\t{\n\t\t\t\t\tint n = 11 - i;\n\t\t\t\t\tint q = 0;\n\t\t\t\t\tint p = 0;\n\t\t\t\t\tif(s.charAt(i) == '?')\n\t\t\t\t\t{\n\t\t\t\t\t\tp = j;\n\t\t\t\t\t}else\n\t\t\t\t\t{\n\t\t\t\t\t\tp = s.charAt(i) - '0';\n\t\t\t\t\t}\n\n\t\t\t\t\tif(n <= 6 && n >= 1)\n\t\t\t\t\t{\n\t\t\t\t\t\tq = n + 1;\n\t\t\t\t\t}else //if(n >= 7 && n <= 11)\n\t\t\t\t\t{\n\t\t\t\t\t\tq = n - 5; \n\t\t\t\t\t}\n\t\t\t\t\tsum += q * p;\n\t\t\t\t}\n\t\t\t\tsum %= 11;\n\t\t\t\tif(sum <= 1)sum = 0;\n\t\t\t\telse sum = 11 - sum;\n\t\t\t\tif(check == sum)\n\t\t\t\t{\t\n\t\t\t\t\tcnt++;\n\t\t\t\t\tans = j;\n\t\t\t\t}\n\t\t\t}\n\t\tif(cnt == 1)\n\t\t{\n\t\t\tout.println(ans);\n\t\t}else\n\t\t{\n\t\t\tout.println(\"MULTIPLE\");\n\t\t}\n\t}\n\t}\n\tpublic static void main(String[] args)\n\t{\n\t\tout.flush();\n\t\tnew Main().solve();\n\t\tout.close();\n\t}\n\t/*Input*/\n\tprivate static final InputStream in = System.in;\n\tprivate static final PrintWriter out = new PrintWriter(System.out);\n\tprivate final byte[] buffer = new byte[2048];\n\tprivate int p = 0;\n\tprivate int buflen = 0;\n \n\tprivate boolean hasNextByte()\n\t{\n\t\tif(p < buflen)return true;\n\t\tp = 0;\n\t\ttry\n\t\t{\n\t\t\tbuflen = in.read(buffer);\n\t\t}catch(IOException e)\n\t\t{\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif(buflen <= 0)return false;\n\t\treturn true;\n\t}\n\tpublic boolean hasNext()\n\t{\n\t\twhile(hasNextByte() && !isPrint(buffer[p]))\n\t\t{\n\t\t\tp++;\n\t\t}\n\t\treturn hasNextByte();\n\t}\n \n\tprivate boolean isPrint(int ch)\n\t{\n\t\tif(ch >= '!' && ch <= '~')return true;\n\t\treturn false;\n\t}\n \n\tprivate int nextByte()\n\t{\n\t\tif(!hasNextByte())return -1;\n\t\treturn buffer[p++];\n\t}\n \n\tpublic String next()\n\t{\n\t\tif(!hasNext()) throw new NoSuchElementException();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tint b = -1;\n\t\twhile(isPrint((b = nextByte())))\n\t\t{\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n \n\tpublic int nextInt()\n\t{\n\t\treturn Integer.parseInt(next());\n\t}\n \n\tpublic long nextLong()\n\t{\n\t\treturn Long.parseLong(next());\n\t}\n \n\tpublic double nextDouble()\n\t{\n\t\treturn Double.parseDouble(next());\n\t}\n}\nWhat would be the output of the code execution given the following input:\n?12345678901\n \nPrint the answer and end your response with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "4\n",
        "predict": "MULTIPLE\nEND-OF-OUTPUT"
    }
}