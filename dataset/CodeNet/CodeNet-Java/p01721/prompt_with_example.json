{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintWriter;\nimport java.text.DecimalFormat;\nimport java.util.Comparator;\nimport java.util.PriorityQueue;\n\npublic class Main {\n\tstatic boolean debug = true;\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tUserScanner scan = new UserScanner(System.in);\n\t\tPrintWriter pwriter = new PrintWriter(System.out);\n\n\t\tint w = scan.nextInt();\n\t\tint h = scan.nextInt();\n\t\tint v = scan.nextInt();\n\t\tint t = scan.nextInt();\n\t\tint x = scan.nextInt();\n\t\tint y = scan.nextInt();\n\t\tint p = scan.nextInt();\n\t\tint q = scan.nextInt();\n\t\tWave wave = new Wave(w, h, v, t, x, y, p, q);\n\t\tpwriter.println(wave.attack());\n\n\t\tpwriter.flush();\n\n\t\tscan.close();\n\t\tSystem.exit(0);\n\t}\n}\n\nclass Wave {\n\tint w, h, v, t, x, y, p, q;\n\n\tpublic Wave(int w, int h, int v, int t, int x, int y, int p, int q) {\n\t\tthis.w = w;\n\t\tthis.h = h;\n\t\tthis.v = v;\n\t\tthis.t = t;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.p = p;\n\t\tthis.q = q;\n\t}\n\n\tpublic long attack() {\n\t\tint maxW, maxH;\n\n\t\tdouble maxDist = v * t;\n\t\tmaxDist = maxDist * maxDist;\n\n\t\tfor (maxW = 0; getPowDistance(maxW, 0) <= maxDist; maxW++)\n\t\t\t;\n\t\tif (maxW == 0)\n\t\t\treturn 0;\n\n\t\tlong ans = maxW;\n\t\tint w = maxW - 1;\n\t\tfor (int h = 1; w >= 0; h++)\n\t\t\tif (getPowDistance(w, h) <= maxDist)\n\t\t\t\tans += (w + 1);\n\t\t\telse\n\t\t\t\tfor (w = w - 1; w >= 0; w--)\n\t\t\t\t\tif (getPowDistance(w, h) <= maxDist) {\n\t\t\t\t\t\tans += (w + 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\tw = maxW - 1;\n\t\tfor (int h = -1; w >= 0; h--)\n\t\t\tif (getPowDistance(w, h) <= maxDist)\n\t\t\t\tans += (w + 1);\n\t\t\telse\n\t\t\t\tfor (w = w - 1; w >= 0; w--)\n\t\t\t\t\tif (getPowDistance(w, h) <= maxDist) {\n\t\t\t\t\t\tans += (w + 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\tw = -maxW;\n\t\tfor (int h = 0; w < 0; h++)\n\t\t\tif (getPowDistance(w, h) <= maxDist)\n\t\t\t\tans -= w;\n\t\t\telse\n\t\t\t\tfor (w = w + 1; w < 0; w++)\n\t\t\t\t\tif (getPowDistance(w, h) <= maxDist) {\n\t\t\t\t\t\tans -= w;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\n\t\tw = -maxW;\n\t\tfor (int h = -1; w < 0; h--)\n\t\t\tif (getPowDistance(w, h) <= maxDist)\n\t\t\t\tans -= w;\n\t\t\telse\n\t\t\t\tfor (w = w + 1; w < 0; w++)\n\t\t\t\t\tif (getPowDistance(w, h) <= maxDist) {\n\t\t\t\t\t\tans -= w;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\treturn ans;\n\t}\n\n\tprivate double getPowDistance(int mx, int my) {\n\t\t// get reflected wave distance as powered\n\t\t//\n\t\t// mx=0,my=0 direct\n\t\t// mx=1,my=0 reflect right wall at once\n\t\t// ... equal to the distance between (2w-p,q) and (x,y)\n\t\t// mx=2,my=0 reflect right wall at once and left wall at once\n\t\t// ... equal to the distance between (2w+p,q) and (x,y)\n\t\t// mx=3,my=0 reflect right,left,right\n\t\t// ... equal to the distance between (4w-p,q) and (x,y)\n\t\t// mx=k,my=0 if k is even (k*w + p, q) else (k*w + w - p, q)\n\t\t// ... it can apply to negative k\n\t\t//\n\t\t// mx=0,my=l if l is even (p, l*h + q) else (p, l*h + h - q)\n\t\t// ... mx=k,my=l if k and l are even (k*w + p, l*h + q) ...\n\t\tdouble wp = 0, wq = 0;\n\n\t\tif (mx % 2 == 0)\n\t\t\twp = mx * w + p;\n\t\telse\n\t\t\twp = mx * w + w - p;\n\n\t\tif (my % 2 == 0)\n\t\t\twq = my * h + q;\n\t\telse\n\t\t\twq = my * h + h - q;\n\n\t\twp -= x;\n\t\twq -= y;\n\t\treturn wp * wp + wq * wq;\n\t}\n\n}\n\nclass UserScanner {\n\tprivate InputStream in;\n\tprivate final byte[] buffer = new byte[1024];\n\tprivate int ptr = 0;\n\tprivate int buflen = 0;\n\n\tpublic UserScanner(InputStream inStream) {\n\t\tin = inStream;\n\t}\n\n\tprivate void read() {\n\t\tptr = 0;\n\t\ttry {\n\t\t\tbuflen = in.read(buffer);\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(9);\n\t\t}\n\t}\n\n\tprivate byte getByte() {\n\t\tif (ptr >= buflen)\n\t\t\tread();\n\t\tif (buflen < 0 || isCtlSpace(buffer[ptr])) {\n\t\t\treturn -1;\n\t\t} else\n\t\t\treturn buffer[ptr++];\n\t}\n\n\tprivate void skipCtlSpace() {\n\t\tfor (; ptr < buflen; ptr++)\n\t\t\tif (!isCtlSpace(buffer[ptr]))\n\t\t\t\treturn;\n\t\tread();\n\t\tskipCtlSpace();\n\t}\n\n\tprivate boolean isCtlSpace(byte b) {\n\t\tif (b <= ' ' || b > '~')\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n\n\tpublic void close() {\n\t\ttry {\n\t\t\tin.close();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(9);\n\t\t}\n\t}\n\n\tpublic String next() {\n\t\tskipCtlSpace();\n\t\tStringBuilder sb = new StringBuilder();\n\t\tbyte b;\n\t\twhile ((b = getByte()) != -1) {\n\t\t\tsb.appendCodePoint(b);\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tpublic int nextInt() {\n\t\tskipCtlSpace();\n\t\tint n = 0;\n\t\tboolean minus = false;\n\t\tbyte b;\n\t\twhile ((b = getByte()) != -1) {\n\t\t\tif (b == '-')\n\t\t\t\tminus = true;\n\t\t\telse {\n\t\t\t\tn *= 10;\n\t\t\t\tn += (b - '0');\n\t\t\t}\n\t\t}\n\t\tif (minus)\n\t\t\treturn n * -1;\n\t\telse\n\t\t\treturn n;\n\t}\n}Gicen the following input:\n10 10 1 10 3 3 7 7\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "1\n"
    }
}