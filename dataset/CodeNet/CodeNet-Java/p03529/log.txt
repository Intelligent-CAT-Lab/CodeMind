some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=23 bci=0
23            Scanner scan = new Scanner(System.in);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=24 bci=11
24            int n=scan.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
main[1] > 
Step completed: "thread=main", Main.main(), line=25 bci=16
25            int k=scan.nextInt();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=26 bci=21
26            int x=0;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=27 bci=24
27            int l=f(n,k);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
main[1] > 
Step completed: "thread=main", Main.f(), line=15 bci=0
15            int t=0;

main[1] Method arguments:
n = 2
k = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.f(), line=16 bci=2
16            for(int i=n;i>=1;--i){

main[1] Method arguments:
n = 2
k = 2
Local variables:
t = 0
main[1] > 
Step completed: "thread=main", Main.f(), line=17 bci=9
17                t+=(t+i)/i;

main[1] Method arguments:
n = 2
k = 2
Local variables:
t = 0
i = 2
main[1] > 
Step completed: "thread=main", Main.f(), line=16 bci=17
16            for(int i=n;i>=1;--i){

main[1] Method arguments:
n = 2
k = 2
Local variables:
t = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.f(), line=17 bci=9
17                t+=(t+i)/i;

main[1] Method arguments:
n = 2
k = 2
Local variables:
t = 1
i = 1
main[1] > 
Step completed: "thread=main", Main.f(), line=16 bci=17
16            for(int i=n;i>=1;--i){

main[1] Method arguments:
n = 2
k = 2
Local variables:
t = 3
i = 1
main[1] > 
Step completed: "thread=main", Main.f(), line=19 bci=23
19            return t;

main[1] Method arguments:
n = 2
k = 2
Local variables:
t = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=27 bci=29
27            int l=f(n,k);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=28 bci=31
28            long[][]dp=new long[n+1][l+1];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=29 bci=44
29            for(int i=1;i<=n;++i){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
main[1] > 
Step completed: "thread=main", Main.main(), line=30 bci=53
30                long m=powerMod(k+1,i-1);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=5 bci=0
5    	long prod = 1;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=3
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 63
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 63
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 63
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 62
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 62
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 62
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 61
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 61
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 61
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 60
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 60
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 60
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 59
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 59
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 59
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 58
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 58
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 58
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 57
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 57
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 57
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 56
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 56
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 56
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 55
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 55
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 55
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 54
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 54
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 54
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 53
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 53
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 53
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 52
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 52
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 52
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 51
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 51
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 51
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 50
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 50
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 50
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 49
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 49
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 49
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 48
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 48
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 48
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 47
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 47
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 47
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 46
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 46
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 46
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 45
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 45
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 45
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 44
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 44
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 44
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 43
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 43
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 43
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 42
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 42
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 42
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 41
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 41
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 41
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 40
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 40
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 40
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 39
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 39
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 39
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 38
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 38
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 38
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 37
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 37
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 37
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 36
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 36
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 36
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 35
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 35
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 35
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 34
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 34
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 34
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 33
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 33
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 33
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 32
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 32
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 32
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 31
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 31
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 31
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 30
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 30
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 30
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 29
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 29
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 29
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 28
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 28
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 28
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 27
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 27
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 27
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 26
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 26
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 26
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 25
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 25
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 25
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 24
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 24
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 24
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 23
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 23
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 23
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 22
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 22
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 22
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 21
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 21
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 21
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 20
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 20
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 20
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 19
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 19
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 19
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 18
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 18
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 18
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 17
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 17
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 17
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 16
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 16
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 16
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 15
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 15
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 15
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 14
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 14
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 14
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 13
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 13
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 13
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 12
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 12
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 12
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 11
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 11
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 11
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 10
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 10
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 10
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 9
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 9
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 9
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 8
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 8
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 8
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 7
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 7
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 7
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 6
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 6
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 6
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 5
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 5
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 5
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 4
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 4
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 4
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 1
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 1
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 1
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 0
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 0
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
i = 0
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=12 bci=50
12    	return prod;

main[1] Method arguments:
x = 3
exponent = 0
Local variables:
prod = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=30 bci=65
30                long m=powerMod(k+1,i-1);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=67
31                for(int u=0;u<=l;++u){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=32 bci=77
32                    long t=0;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=80
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=169
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=40 bci=185
40                        t=(t+dp[i-1][u]+(j+u)*m)%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=214
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 2
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=41 bci=220
41                    dp[i][u]=t;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
t = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=230
31                for(int u=0;u<=l;++u){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=32 bci=77
32                    long t=0;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=80
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=169
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=40 bci=185
40                        t=(t+dp[i-1][u]+(j+u)*m)%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=214
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 3
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=41 bci=220
41                    dp[i][u]=t;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
t = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=230
31                for(int u=0;u<=l;++u){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=32 bci=77
32                    long t=0;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=80
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=169
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=40 bci=185
40                        t=(t+dp[i-1][u]+(j+u)*m)%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
t = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=214
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
t = 4
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=41 bci=220
41                    dp[i][u]=t;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
t = 4
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=230
31                for(int u=0;u<=l;++u){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=32 bci=77
32                    long t=0;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=80
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=169
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=40 bci=185
40                        t=(t+dp[i-1][u]+(j+u)*m)%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
t = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=214
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
t = 5
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=41 bci=220
41                    dp[i][u]=t;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
t = 5
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=230
31                for(int u=0;u<=l;++u){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
m = 1
u = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=29 bci=236
29            for(int i=1;i<=n;++i){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=30 bci=53
30                long m=powerMod(k+1,i-1);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=5 bci=0
5    	long prod = 1;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=3
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 63
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 63
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 63
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 62
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 62
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 62
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 61
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 61
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 61
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 60
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 60
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 60
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 59
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 59
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 59
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 58
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 58
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 58
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 57
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 57
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 57
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 56
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 56
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 56
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 55
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 55
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 55
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 54
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 54
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 54
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 53
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 53
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 53
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 52
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 52
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 52
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 51
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 51
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 51
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 50
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 50
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 50
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 49
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 49
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 49
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 48
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 48
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 48
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 47
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 47
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 47
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 46
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 46
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 46
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 45
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 45
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 45
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 44
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 44
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 44
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 43
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 43
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 43
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 42
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 42
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 42
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 41
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 41
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 41
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 40
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 40
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 40
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 39
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 39
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 39
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 38
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 38
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 38
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 37
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 37
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 37
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 36
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 36
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 36
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 35
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 35
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 35
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 34
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 34
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 34
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 33
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 33
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 33
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 32
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 32
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 32
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 31
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 31
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 31
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 30
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 30
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 30
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 29
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 29
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 29
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 28
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 28
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 28
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 27
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 27
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 27
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 26
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 26
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 26
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 25
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 25
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 25
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 24
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 24
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 24
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 23
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 23
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 23
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 22
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 22
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 22
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 21
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 21
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 21
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 20
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 20
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 20
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 19
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 19
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 19
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 18
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 18
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 18
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 17
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 17
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 17
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 16
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 16
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 16
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 15
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 15
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 15
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 14
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 14
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 14
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 13
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 13
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 13
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 12
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 12
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 12
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 11
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 11
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 11
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 10
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 10
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 10
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 9
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 9
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 9
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 8
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 8
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 8
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 7
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 7
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 7
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 6
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 6
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 6
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 5
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 5
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 5
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 4
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 4
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 4
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 3
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 2
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 1
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 1
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 1
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=7 bci=12
7    	    prod = (prod * prod) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 0
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=8 bci=23
8    	    if ((exponent & 1L << i) != 0) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 0
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=9 bci=34
9    		prod = (prod * x) % MOD;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 1
i = 0
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=6 bci=44
6    	for (int i = 63; i >= 0; --i) {

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 3
i = 0
main[1] > 
Step completed: "thread=main", Main.powerMod(), line=12 bci=50
12    	return prod;

main[1] Method arguments:
x = 3
exponent = 1
Local variables:
prod = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=30 bci=65
30                long m=powerMod(k+1,i-1);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=67
31                for(int u=0;u<=l;++u){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=32 bci=77
32                    long t=0;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=80
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 2
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 2
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 4
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 7
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 7
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 7
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 7
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 10
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 10
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 10
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=169
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 10
main[1] > 
Step completed: "thread=main", Main.main(), line=41 bci=220
41                    dp[i][u]=t;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
t = 10
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=230
31                for(int u=0;u<=l;++u){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=32 bci=77
32                    long t=0;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=80
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 3
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 6
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 6
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 6
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 6
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 10
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 10
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 10
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 10
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 10
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 14
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 17
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 17
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=169
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 17
main[1] > 
Step completed: "thread=main", Main.main(), line=41 bci=220
41                    dp[i][u]=t;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
t = 17
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=230
31                for(int u=0;u<=l;++u){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=32 bci=77
32                    long t=0;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=80
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 5
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 5
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 5
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 5
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=35 bci=110
35                            t+=dp[i-1][u+(u+j)/i];

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 5
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=36 bci=134
36                            t+=((u+j)%i)*m%MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 10
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=37 bci=155
37                            t%=MOD;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 13
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 13
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 13
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 13
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=169
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 13
main[1] > 
Step completed: "thread=main", Main.main(), line=41 bci=220
41                    dp[i][u]=t;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
t = 13
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=230
31                for(int u=0;u<=l;++u){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=32 bci=77
32                    long t=0;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=80
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
t = 0
j = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
t = 0
j = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=34 bci=94
34                        if(u+(u+j)/i<=l){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
t = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=33 bci=163
33                    for(int j=0;j<=Math.min(i,k);++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
t = 0
j = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=39 bci=169
39                    for(int j=Math.min(i,k)+1;j<=k;++j)

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=41 bci=220
41                    dp[i][u]=t;

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
t = 0
main[1] > 
Step completed: "thread=main", Main.main(), line=31 bci=230
31                for(int u=0;u<=l;++u){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
m = 3
u = 3
main[1] > 
Step completed: "thread=main", Main.main(), line=29 bci=236
29            for(int i=1;i<=n;++i){

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
i = 2
main[1] > 
Step completed: "thread=main", Main.main(), line=44 bci=242
44            System.out.println(dp[n][0]);

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
main[1] > 
Step completed: "thread=main", Main.main(), line=45 bci=254
45        }

main[1] Method arguments:
args = instance of java.lang.String[0] (id=442)
Local variables:
scan = instance of java.util.Scanner(id=582)
n = 2
k = 2
x = 0
l = 3
dp = instance of long[][3] (id=592)
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
