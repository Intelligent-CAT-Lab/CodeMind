{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tstatic int N, K, M;\n\n\tpublic static void main(String[] args) {\n\t\tN = sc.nextInt();\n\t\tK = sc.nextInt();\n\t\tM = sc.nextInt();\n\t\tint MASK = (1 << K) - 1;\n\t\tif (N < K) {\n\t\t\tSystem.out.println(naive());\n\t\t\treturn;\n\t\t}\n\t\tlong[][][] dp = new long[2][K + 1][1 << K];\n\t\tfor (int i = 0; i < (1 << K); i++) {\n\t\t\tint c = 0;\n\t\t\tboolean ok = true;\n\t\t\tfor (int j = 0; j < K; j++) {\n\t\t\t\tif ((i & (1 << (K - 1 - j))) == 0) {\n\t\t\t\t\tc--;\n\t\t\t\t} else {\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t\tif (c < 0) {\n\t\t\t\t\tok = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!ok) continue;\n\t\t\tint u = Integer.bitCount(i);\n\t\t\tint l = K - u;\n\t\t\tif (u < l) continue;\n\t\t\tdp[0][u - l][i] = 1;\n\t\t}\n\t\tint t = 1;\n\t\tfor (int i = K; i < 2 * N; i++, t = 1 - t) {\n\t\t\tfor (long[] a : dp[t]) {\n\t\t\t\tArrays.fill(a, 0);\n\t\t\t}\n\t\t\tfor (int j = i % 2; j <= K; j += 2) {\n\t\t\t\tint l = (i - j) / 2;\n\t\t\t\tint u = l + j;\n\t\t\t\tfor (int k = 0; k < (1 << K); k++) {\n\t\t\t\t\tint uc = Integer.bitCount(k);\n\t\t\t\t\tif (0 < j && j <= uc && (l == 0 || k != MASK)) { // put lower row\n\t\t\t\t\t\tdp[t][j - 1][(k << 1) & MASK] += dp[1 - t][j][k];\n\t\t\t\t\t\tdp[t][j - 1][(k << 1) & MASK] %= M;\n\t\t\t\t\t}\n\t\t\t\t\tif (u < N && j < K && k != 0) { // put upper row\n\t\t\t\t\t\tdp[t][j + 1][((k << 1) + 1) & MASK] += dp[1 - t][j][k];\n\t\t\t\t\t\tdp[t][j + 1][((k << 1) + 1) & MASK] %= M;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n//\t\t\tSystem.err.println(Arrays.deepToString(dp[t]));\n\t\t}\n\t\tlong ans = 0;\n\t\tfor (long v : dp[1 - t][0]) {\n\t\t\tans += v;\n\t\t}\n\t\tSystem.out.println(ans % M);\n\t}\n\n\tstatic long naive() {\n\t\tArrayList<Integer> u = new ArrayList<>();\n\t\tArrayList<Integer> l = new ArrayList<>();\n\t\tu.add(0);\n\t\treturn rec(u, l, 1);\n\t}\n\n\tstatic long rec(ArrayList<Integer> u, ArrayList<Integer> l, int cur) {\n\t\tif (cur == 2 * N) return 1;\n\t\tlong ret = 0;\n\t\tif (u.size() < N) {\n\t\t\tu.add(cur);\n\t\t\tret += rec(u, l, cur + 1);\n\t\t\tu.remove(u.size() - 1);\n\t\t}\n\t\tif (l.size() < u.size() && cur <= u.get(l.size()) + K) {\n\t\t\tl.add(cur);\n\t\t\tret += rec(u, l, cur + 1);\n\t\t\tl.remove(l.size() - 1);\n\t\t}\n\t\treturn ret % M;\n\t}\n\n}\n\nGicen the following input:\n3 2 7\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "1\n"
    }
}