some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=46 bci=0
46    	private static final InputStream in = System.in;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<clinit>(), line=47 bci=6
47    	private static final PrintWriter out = new PrintWriter(System.out);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=40 bci=0
40    		out.flush();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=41 bci=6
41    		new Main().solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=7 bci=0
7    public class Main {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=48 bci=4
48    	private final byte[] buffer = new byte[2048];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=49 bci=13
49    	private int p = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=50 bci=18
50    	private int buflen = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=41 bci=13
41    		new Main().solve();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=11 bci=0
11    		N = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=97 bci=0
97    		return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=86 bci=0
86    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=67 bci=0
67    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=53 bci=0
53    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=55 bci=13
55    		p = 0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=57 bci=18
57    			buflen = in.read(buffer);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=60 bci=32
60    		}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=61 bci=40
61    		if (buflen <= 0)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=63 bci=49
63    		return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=67 bci=4
67    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=74 bci=0
74    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=75 bci=12
75    			return true;

main[1] Method arguments:
ch = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=67 bci=20
67    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=70 bci=36
70    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=53 bci=0
53    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=54 bci=11
54    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=70 bci=40
70    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=86 bci=4
86    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=88 bci=15
88    		StringBuilder sb = new StringBuilder();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=89 bci=23
89    		int b = -1;

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=25
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = -1
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=80 bci=0
80    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=53 bci=0
53    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=54 bci=11
54    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=80 bci=4
80    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=82 bci=9
82    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=30
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = -1
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=74 bci=0
74    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=75 bci=12
75    			return true;

main[1] Method arguments:
ch = 50
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=35
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 50
main[1] > 
Step completed: "thread=main", Main.next(), line=91 bci=38
91    			sb.appendCodePoint(b);

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 50
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=25
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 50
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=80 bci=0
80    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=53 bci=0
53    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=54 bci=11
54    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=80 bci=4
80    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=82 bci=9
82    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=30
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 50
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=74 bci=0
74    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=76 bci=14
76    		return false;

main[1] Method arguments:
ch = 32
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=35
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 32
main[1] > 
Step completed: "thread=main", Main.next(), line=93 bci=47
93    		return sb.toString();

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=445)
b = 32
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=97 bci=4
97    		return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=11 bci=5
11    		N = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=12 bci=8
12    		M = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=97 bci=0
97    		return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=86 bci=0
86    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=67 bci=0
67    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=53 bci=0
53    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=54 bci=11
54    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=67 bci=4
67    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=74 bci=0
74    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=75 bci=12
75    			return true;

main[1] Method arguments:
ch = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=67 bci=20
67    		while (hasNextByte() && !isPrint(buffer[p])) {

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=70 bci=36
70    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=53 bci=0
53    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=54 bci=11
54    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNext(), line=70 bci=40
70    		return hasNextByte();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=86 bci=4
86    		if (!hasNext())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=88 bci=15
88    		StringBuilder sb = new StringBuilder();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=89 bci=23
89    		int b = -1;

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=25
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = -1
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=80 bci=0
80    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=53 bci=0
53    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=54 bci=11
54    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=80 bci=4
80    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=82 bci=9
82    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=30
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = -1
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=74 bci=0
74    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=75 bci=12
75    			return true;

main[1] Method arguments:
ch = 48
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=35
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 48
main[1] > 
Step completed: "thread=main", Main.next(), line=91 bci=38
91    			sb.appendCodePoint(b);

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 48
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=25
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 48
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=80 bci=0
80    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=53 bci=0
53    		if (p < buflen)

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.hasNextByte(), line=54 bci=11
54    			return true;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=80 bci=4
80    		if (!hasNextByte())

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.nextByte(), line=82 bci=9
82    		return buffer[p++];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=30
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 48
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=74 bci=0
74    		if (ch >= '!' && ch <= '~')

main[1] Method arguments:
ch = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.isPrint(), line=76 bci=14
76    		return false;

main[1] Method arguments:
ch = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.next(), line=90 bci=35
90    		while (isPrint((b = nextByte()))) {

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 10
main[1] > 
Step completed: "thread=main", Main.next(), line=93 bci=47
93    		return sb.toString();

main[1] Method arguments:
Local variables:
sb = instance of java.lang.StringBuilder(id=446)
b = 10
main[1] > 
Step completed: "thread=main", Main.nextInt(), line=97 bci=4
97    		return Integer.parseInt(next());

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=12 bci=13
12    		M = nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=14 bci=16
14    		a = new int[N];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=16 bci=26
16    		for(int i = 0;i < M;i++){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=19 bci=52
19    		boolean[] b = new boolean[N * 2 - 1];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=20 bci=63
20    		Arrays.fill(b,true);

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
main[1] > 
Step completed: "thread=main", Main.solve(), line=21 bci=68
21    		for(int i = 0;i < M;i++){

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=100
25    		for(int i = N*2-2;i > 0;i-=2){

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
main[1] > 
Step completed: "thread=main", Main.solve(), line=26 bci=113
26    			if(b[i] && b[i-1])b[(i-2)/2] = true;

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=25 bci=171
25    		for(int i = N*2-2;i > 0;i-=2){

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=31 bci=177
31    		int ans = 0;

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
main[1] > 
Step completed: "thread=main", Main.solve(), line=32 bci=179
32    		for(int i = 0;i < N-1;i++){

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
ans = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=191
33    			if(b[i*2+1] && b[i*2+2])ans++;

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
ans = 0
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=32 bci=214
32    		for(int i = 0;i < N-1;i++){

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
ans = 1
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=220
36    		out.println(ans);

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
ans = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=227
37    	}

main[1] Method arguments:
Local variables:
b = instance of boolean[3] (id=447)
ans = 1
main[1] > 
Step completed: "thread=main", Main.main(), line=42 bci=16
42    		out.close();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=43 bci=22
43    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=444)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
