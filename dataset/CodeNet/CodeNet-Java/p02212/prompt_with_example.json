{
    "0": {
        "prompt": "Instructions: You will be presented a piece of Java code and its input. You need to print the output of the code.\nFor example:\nConsider the following code:\nimport java.util.Scanner;\n\nclass Main {\n\n    public static void main(String[] args) {\n        Scanner scan=new Scanner(System.in);\n        int X =scan.nextInt();\n        switch(X%7){\n            case 4:\n                System.out.println(\"mon\");\n                break;\n            case 5:\n                System.out.println(\"tue\");\n                break;\n            case 6:\n                System.out.println(\"wed\");\n                break;\n            case 0:\n                System.out.println(\"thu\");\n                break;\n            case 1:\n                System.out.println(\"fri\");\n                break;\n            case 2:\n                System.out.println(\"sat\");\n                break;\n            case 3:\n                System.out.println(\"sun\");\n                break;    \n        }\n        \n    }\n\n}\n\nGien the following input:\n4\nPrint only the output of the code, ends with END-OF-OUTPUT:\nmon\nEND-OF-OUTPUT",
        "status": "NAN"
    },
    "1": {
        "prompt": "Consider the following code:\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\tpublic static long gcd(long n, long m){ if(m > n) return gcd(m,n); if(m == 0) return n; return gcd(m, n%m);}\n\tpublic static long lcm(long m, long n){ return (m/gcd(m,n))*n;}\n\tstatic int mod = 1000000007;\n\tstatic int INF = Integer.MAX_VALUE;\n\tstatic int[] dx = {0,0,1,-1};\n\tstatic int[] dy = {1,-1,0,0};\n\tstatic int[] dx8 = {0,0,1,-1,1,1,-1,-1};\n\tstatic int[] dy8 = {1,-1,0,0,1,-1,-1,1};\n\tpublic static void main(String[] args){\n\t\tFastScanner scanner = new FastScanner();\n\t\tint[] a = new int[4];\n\t\tfor(int i = 0; i < 4; i++){\n\t\t\ta[i] = scanner.nextInt();\n\t\t}\n\t\tArrays.sort(a);\n\t\tSystem.out.println(Math.abs(a[0]+a[3]-a[1]-a[2]));\n \t}\n\n\tstatic class Edge implements Comparable<Edge>{\n\t\tint to;\n\t\tint cost;\n\t\tEdge(int to, int cost){\n\t\t\tthis.to = to;\n\t\t\tthis.cost = cost;\n\t\t}\n\t\tpublic int compareTo(Edge e){\n\t\t\treturn cost-e.cost;\n\t\t}\n\t}\n\tstatic class Edge2 implements Comparable<Edge2>{\n\t\tint from;\n\t\tint to;\n\t\tint cost;\n\t\tEdge2(int from, int to, int cost){\n\t\t\tthis.from = from;\n\t\t\tthis.to = to;\n\t\t\tthis.cost = cost;\n\t\t}\n\t\tpublic int compareTo(Edge2 e){\n\t\t\treturn cost-e.cost;\n\t\t}\n\t}\n\n\tstatic class RMQ {\n\t\tprivate int size_, dat[];\n\t\tprivate int query_(int a, int b, int k, int l, int r) {\n\t\t\tif(r <= a || b <= l) return 2147483647;\n\t\t\tif(a <= l && r <= b) return dat[k];\n\t\t\tint lc = query_(a, b, 2 * k, l, (l + r) / 2);\n\t\t\tint rc = query_(a, b, 2 * k + 1, (l + r) / 2, r);\n\t\t\treturn Math.min(lc, rc);\n\t\t}\n\t\tRMQ(int s) {\n\t\t\tfor(size_ = 1; size_ < s;) size_ *= 2;\n\t\t\tdat = new int[size_ * 2];\n\t\t\tfor(int i = 0; i < size_ * 2; i++) dat[i] = 2147483647;\n\t\t}\n\t\tpublic void update(int pos, int x) {\n\t\t\tpos += size_; dat[pos] = x;\n\t\t\twhile(pos > 1) {\n\t\t\t\tpos /= 2;\n\t\t\t\tdat[pos] = Math.min(dat[2 * pos], dat[2 * pos + 1]);\n\t\t\t}\n\t\t}\n\t\tpublic int query(int l, int r) {\n\t\t\treturn query_(l, r, 1, 0, size_);\n\t\t}\n\t}\n\tstatic int size = 2100000;\n\tstatic long[] fac = new long[size];\n\tstatic long[] finv = new long[size];\n\tstatic long[] inv = new long[size];\n\t//\u7e70\u308a\u8fd4\u3057\u4e8c\u4e57\u6cd5\n\tpublic static long pow(long x, long n){\n\t\tlong ans = 1;\n\t\twhile(n > 0){\n\t\t\tif((n & 1) == 1){\n\t\t\t\tans = ans * x;\n\t\t\t\tans %= mod;\n\t\t\t}\n\t\t\tx = x * x % mod;\n\t\t\tn >>= 1;\n\t\t}\n\t\treturn ans;\n\t}\n\tpublic static long div(long x, long y){\n\t\treturn (x*pow(y, mod-2))%mod;\n\t}\n\t//fac, inv, finv\u30c6\u30fc\u30d6\u30eb\u306e\u521d\u671f\u5316\u3001\u3053\u308c\u4f7f\u3046\u5834\u5408\u306finitComb()\u3067\u521d\u671f\u5316\u5fc5\u8981\n\tpublic static  void initComb(){\n\t\tfac[0] = finv[0] = inv[0] = fac[1] = finv[1] = inv[1] = 1;\n\t\tfor (int i = 2; i < size; ++i) {\n\t\t\tfac[i] = fac[i - 1] * i % mod;\n\t\t\tinv[i] = mod - (mod / i) * inv[(int) (mod % i)] % mod;\n\t\t\tfinv[i] = finv[i - 1] * inv[i] % mod;\n\t\t}\n\t}\n\t//nCk % mod\n\tpublic static long comb(int n, int k){\n\t\treturn fac[n] * finv[k] % mod * finv[n - k] % mod;\n\t}\n\t//n! % mod\n\tpublic static long fact(int n){\n\t\treturn fac[n];\n\t}\n\t//(n!)^-1 with % mod\n\tpublic static long finv(int n){\n\t\treturn finv[n];\n\t}\n\tprivate static class FastScanner {\n\t\tprivate final InputStream in = System.in;\n\t\tprivate final byte[] buffer = new byte[1024];\n\t\tprivate int ptr = 0;\n\t\tprivate int buflen = 0;\n\t\tprivate boolean hasNextByte() {\n\t\t\t\tif (ptr < buflen) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t}else{\n\t\t\t\t\t\tptr = 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tbuflen = in.read(buffer);\n\t\t\t\t\t\t} catch (IOException e) {\n\t\t\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (buflen <= 0) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t}\n\t\tprivate int readByte() { if (hasNextByte()) return buffer[ptr++]; else return -1;}\n\t\tprivate static boolean isPrintableChar(int c) { return 33 <= c && c <= 126;}\n\t\tpublic boolean hasNext() { while(hasNextByte() && !isPrintableChar(buffer[ptr])) ptr++; return hasNextByte();}\n\t\tpublic String next() {\n\t\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\t\tint b = readByte();\n\t\t\t\twhile(isPrintableChar(b)) {\n\t\t\t\t\t\tsb.appendCodePoint(b);\n\t\t\t\t\t\tb = readByte();\n\t\t\t\t}\n\t\t\t\treturn sb.toString();\n\t\t}\n\t\tpublic long nextLong() {\n\t\t\t\tif (!hasNext()) throw new NoSuchElementException();\n\t\t\t\tlong n = 0;\n\t\t\t\tboolean minus = false;\n\t\t\t\tint b = readByte();\n\t\t\t\tif (b == '-') {\n\t\t\t\t\t\tminus = true;\n\t\t\t\t\t\tb = readByte();\n\t\t\t\t}\n\t\t\t\tif (b < '0' || '9' < b) {\n\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t}\n\t\t\t\twhile(true){\n\t\t\t\t\t\tif ('0' <= b && b <= '9') {\n\t\t\t\t\t\t\t\tn *= 10;\n\t\t\t\t\t\t\t\tn += b - '0';\n\t\t\t\t\t\t}else if(b == -1 || !isPrintableChar(b)){\n\t\t\t\t\t\t\t\treturn minus ? -n : n;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tthrow new NumberFormatException();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb = readByte();\n\t\t\t\t}\n\t\t}\n\t\tpublic int nextInt() {\n\t\t\t\tlong nl = nextLong();\n\t\t\t\tif (nl < Integer.MIN_VALUE || nl > Integer.MAX_VALUE) throw new NumberFormatException();\n\t\t\t\treturn (int) nl;\n\t\t}\n\t\tpublic double nextDouble() { return Double.parseDouble(next());}\n\t}\n}\n\nGicen the following input:\n2 1 3 4\nPrint only the output of the code, ends with \"END-OF-OUTPUT\":",
        "status": "NAN",
        "gorund_truth": "0\n"
    }
}