some text, as header of the file, sleep 1s 
Set uncaught java.lang.Throwable
Set deferred uncaught java.lang.Throwable
Initializing jdb ...
> 
VM Started: No frames on the current call stack

main[1] > 
Step completed: "thread=main", Main.main(), line=109 bci=0
109    		System.setOut(new PrintStream(new BufferedOutputStream(System.out)));

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=110 bci=20
110    		new Main().run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.<init>(), line=9 bci=0
9    public class Main{

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=10 bci=4
10    	Scanner sc=new Scanner(System.in);

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=12 bci=18
12    	int INF=1<<28;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.<init>(), line=13 bci=24
13    	double EPS=1e-12;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=110 bci=27
110    		new Main().run();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.run(), line=18 bci=0
18    		n=sc.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=19 bci=11
19    		w=sc.nextInt();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=20 bci=22
20    		solve();

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=28 bci=0
28    		flag=new boolean[n+1];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=29 bci=12
29    		count=new int[n+1];

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=30 bci=24
30    		sum=0;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=31 bci=29
31    		left=1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=32 bci=34
32    		right=w+1;

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=44
33    		for(int i=1; i<w; i++){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=34 bci=54
34    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=35 bci=63
35    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=36 bci=69
36    					count[k]++;

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=37 bci=79
37    					update(k);

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 1
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 1
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=38 bci=84
38    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=34 bci=110
34    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=33 bci=116
33    		for(int i=1; i<w; i++){

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=122
45    		for(int i=0; i<n-w+1; i++){

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=139
46    			left=i+1;

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=146
47    			right=i+w+1;

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=158
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=220
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 2
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 2
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 0
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=307
68    			update(left-1);

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 0
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 0
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 0
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 0
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=317
69    			update(right-1);

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=76 bci=327
76    			print(sum+(i<n-w?" ":"\n"));

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.print(), line=101 bci=0
101    		System.out.print(s);

main[1] Method arguments:
s = "2 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.print(), line=102 bci=7
102    	}

main[1] Method arguments:
s = "2 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=371
45    		for(int i=0; i<n-w+1; i++){

main[1] Method arguments:
Local variables:
i = 0
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=139
46    			left=i+1;

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=146
47    			right=i+w+1;

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=158
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=220
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 3
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 3
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 3
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 3
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 3
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 1
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=307
68    			update(left-1);

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=317
69    			update(right-1);

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 3
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 3
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 3
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=76 bci=327
76    			print(sum+(i<n-w?" ":"\n"));

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.print(), line=101 bci=0
101    		System.out.print(s);

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.print(), line=102 bci=7
102    	}

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=371
45    		for(int i=0; i<n-w+1; i++){

main[1] Method arguments:
Local variables:
i = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=139
46    			left=i+1;

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=146
47    			right=i+w+1;

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=158
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=195
53    						count[i/k]--;

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=207
54    						update(i/k);

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=220
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 4
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 4
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 4
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 4
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 4
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 2
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 2
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=307
68    			update(left-1);

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=317
69    			update(right-1);

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 4
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 4
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 4
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=76 bci=327
76    			print(sum+(i<n-w?" ":"\n"));

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.print(), line=101 bci=0
101    		System.out.print(s);

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.print(), line=102 bci=7
102    	}

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=371
45    		for(int i=0; i<n-w+1; i++){

main[1] Method arguments:
Local variables:
i = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=139
46    			left=i+1;

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=146
47    			right=i+w+1;

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=158
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=195
53    						count[i/k]--;

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=207
54    						update(i/k);

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=220
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 5
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 5
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 5
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 5
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 5
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 3
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 3
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=307
68    			update(left-1);

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=317
69    			update(right-1);

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 5
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 5
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 5
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=76 bci=327
76    			print(sum+(i<n-w?" ":"\n"));

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.print(), line=101 bci=0
101    		System.out.print(s);

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.print(), line=102 bci=7
102    	}

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=371
45    		for(int i=0; i<n-w+1; i++){

main[1] Method arguments:
Local variables:
i = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=139
46    			left=i+1;

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=146
47    			right=i+w+1;

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=158
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=195
53    						count[i/k]--;

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=207
54    						update(i/k);

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=220
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 6
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 6
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 6
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 6
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 6
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 4
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 4
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=307
68    			update(left-1);

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=317
69    			update(right-1);

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 6
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 6
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 6
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=76 bci=327
76    			print(sum+(i<n-w?" ":"\n"));

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.print(), line=101 bci=0
101    		System.out.print(s);

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.print(), line=102 bci=7
102    	}

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=371
45    		for(int i=0; i<n-w+1; i++){

main[1] Method arguments:
Local variables:
i = 4
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=139
46    			left=i+1;

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=146
47    			right=i+w+1;

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=158
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=195
53    						count[i/k]--;

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=207
54    						update(i/k);

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 5
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 5
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=220
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 7
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 7
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 7
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 7
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 7
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 5
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 5
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 5
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=307
68    			update(left-1);

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=317
69    			update(right-1);

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 7
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 7
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 7
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=76 bci=327
76    			print(sum+(i<n-w?" ":"\n"));

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.print(), line=101 bci=0
101    		System.out.print(s);

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.print(), line=102 bci=7
102    	}

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=371
45    		for(int i=0; i<n-w+1; i++){

main[1] Method arguments:
Local variables:
i = 5
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=139
46    			left=i+1;

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=146
47    			right=i+w+1;

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=158
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=195
53    						count[i/k]--;

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=207
54    						update(i/k);

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 6
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 6
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 6
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 6
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 6
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=195
53    						count[i/k]--;

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=207
54    						update(i/k);

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=220
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 8
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 8
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 8
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 8
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 8
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 6
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 6
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=307
68    			update(left-1);

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 6
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 6
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 6
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 6
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=317
69    			update(right-1);

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 8
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 8
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 8
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=76 bci=327
76    			print(sum+(i<n-w?" ":"\n"));

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.print(), line=101 bci=0
101    		System.out.print(s);

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.print(), line=102 bci=7
102    	}

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=371
45    		for(int i=0; i<n-w+1; i++){

main[1] Method arguments:
Local variables:
i = 6
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=139
46    			left=i+1;

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=146
47    			right=i+w+1;

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=158
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=195
53    						count[i/k]--;

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=207
54    						update(i/k);

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 7
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 7
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 7
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 7
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 7
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 7
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 7
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=220
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 9
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 9
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 9
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 9
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 9
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 7
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 7
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 7
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 7
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 7
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 7
k = 3
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 3
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 3
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 7
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 7
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=307
68    			update(left-1);

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 7
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 7
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 7
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 7
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=317
69    			update(right-1);

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 9
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 9
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 9
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 9
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=76 bci=327
76    			print(sum+(i<n-w?" ":"\n"));

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.print(), line=101 bci=0
101    		System.out.print(s);

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.print(), line=102 bci=7
102    	}

main[1] Method arguments:
s = "3 "
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=371
45    		for(int i=0; i<n-w+1; i++){

main[1] Method arguments:
Local variables:
i = 7
main[1] > 
Step completed: "thread=main", Main.solve(), line=46 bci=139
46    			left=i+1;

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=47 bci=146
47    			right=i+w+1;

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=158
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=195
53    						count[i/k]--;

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=207
54    						update(i/k);

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 8
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=87 bci=45
87    			flag[i]=false;

main[1] Method arguments:
i = 8
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=88 bci=52
88    			sum--;

main[1] Method arguments:
i = 8
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 8
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 8
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=49 bci=167
49    				if(i%k==0){

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=50 bci=173
50    					count[k]--;

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=51 bci=183
51    					update(k);

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=52 bci=188
52    					if(i/k!=k){

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=53 bci=195
53    						count[i/k]--;

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=54 bci=207
54    						update(i/k);

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 4
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 4
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=48 bci=214
48    			for(int k=1; k*k<=i; k++){

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=220
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 1
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 1
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 10
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 10
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=91 bci=85
91    			flag[i]=true;

main[1] Method arguments:
i = 10
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=92 bci=92
92    			sum++;

main[1] Method arguments:
i = 10
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 10
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 8
k = 1
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=60 bci=245
60    					count[k]++;

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=61 bci=255
61    					update(k);

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 2
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 2
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=62 bci=260
62    					if((i+w)/k!=k){

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=63 bci=272
63    						count[(i+w)/k]++;

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=64 bci=289
64    						update((i+w)/k);

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 5
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 5
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 8
k = 2
main[1] > 
Step completed: "thread=main", Main.solve(), line=59 bci=234
59    				if((i+w)%k==0){

main[1] Method arguments:
Local variables:
i = 8
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=58 bci=301
58    			for(int k=1; k*k<=i+w; k++){

main[1] Method arguments:
Local variables:
i = 8
k = 3
main[1] > 
Step completed: "thread=main", Main.solve(), line=68 bci=307
68    			update(left-1);

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 8
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 8
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 8
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 8
Local variables:
det = false
main[1] > 
Step completed: "thread=main", Main.solve(), line=69 bci=317
69    			update(right-1);

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.update(), line=85 bci=0
85    		boolean det=left<=i&&i<right;

main[1] Method arguments:
i = 10
Local variables:
main[1] > 
Step completed: "thread=main", Main.update(), line=86 bci=22
86    		if(flag[i]&&!det&&count[i]<2){

main[1] Method arguments:
i = 10
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=90 bci=62
90    		if(!flag[i]&&(det||count[i]>=2)){

main[1] Method arguments:
i = 10
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.update(), line=94 bci=102
94    	}

main[1] Method arguments:
i = 10
Local variables:
det = true
main[1] > 
Step completed: "thread=main", Main.solve(), line=76 bci=327
76    			print(sum+(i<n-w?" ":"\n"));

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.print(), line=101 bci=0
101    		System.out.print(s);

main[1] Method arguments:
s = "3
"
Local variables:
main[1] > 
Step completed: "thread=main", Main.print(), line=102 bci=7
102    	}

main[1] Method arguments:
s = "3
"
Local variables:
main[1] > 
Step completed: "thread=main", Main.solve(), line=45 bci=371
45    		for(int i=0; i<n-w+1; i++){

main[1] Method arguments:
Local variables:
i = 8
main[1] > 
Step completed: "thread=main", Main.solve(), line=82 bci=377
82    	}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.run(), line=21 bci=26
21    	}

main[1] No local variables
main[1] > 
Step completed: "thread=main", Main.main(), line=111 bci=30
111    		System.out.flush();

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > 
Step completed: "thread=main", Main.main(), line=112 bci=36
112    	}

main[1] Method arguments:
args = instance of java.lang.String[0] (id=443)
Local variables:
main[1] > No default thread specified: use the "thread" command first.
> 
The application exited
