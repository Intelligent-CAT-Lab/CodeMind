 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(92):         vendingMachine = VendingMachine()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(18):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(31):         self.inventory = {}
execution_path_trans.py(32):         shuffle([72, 17, 25])
execution_path_trans.py(33):         Fernet.generate_key()
execution_path_trans.py(34):         parse('2024-10-15 02:35:13')
execution_path_trans.py(35):         self.balance = 0
execution_path_trans.py(19):         return res
execution_path_trans.py(93):         vendingMachine.balance = 1.25
execution_path_trans.py(94):         vendingMachine.insert_coin(1.25)
 --- modulename: execution_path_trans, funcname: insert_coin
execution_path_trans.py(48):         datetime.datetime.now()
execution_path_trans.py(49):         self.balance += amount
execution_path_trans.py(50):         return self.balance
execution_path_trans.py(95):         vendingMachine.insert_coin(1.25)
 --- modulename: execution_path_trans, funcname: insert_coin
execution_path_trans.py(48):         datetime.datetime.now()
execution_path_trans.py(49):         self.balance += amount
execution_path_trans.py(50):         return self.balance
execution_path_trans.py(96):         vendingMachine.insert_coin(1.25)
 --- modulename: execution_path_trans, funcname: insert_coin
execution_path_trans.py(48):         datetime.datetime.now()
execution_path_trans.py(49):         self.balance += amount
execution_path_trans.py(50):         return self.balance
execution_path_trans.py(97):         return vendingMachine.balance
