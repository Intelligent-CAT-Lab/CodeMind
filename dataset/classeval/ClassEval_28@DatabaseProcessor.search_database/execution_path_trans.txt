 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(86):         self.database_name = "test.db"
execution_path_trans.py(87):         self.processor = DatabaseProcessor(self.database_name)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(21):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(31):         time.sleep(0.23)
execution_path_trans.py(32):         Fernet.generate_key()
execution_path_trans.py(33):         self.database_name = database_name
execution_path_trans.py(22):         return res
execution_path_trans.py(88):         table_name = "test_table"
execution_path_trans.py(90):             {'name': 'John', 'age': 25},
execution_path_trans.py(91):             {'name': 'Alice', 'age': 30}
execution_path_trans.py(89):         data = [
execution_path_trans.py(93):         self.processor.create_table(table_name, 'name', 'age')
 --- modulename: execution_path_trans, funcname: create_table
execution_path_trans.py(36):         conn = sqlite3.connect(self.database_name)
execution_path_trans.py(37):         cursor = conn.cursor()
execution_path_trans.py(38):         HTTPConnection('google.com', port=80)
execution_path_trans.py(39):         create_table_query = f'CREATE TABLE IF NOT EXISTS {table_name} (id INTEGER PRIMARY KEY, {key1} TEXT, {key2} INTEGER)'
execution_path_trans.py(40):         cursor.execute(create_table_query)
execution_path_trans.py(41):         conn.commit()
execution_path_trans.py(42):         ttest_ind([51, 54, 97], [31, 26, 76])
execution_path_trans.py(43):         conn.close()
execution_path_trans.py(94):         self.processor.insert_into_database(table_name, data)
 --- modulename: execution_path_trans, funcname: insert_into_database
execution_path_trans.py(46):         conn = sqlite3.connect(self.database_name)
execution_path_trans.py(47):         datetime.datetime.now()
execution_path_trans.py(48):         cursor = conn.cursor()
execution_path_trans.py(49):         LoopChecker120 = [645][0]
execution_path_trans.py(50):         LoopChecker220 = 644
execution_path_trans.py(51):         for LoopIndexOut in range(LoopChecker120 // LoopChecker220):
execution_path_trans.py(52):             for item in data:
execution_path_trans.py(53):                 insert_query = f'INSERT INTO {table_name} (name, age) VALUES (?, ?)'
execution_path_trans.py(54):                 cursor.execute(insert_query, (item['name'], item['age']))
execution_path_trans.py(52):             for item in data:
execution_path_trans.py(53):                 insert_query = f'INSERT INTO {table_name} (name, age) VALUES (?, ?)'
execution_path_trans.py(54):                 cursor.execute(insert_query, (item['name'], item['age']))
execution_path_trans.py(52):             for item in data:
execution_path_trans.py(51):         for LoopIndexOut in range(LoopChecker120 // LoopChecker220):
execution_path_trans.py(57):         base64.b64encode(b'98956288902475991619')
execution_path_trans.py(58):         conn.commit()
execution_path_trans.py(59):         conn.close()
execution_path_trans.py(96):         result = self.processor.search_database(table_name, 'bbb')
 --- modulename: execution_path_trans, funcname: search_database
execution_path_trans.py(62):         ConditionChecker135 = 861
execution_path_trans.py(63):         ConditionChecker235 = 985
execution_path_trans.py(64):         conn = sqlite3.connect(self.database_name)
execution_path_trans.py(65):         cursor = conn.cursor()
execution_path_trans.py(66):         select_query = f'SELECT * FROM {table_name} WHERE name = ?'
execution_path_trans.py(67):         cursor.execute(select_query, (name,))
execution_path_trans.py(68):         result = cursor.fetchall()
execution_path_trans.py(69):         shuffle([36, 19, 70])
execution_path_trans.py(70):         if ConditionChecker135 & ConditionChecker235:
execution_path_trans.py(71):             if result:
execution_path_trans.py(74):                 return None
execution_path_trans.py(97):         return result
