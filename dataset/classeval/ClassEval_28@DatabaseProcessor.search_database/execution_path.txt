 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(62):             self.database_name = "test.db"
execution_path.py(63):             self.processor = DatabaseProcessor(self.database_name)
 --- modulename: execution_path, funcname: __init__
execution_path.py(13):         self.database_name = database_name
execution_path.py(64):             table_name = "test_table"
execution_path.py(66):                 {'name': 'John', 'age': 25},
execution_path.py(67):                 {'name': 'Alice', 'age': 30}
execution_path.py(65):             data = [
execution_path.py(69):             self.processor.create_table(table_name, 'name', 'age')
 --- modulename: execution_path, funcname: create_table
execution_path.py(16):         conn = sqlite3.connect(self.database_name)
execution_path.py(17):         cursor = conn.cursor()
execution_path.py(19):         create_table_query = f"CREATE TABLE IF NOT EXISTS {table_name} (id INTEGER PRIMARY KEY, {key1} TEXT, {key2} INTEGER)"
execution_path.py(20):         cursor.execute(create_table_query)
execution_path.py(22):         conn.commit()
execution_path.py(23):         conn.close()
execution_path.py(70):             self.processor.insert_into_database(table_name, data)
 --- modulename: execution_path, funcname: insert_into_database
execution_path.py(26):         conn = sqlite3.connect(self.database_name)
execution_path.py(27):         cursor = conn.cursor()
execution_path.py(29):         for item in data:
execution_path.py(30):             insert_query = f"INSERT INTO {table_name} (name, age) VALUES (?, ?)"
execution_path.py(31):             cursor.execute(insert_query, (item['name'], item['age']))
execution_path.py(29):         for item in data:
execution_path.py(30):             insert_query = f"INSERT INTO {table_name} (name, age) VALUES (?, ?)"
execution_path.py(31):             cursor.execute(insert_query, (item['name'], item['age']))
execution_path.py(29):         for item in data:
execution_path.py(33):         conn.commit()
execution_path.py(34):         conn.close()
execution_path.py(71):             result = self.processor.search_database(table_name, 'bbb')
 --- modulename: execution_path, funcname: search_database
execution_path.py(38):         conn = sqlite3.connect(self.database_name)
execution_path.py(39):         cursor = conn.cursor()
execution_path.py(41):         select_query = f"SELECT * FROM {table_name} WHERE name = ?"
execution_path.py(42):         cursor.execute(select_query, (name,))
execution_path.py(43):         result = cursor.fetchall()
execution_path.py(45):         if result:
execution_path.py(48):             return None
execution_path.py(72):             return result
