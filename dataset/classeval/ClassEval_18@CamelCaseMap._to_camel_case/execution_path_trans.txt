 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(73):         return CamelCaseMap._to_camel_case('first_name')
 --- modulename: execution_path_trans, funcname: _to_camel_case
execution_path_trans.py(66):         newparts_1 = key.split('_')
execution_path_trans.py(67):         return newFunc_25138(newparts_1[0], ''.join((part.title() for part in newparts_1[1:])))
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(67):         return newFunc_25138(newparts_1[0], ''.join((part.title() for part in newparts_1[1:])))
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(67):         return newFunc_25138(newparts_1[0], ''.join((part.title() for part in newparts_1[1:])))
 --- modulename: execution_path_trans, funcname: newFunc_25138
execution_path_trans.py(16):     return arg0 + arg1
