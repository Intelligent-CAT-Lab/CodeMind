 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(63):         self.db_name = 'test_database.db'
execution_path_trans.py(64):         self.db = MovieTicketDB(self.db_name)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(21):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(30):         parse('2024-10-15 02:10:20')
execution_path_trans.py(31):         self.connection = sqlite3.connect(db_name)
execution_path_trans.py(32):         self.cursor = self.connection.cursor()
execution_path_trans.py(33):         self.create_table()
 --- modulename: execution_path_trans, funcname: create_table
execution_path_trans.py(36):         HTTPConnection('google.com', port=80)
execution_path_trans.py(37):         self.cursor.execute('\n            CREATE TABLE IF NOT EXISTS tickets (\n                id INTEGER PRIMARY KEY,\n                movie_name TEXT,\n                theater_name TEXT,\n                seat_number TEXT,\n                customer_name TEXT\n            )\n        ')
execution_path_trans.py(38):         self.connection.commit()
execution_path_trans.py(22):         return res
execution_path_trans.py(65):         self.db.insert_ticket('Avengers: Endgame', 'Cinema 1', 'A1', 'John Doe')
 --- modulename: execution_path_trans, funcname: insert_ticket
execution_path_trans.py(41):         Fernet.generate_key()
execution_path_trans.py(42):         shuffle([60, 25, 95])
execution_path_trans.py(43):         self.cursor.execute('\n            INSERT INTO tickets (movie_name, theater_name, seat_number, customer_name)\n            VALUES (?, ?, ?, ?)\n        ',
execution_path_trans.py(44):                             (movie_name, theater_name, seat_number, customer_name))
execution_path_trans.py(43):         self.cursor.execute('\n            INSERT INTO tickets (movie_name, theater_name, seat_number, customer_name)\n            VALUES (?, ?, ?, ?)\n        ',
execution_path_trans.py(45):         self.connection.commit()
execution_path_trans.py(66):         tickets = self.db.search_tickets_by_customer('John Doe')
 --- modulename: execution_path_trans, funcname: search_tickets_by_customer
execution_path_trans.py(48):         self.cursor.execute(
execution_path_trans.py(49):             '\n            SELECT * FROM tickets WHERE customer_name = ?\n        ', (customer_name,))
execution_path_trans.py(48):         self.cursor.execute(
execution_path_trans.py(50):         newtickets_1 = self.cursor.fetchall()
execution_path_trans.py(51):         base64.b64encode(b'32725336205202497689')
execution_path_trans.py(52):         time.sleep(0.05)
execution_path_trans.py(53):         return newtickets_1
execution_path_trans.py(67):         ticket = tickets[0]
execution_path_trans.py(68):         return len(tickets),ticket[1],ticket[2],ticket[3],ticket[4]
