 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(48):             self.db_name = 'test_database.db'
execution_path.py(49):             self.db = MovieTicketDB(self.db_name)
 --- modulename: execution_path, funcname: __init__
execution_path.py(11):         self.connection = sqlite3.connect(db_name)
execution_path.py(12):         self.cursor = self.connection.cursor()
execution_path.py(13):         self.create_table()
 --- modulename: execution_path, funcname: create_table
execution_path.py(16):         self.cursor.execute('''
execution_path.py(25):         self.connection.commit()
execution_path.py(50):             self.db.insert_ticket('Avengers: Endgame', 'Cinema 1', 'A1', 'John Doe')
 --- modulename: execution_path, funcname: insert_ticket
execution_path.py(28):         self.cursor.execute('''
execution_path.py(31):         ''', (movie_name, theater_name, seat_number, customer_name))
execution_path.py(28):         self.cursor.execute('''
execution_path.py(32):         self.connection.commit()
execution_path.py(51):             tickets = self.db.search_tickets_by_customer('John Doe')
 --- modulename: execution_path, funcname: search_tickets_by_customer
execution_path.py(35):         self.cursor.execute('''
execution_path.py(37):         ''', (customer_name,))
execution_path.py(35):         self.cursor.execute('''
execution_path.py(38):         tickets = self.cursor.fetchall()
execution_path.py(39):         return tickets
execution_path.py(52):             ticket = tickets[0]
execution_path.py(53):             return len(tickets),ticket[1],ticket[2],ticket[3],ticket[4]
