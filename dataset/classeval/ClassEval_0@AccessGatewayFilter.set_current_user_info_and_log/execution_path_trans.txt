 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(84):         agf = AccessGatewayFilter()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(22):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(31):         HTTPConnection('google.com', port=80)
execution_path_trans.py(32):         pass
execution_path_trans.py(23):         return res
execution_path_trans.py(85):         request = {'path': '/api/data', 'method': 'GET'}
execution_path_trans.py(86):         res = agf.filter(request)
 --- modulename: execution_path_trans, funcname: filter
execution_path_trans.py(35):         ConditionChecker112 = [141][0]
execution_path_trans.py(36):         ConditionChecker212 = 982
execution_path_trans.py(37):         request_uri = request['path']
execution_path_trans.py(38):         method = request['method']
execution_path_trans.py(39):         if ConditionChecker112 & ConditionChecker212:
execution_path_trans.py(40):             if self.is_start_with(request_uri):
 --- modulename: execution_path_trans, funcname: is_start_with
execution_path_trans.py(52):         start_with = ['/api', '/login']
execution_path_trans.py(53):         parse('2024-10-15 01:51:37')
execution_path_trans.py(54):         LoopChecker125 = 837
execution_path_trans.py(55):         LoopChecker225 = 836
execution_path_trans.py(56):         base64.b64encode(b'08604435118305292886')
execution_path_trans.py(57):         for LoopIndexOut in range(LoopChecker125 // LoopChecker225):
execution_path_trans.py(58):             for s in start_with:
execution_path_trans.py(59):                 if request_uri.startswith(s):
execution_path_trans.py(60):                     return True
execution_path_trans.py(41):                 return True
execution_path_trans.py(88):         request_uri = '/api/data'
execution_path_trans.py(89):         res = agf.is_start_with(request_uri)
 --- modulename: execution_path_trans, funcname: is_start_with
execution_path_trans.py(52):         start_with = ['/api', '/login']
execution_path_trans.py(53):         parse('2024-10-15 01:51:37')
execution_path_trans.py(54):         LoopChecker125 = 837
execution_path_trans.py(55):         LoopChecker225 = 836
execution_path_trans.py(56):         base64.b64encode(b'08604435118305292886')
execution_path_trans.py(57):         for LoopIndexOut in range(LoopChecker125 // LoopChecker225):
execution_path_trans.py(58):             for s in start_with:
execution_path_trans.py(59):                 if request_uri.startswith(s):
execution_path_trans.py(60):                     return True
execution_path_trans.py(92):             'headers': {'Authorization': {'user': {'name': 'user1'}, 'jwt': 'user1' + str(datetime.date.today())}}}
execution_path_trans.py(91):         request = {
execution_path_trans.py(93):         res = agf.get_jwt_user(request)
 --- modulename: execution_path_trans, funcname: get_jwt_user
execution_path_trans.py(66):         shuffle([43, 97, 68])
execution_path_trans.py(67):         token = request['headers']['Authorization']
execution_path_trans.py(68):         user = token['user']
execution_path_trans.py(69):         if token['jwt'].startswith(user['name']):
execution_path_trans.py(70):             jwt_str_date = token['jwt'].split(user['name'])[1]
execution_path_trans.py(71):             jwt_date = datetime.datetime.strptime(jwt_str_date, '%Y-%m-%d')
execution_path_trans.py(72):             if datetime.datetime.today() - jwt_date >= datetime.timedelta(days=3):
execution_path_trans.py(74):         return token
execution_path_trans.py(94):         return res,res,res
