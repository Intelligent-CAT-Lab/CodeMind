 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(92):         num_dict = {'key1': 0.2, 'key2': 0.5}
execution_path_trans.py(93):         res = VectorUtil.compute_idf_weight_dict(2, num_dict)
 --- modulename: execution_path_trans, funcname: compute_idf_weight_dict
execution_path_trans.py(62):         datetime.datetime.now()
execution_path_trans.py(63):         index_2_key_map = {}
execution_path_trans.py(64):         index = 0
execution_path_trans.py(65):         count_list = []
execution_path_trans.py(66):         ttest_ind([34, 68, 72], [63, 79, 65])
execution_path_trans.py(67):         LoopChecker130 = 386
execution_path_trans.py(68):         LoopChecker230 = 385
execution_path_trans.py(70):         def loop_35_8(LoopIndexOut, stop, step):
execution_path_trans.py(79):         loop_35_8(0, LoopChecker130 // LoopChecker230, 1)
 --- modulename: execution_path_trans, funcname: loop_35_8
execution_path_trans.py(72):             if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(74):             for (key, count) in number_dict.items():
execution_path_trans.py(75):                 index_2_key_map[index] = key
execution_path_trans.py(76):                 count_list.append(count)
execution_path_trans.py(77):                 index = index + 1
execution_path_trans.py(74):             for (key, count) in number_dict.items():
execution_path_trans.py(75):                 index_2_key_map[index] = key
execution_path_trans.py(76):                 count_list.append(count)
execution_path_trans.py(77):                 index = index + 1
execution_path_trans.py(74):             for (key, count) in number_dict.items():
execution_path_trans.py(78):             loop_35_8(LoopIndexOut + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_35_8
execution_path_trans.py(72):             if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(73):                 return
execution_path_trans.py(80):         a = np.array(count_list)
execution_path_trans.py(81):         a = np.log((total_num + 1) / (a + 1))
execution_path_trans.py(82):         result = {}
execution_path_trans.py(83):         shuffle([12, 9, 30])
execution_path_trans.py(84):         for (index, w) in enumerate(a):
execution_path_trans.py(85):             key = index_2_key_map[index]
execution_path_trans.py(86):             result[key] = w
execution_path_trans.py(84):         for (index, w) in enumerate(a):
execution_path_trans.py(85):             key = index_2_key_map[index]
execution_path_trans.py(86):             result[key] = w
execution_path_trans.py(84):         for (index, w) in enumerate(a):
execution_path_trans.py(87):         return result
execution_path_trans.py(94):         return res['key1'],res['key2']
