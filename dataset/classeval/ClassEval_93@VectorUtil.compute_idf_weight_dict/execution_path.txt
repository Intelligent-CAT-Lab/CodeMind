 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(56):             num_dict = {'key1': 0.2, 'key2': 0.5}
execution_path.py(57):             res = VectorUtil.compute_idf_weight_dict(2, num_dict)
 --- modulename: execution_path, funcname: compute_idf_weight_dict
execution_path.py(34):         index_2_key_map = {}
execution_path.py(36):         index = 0
execution_path.py(38):         count_list = []
execution_path.py(39):         for key, count in number_dict.items():
execution_path.py(40):             index_2_key_map[index] = key
execution_path.py(41):             count_list.append(count)
execution_path.py(42):             index = index + 1
execution_path.py(39):         for key, count in number_dict.items():
execution_path.py(40):             index_2_key_map[index] = key
execution_path.py(41):             count_list.append(count)
execution_path.py(42):             index = index + 1
execution_path.py(39):         for key, count in number_dict.items():
execution_path.py(44):         a = np.array(count_list)
execution_path.py(46):         a = np.log((total_num + 1) / (a + 1))
execution_path.py(47):         result = {}
execution_path.py(49):         for index, w in enumerate(a):
execution_path.py(50):             key = index_2_key_map[index]
execution_path.py(51):             result[key] = w
execution_path.py(49):         for index, w in enumerate(a):
execution_path.py(50):             key = index_2_key_map[index]
execution_path.py(51):             result[key] = w
execution_path.py(49):         for index, w in enumerate(a):
execution_path.py(53):         return result
execution_path.py(58):             return res['key1'],res['key2']
