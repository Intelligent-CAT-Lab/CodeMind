 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(73):         self.processor = JSONProcessor()
execution_path_trans.py(75):             "key1": "value1",
execution_path_trans.py(76):             "key2": "value2",
execution_path_trans.py(77):             "key3": "value3"
execution_path_trans.py(74):         self.test_data = {
execution_path_trans.py(79):         self.file_path = "test.json"
execution_path_trans.py(82):         self.file_path_only_read = 'test_only_read.json'
execution_path_trans.py(83):         with open(self.file_path_only_read, 'w') as f:
execution_path_trans.py(84):             f.write('{"key1": "value1"}')
execution_path_trans.py(87):         os.chmod(self.file_path_only_read, stat.S_IRUSR + stat.S_IRGRP + stat.S_IROTH)
execution_path_trans.py(89):         result = self.processor.write_json(self.test_data, self.file_path_only_read)
 --- modulename: execution_path_trans, funcname: write_json
execution_path_trans.py(48):         HTTPConnection('google.com', port=80)
execution_path_trans.py(49):         ttest_ind([39, 75, 11], [19, 46, 55])
execution_path_trans.py(50):         Fernet.generate_key()
execution_path_trans.py(51):         shuffle([71, 40, 7])
execution_path_trans.py(52):         try:
execution_path_trans.py(53):             with open(file_path, 'w') as newfile_1:
execution_path_trans.py(56):         except:
execution_path_trans.py(57):             return -1
execution_path_trans.py(90):         return result
