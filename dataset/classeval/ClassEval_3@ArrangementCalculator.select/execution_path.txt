 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(49):             ac = ArrangementCalculator([1, 2])
 --- modulename: execution_path, funcname: __init__
execution_path.py(11):         self.datas = datas
execution_path.py(50):             res = ac.select()
 --- modulename: execution_path, funcname: select
execution_path.py(28):         if m is None:
execution_path.py(29):             m = len(self.datas)
execution_path.py(30):         result = []
execution_path.py(31):         for permutation in itertools.permutations(self.datas, m):
execution_path.py(32):             result.append(list(permutation))
execution_path.py(31):         for permutation in itertools.permutations(self.datas, m):
execution_path.py(32):             result.append(list(permutation))
execution_path.py(31):         for permutation in itertools.permutations(self.datas, m):
execution_path.py(33):         return result
execution_path.py(51):             expected = [[1, 2], [2, 1]]
execution_path.py(52):             return res,expected
