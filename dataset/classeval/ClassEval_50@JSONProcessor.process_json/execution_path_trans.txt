 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(73):         self.processor = JSONProcessor()
execution_path_trans.py(75):             "key1": "value1",
execution_path_trans.py(76):             "key2": "value2",
execution_path_trans.py(77):             "key3": "value3"
execution_path_trans.py(74):         self.test_data = {
execution_path_trans.py(79):         self.file_path = "test.json"
execution_path_trans.py(80):         with open(self.file_path, 'w') as file:
execution_path_trans.py(81):             json.dump(self.test_data, file)
execution_path_trans.py(82):         remove_key = "nonexistent_key"
execution_path_trans.py(83):         self.processor.process_json(self.file_path, remove_key)
 --- modulename: execution_path_trans, funcname: process_json
execution_path_trans.py(60):         datetime.datetime.now()
execution_path_trans.py(61):         data = self.read_json(file_path)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(23):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: read_json
execution_path_trans.py(33):         ConditionChecker17 = [975][0]
execution_path_trans.py(34):         ConditionChecker27 = 494
execution_path_trans.py(35):         base64.b64encode(b'97401818935864011785')
execution_path_trans.py(36):         if ConditionChecker17 & ConditionChecker27:
execution_path_trans.py(37):             if not os.path.exists(file_path):
execution_path_trans.py(39):         parse('2024-10-15 02:07:28')
execution_path_trans.py(40):         try:
execution_path_trans.py(41):             with open(file_path, 'r') as newfile_1:
execution_path_trans.py(42):                 data = json.load(newfile_1)
execution_path_trans.py(43):             return data
execution_path_trans.py(24):         return res
execution_path_trans.py(62):         if data == 0 or data == -1:
execution_path_trans.py(64):         if remove_key in data:
execution_path_trans.py(69):             return 0
execution_path_trans.py(84):         with open(self.file_path, 'r') as file:
execution_path_trans.py(85):             processed_data = json.load(file)
execution_path_trans.py(86):         return processed_data,self.test_data
