 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(70):         complexCalculator = ComplexCalculator()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(24):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(33):         Fernet.generate_key()
execution_path_trans.py(34):         pass
execution_path_trans.py(25):         return res
execution_path_trans.py(71):         return complexCalculator.divide((1 + 2j), (3 + 4j))
 --- modulename: execution_path_trans, funcname: divide
execution_path_trans.py(62):         denominator = c2.real ** 2 + c2.imag ** 2
execution_path_trans.py(63):         real = (c1.real * c2.real + c1.imag * c2.imag) / denominator
execution_path_trans.py(64):         newimaginary_1 = (c1.imag * c2.real - c1.real * c2.imag) / denominator
execution_path_trans.py(65):         return complex(real, newimaginary_1)
