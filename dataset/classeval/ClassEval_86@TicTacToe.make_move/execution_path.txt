 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(39):             ttt = TicTacToe()
 --- modulename: execution_path, funcname: __init__
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(8):         self.board = [[' ' for _ in range(N)] for _ in range(3)]
execution_path.py(9):         self.current_player = 'X'
execution_path.py(40):             return ttt.current_player,ttt.make_move(0, 0),ttt.make_move(0, 1),ttt.make_move(0, 0),ttt.current_player
 --- modulename: execution_path, funcname: make_move
execution_path.py(12):         if self.board[row][col] == ' ':
execution_path.py(13):             self.board[row][col] = self.current_player
execution_path.py(14):             self.current_player = 'O' if self.current_player == 'X' else 'X'
execution_path.py(15):             return True
 --- modulename: execution_path, funcname: make_move
execution_path.py(12):         if self.board[row][col] == ' ':
execution_path.py(13):             self.board[row][col] = self.current_player
execution_path.py(14):             self.current_player = 'O' if self.current_player == 'X' else 'X'
execution_path.py(15):             return True
 --- modulename: execution_path, funcname: make_move
execution_path.py(12):         if self.board[row][col] == ' ':
execution_path.py(17):             return False
