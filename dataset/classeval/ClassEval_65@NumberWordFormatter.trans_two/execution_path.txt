 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(69):             formatter = NumberWordFormatter()
 --- modulename: execution_path, funcname: __init__
execution_path.py(8):         self.NUMBER = ["", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT", "NINE"]
execution_path.py(9):         self.NUMBER_TEEN = ["TEN", "ELEVEN", "TWELVE", "THIRTEEN", "FOURTEEN", "FIFTEEN", "SIXTEEN", "SEVENTEEN",
execution_path.py(12):         self.NUMBER_TEN = ["TEN", "TWENTY", "THIRTY", "FORTY", "FIFTY", "SIXTY", "SEVENTY", "EIGHTY", "NINETY"]
execution_path.py(13):         self.NUMBER_MORE = ["", "THOUSAND", "MILLION", "BILLION"]
execution_path.py(14):         self.NUMBER_SUFFIX = ["k", "w", "", "m", "", "", "b", "", "", "t", "", "", "p", "", "", "e"]
execution_path.py(70):             return formatter.trans_two('80')
 --- modulename: execution_path, funcname: trans_two
execution_path.py(47):         s = s.zfill(2)
execution_path.py(48):         if s[0] == "0":
execution_path.py(50):         elif s[0] == "1":
execution_path.py(52):         elif s[1] == "0":
execution_path.py(53):             return self.NUMBER_TEN[int(s[0]) - 1]
