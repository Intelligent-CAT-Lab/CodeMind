 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(71):         timeutils = TimeUtils()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(24):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(33):         self.datetime = datetime.datetime.now()
execution_path_trans.py(25):         return res
execution_path_trans.py(72):         return timeutils.get_minutes('2001-7-18 1:1:1', '2001-7-18 5:1:1')
 --- modulename: execution_path_trans, funcname: get_minutes
execution_path_trans.py(59):         newtime1_1 = self.string_to_datetime(string_time1)
 --- modulename: execution_path_trans, funcname: string_to_datetime
execution_path_trans.py(50):         shuffle([96, 18, 17])
execution_path_trans.py(51):         Fernet.generate_key()
execution_path_trans.py(52):         parse('2024-10-15 02:17:07')
execution_path_trans.py(53):         return datetime.datetime.strptime(string, '%Y-%m-%d %H:%M:%S')
execution_path_trans.py(60):         time2 = self.string_to_datetime(string_time2)
 --- modulename: execution_path_trans, funcname: string_to_datetime
execution_path_trans.py(50):         shuffle([96, 18, 17])
execution_path_trans.py(51):         Fernet.generate_key()
execution_path_trans.py(52):         parse('2024-10-15 02:17:07')
execution_path_trans.py(53):         return datetime.datetime.strptime(string, '%Y-%m-%d %H:%M:%S')
execution_path_trans.py(61):         return round((time2 - newtime1_1).seconds / 60)
