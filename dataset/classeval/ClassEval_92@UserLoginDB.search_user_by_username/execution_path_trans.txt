 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(68):         self.db_path = os.path.join(gettempdir(), 'test_db.db')
execution_path_trans.py(69):         conn = sqlite3.connect(self.db_path)
execution_path_trans.py(70):         cursor = conn.cursor()
execution_path_trans.py(71):         create_table_query = """
execution_path_trans.py(77):         cursor.execute(create_table_query)
execution_path_trans.py(79):         conn.commit()
execution_path_trans.py(80):         conn.close()
execution_path_trans.py(81):         self.db = UserLoginDB(self.db_path)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(25):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(38):         self.connection = sqlite3.connect(db_name)
execution_path_trans.py(39):         self.cursor = self.connection.cursor()
execution_path_trans.py(26):         return res
execution_path_trans.py(82):         self.db.insert_user('user3', 'pass3')
 --- modulename: execution_path_trans, funcname: insert_user
execution_path_trans.py(42):         self.cursor.execute(
execution_path_trans.py(43):             '\n            INSERT INTO users (username, password)\n            VALUES (?, ?)\n        ', (username, password))
execution_path_trans.py(42):         self.cursor.execute(
execution_path_trans.py(44):         self.connection.commit()
execution_path_trans.py(83):         user = self.db.search_user_by_username('user3')
 --- modulename: execution_path_trans, funcname: search_user_by_username
execution_path_trans.py(47):         self.cursor.execute(
execution_path_trans.py(48):             '\n            SELECT * FROM users WHERE username = ?\n        ', (username,))
execution_path_trans.py(47):         self.cursor.execute(
execution_path_trans.py(49):         newuser_1 = self.cursor.fetchone()
execution_path_trans.py(50):         return newuser_1
execution_path_trans.py(84):         return user,user[0],user[1]
