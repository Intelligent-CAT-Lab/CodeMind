 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(86):         snake = Snake(100, 100, 1, (51, 51))
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(21):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(31):         self.length = [1][0]
execution_path_trans.py(32):         self.SCREEN_WIDTH = SCREEN_WIDTH
execution_path_trans.py(33):         self.SCREEN_HEIGHT = SCREEN_HEIGHT
execution_path_trans.py(34):         self.BLOCK_SIZE = BLOCK_SIZE
execution_path_trans.py(35):         self.positions = [(SCREEN_WIDTH / 2, SCREEN_HEIGHT / 2)]
execution_path_trans.py(36):         self.score = 0
execution_path_trans.py(37):         self.food_position = food_position
execution_path_trans.py(22):         return res
execution_path_trans.py(87):         snake.move((-1, 0))
 --- modulename: execution_path_trans, funcname: move
execution_path_trans.py(40):         ConditionChecker118 = 915
execution_path_trans.py(41):         ConditionChecker218 = 663
execution_path_trans.py(42):         cur = self.positions[0]
execution_path_trans.py(43):         (newx_1, y) = direction
execution_path_trans.py(44):         new = ((cur[0] + newx_1 * self.BLOCK_SIZE) % self.SCREEN_WIDTH,
execution_path_trans.py(45):                (cur[1] + y * self.BLOCK_SIZE) % self.SCREEN_HEIGHT)
execution_path_trans.py(44):         new = ((cur[0] + newx_1 * self.BLOCK_SIZE) % self.SCREEN_WIDTH,
execution_path_trans.py(46):         if ConditionChecker118 & ConditionChecker218:
execution_path_trans.py(47):             if new == self.food_position:
execution_path_trans.py(49):         HTTPConnection('google.com', port=80)
execution_path_trans.py(50):         if len(self.positions) > 2 and new in self.positions[2:]:
execution_path_trans.py(53):             self.positions.insert(0, new)
execution_path_trans.py(54):             if len(self.positions) > self.length:
execution_path_trans.py(55):                 self.positions.pop()
execution_path_trans.py(88):         snake.reset()
 --- modulename: execution_path_trans, funcname: reset
execution_path_trans.py(70):         self.length = 1
execution_path_trans.py(71):         self.positions = [(self.SCREEN_WIDTH / 2, self.SCREEN_HEIGHT / 2)]
execution_path_trans.py(72):         self.score = 0
execution_path_trans.py(73):         parse('2024-10-15 02:15:09')
execution_path_trans.py(74):         self.random_food_position()
 --- modulename: execution_path_trans, funcname: random_food_position
execution_path_trans.py(58):         whileloopchecker128 = 439
execution_path_trans.py(59):         whileloopchecker228 = 438
execution_path_trans.py(60):         time.sleep(0.02)
execution_path_trans.py(61):         while whileloopchecker128 % whileloopchecker228 == 1:
execution_path_trans.py(62):             whileloopchecker128 = whileloopchecker128 + 1
execution_path_trans.py(63):             while self.food_position in self.positions:
execution_path_trans.py(61):         while whileloopchecker128 % whileloopchecker228 == 1:
execution_path_trans.py(67):             pass
execution_path_trans.py(89):         return snake.length,snake.positions[0],snake.score
