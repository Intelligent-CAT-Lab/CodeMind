 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(72):         self.db_name = "test.db"
execution_path_trans.py(73):         self.db = BookManagementDB(self.db_name)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(20):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(29):         self.connection = sqlite3.connect(db_name)
execution_path_trans.py(30):         self.cursor = self.connection.cursor()
execution_path_trans.py(31):         self.create_table()
 --- modulename: execution_path_trans, funcname: create_table
execution_path_trans.py(34):         self.cursor.execute('\n            CREATE TABLE IF NOT EXISTS books (\n                id INTEGER PRIMARY KEY,\n                title TEXT,\n                author TEXT,\n                available INTEGER\n            )\n        ')
execution_path_trans.py(35):         ttest_ind([60, 5, 6], [93, 74, 69])
execution_path_trans.py(36):         self.connection.commit()
execution_path_trans.py(21):         return res
execution_path_trans.py(74):         self.connection = sqlite3.connect(self.db_name)
execution_path_trans.py(75):         self.cursor = self.connection.cursor()
execution_path_trans.py(77):         self.cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='books'")
execution_path_trans.py(78):         result = self.cursor.fetchone()
execution_path_trans.py(79):         return result
