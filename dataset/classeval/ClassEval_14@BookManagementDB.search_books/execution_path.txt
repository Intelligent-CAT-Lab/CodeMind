 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(58):             self.db_name = "test.db"
execution_path.py(59):             self.db = BookManagementDB(self.db_name)
 --- modulename: execution_path, funcname: __init__
execution_path.py(10):         self.connection = sqlite3.connect(db_name)
execution_path.py(11):         self.cursor = self.connection.cursor()
execution_path.py(12):         self.create_table()
 --- modulename: execution_path, funcname: create_table
execution_path.py(15):         self.cursor.execute('''
execution_path.py(23):         self.connection.commit()
execution_path.py(60):             self.connection = sqlite3.connect(self.db_name)
execution_path.py(61):             self.cursor = self.connection.cursor()
execution_path.py(63):             self.db.add_book("Book 1", "Author 1")
 --- modulename: execution_path, funcname: add_book
execution_path.py(26):         self.cursor.execute('''
execution_path.py(29):         ''', (title, author))
execution_path.py(26):         self.cursor.execute('''
execution_path.py(30):         self.connection.commit()
execution_path.py(64):             self.db.add_book("Book 2", "Author 2")
 --- modulename: execution_path, funcname: add_book
execution_path.py(26):         self.cursor.execute('''
execution_path.py(29):         ''', (title, author))
execution_path.py(26):         self.cursor.execute('''
execution_path.py(30):         self.connection.commit()
execution_path.py(65):             self.db.add_book("Book 3", "Author 3")
 --- modulename: execution_path, funcname: add_book
execution_path.py(26):         self.cursor.execute('''
execution_path.py(29):         ''', (title, author))
execution_path.py(26):         self.cursor.execute('''
execution_path.py(30):         self.connection.commit()
execution_path.py(66):             books = self.db.search_books()
 --- modulename: execution_path, funcname: search_books
execution_path.py(51):         self.cursor.execute('''
execution_path.py(54):         books = self.cursor.fetchall()
execution_path.py(55):         return books
execution_path.py(69):             return len(books),books[0][1],books[1][2],books[2][3]
