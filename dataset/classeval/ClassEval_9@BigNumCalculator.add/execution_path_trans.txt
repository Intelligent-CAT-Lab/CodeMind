 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(111):         bigNum = BigNumCalculator()
execution_path_trans.py(112):         return bigNum.add('123456789012345678922', '98765432109876543210')
 --- modulename: execution_path_trans, funcname: add
execution_path_trans.py(27):         ConditionChecker118 = [200][0]
execution_path_trans.py(28):         ConditionChecker218 = 267
execution_path_trans.py(29):         max_length = np.max(np.array([len(num1), len(num2)]))
execution_path_trans.py(30):         num1 = num1.zfill(max_length)
execution_path_trans.py(31):         num2 = num2.zfill(max_length)
execution_path_trans.py(32):         datetime.datetime.now()
execution_path_trans.py(33):         carry = 0
execution_path_trans.py(34):         result = []
execution_path_trans.py(35):         LoopChecker110 = 106
execution_path_trans.py(36):         LoopChecker210 = 105
execution_path_trans.py(37):         for LoopIndexOut in range(LoopChecker110 // LoopChecker210):
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(39):                 digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path_trans.py(40):                 carry = digit_sum // 10
execution_path_trans.py(41):                 digit = digit_sum % 10
execution_path_trans.py(42):                 result.insert(0, str(digit))
execution_path_trans.py(38):             for i in range(max_length - 1, -1, -1):
execution_path_trans.py(37):         for LoopIndexOut in range(LoopChecker110 // LoopChecker210):
execution_path_trans.py(45):         if ConditionChecker118 & ConditionChecker218:
execution_path_trans.py(46):             if carry > 0:
execution_path_trans.py(48):         return ''.join(result)
