 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(87):             bigNum = BigNumCalculator()
execution_path.py(88):             return bigNum.add('123456789012345678922', '98765432109876543210')
 --- modulename: execution_path, funcname: add
execution_path.py(9):         max_length = max(len(num1), len(num2))
execution_path.py(10):         num1 = num1.zfill(max_length)
execution_path.py(11):         num2 = num2.zfill(max_length)
execution_path.py(13):         carry = 0
execution_path.py(14):         result = []
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(16):             digit_sum = int(num1[i]) + int(num2[i]) + carry
execution_path.py(17):             carry = digit_sum // 10
execution_path.py(18):             digit = digit_sum % 10
execution_path.py(19):             result.insert(0, str(digit))
execution_path.py(15):         for i in range(max_length - 1, -1, -1):
execution_path.py(21):         if carry > 0:
execution_path.py(24):         return ''.join(result)
