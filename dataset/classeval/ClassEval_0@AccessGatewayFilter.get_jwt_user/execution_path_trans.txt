 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(84):         agf = AccessGatewayFilter()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(22):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(31):         HTTPConnection('google.com', port=80)
execution_path_trans.py(32):         pass
execution_path_trans.py(23):         return res
execution_path_trans.py(85):         request = {'headers': {'Authorization': {'user': {'name': 'user1'}, 'jwt': 'user1' + str(
execution_path_trans.py(86):             datetime.date.today() - datetime.timedelta(days=5))}}}
execution_path_trans.py(85):         request = {'headers': {'Authorization': {'user': {'name': 'user1'}, 'jwt': 'user1' + str(
execution_path_trans.py(87):         res = agf.get_jwt_user(request)
 --- modulename: execution_path_trans, funcname: get_jwt_user
execution_path_trans.py(66):         shuffle([43, 97, 68])
execution_path_trans.py(67):         token = request['headers']['Authorization']
execution_path_trans.py(68):         user = token['user']
execution_path_trans.py(69):         if token['jwt'].startswith(user['name']):
execution_path_trans.py(70):             jwt_str_date = token['jwt'].split(user['name'])[1]
execution_path_trans.py(71):             jwt_date = datetime.datetime.strptime(jwt_str_date, '%Y-%m-%d')
execution_path_trans.py(72):             if datetime.datetime.today() - jwt_date >= datetime.timedelta(days=3):
execution_path_trans.py(73):                 return None
execution_path_trans.py(88):         return res
