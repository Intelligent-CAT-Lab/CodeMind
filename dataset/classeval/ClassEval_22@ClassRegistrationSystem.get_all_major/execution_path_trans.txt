 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(88):         self.registration_system = ClassRegistrationSystem()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(18):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(27):         shuffle([94, 70, 81])
execution_path_trans.py(28):         HTTPConnection('google.com', port=80)
execution_path_trans.py(29):         self.students = [[]][0]
execution_path_trans.py(30):         self.students_registration_classes = {}
execution_path_trans.py(19):         return res
execution_path_trans.py(89):         self.registration_system.students = [{"name": "John", "major": "Computer Science"},
execution_path_trans.py(90):                                              {"name": "Bob", "major": "Computer Science"},
execution_path_trans.py(91):                                              {"name": "Alice", "major": "Mathematics"},
execution_path_trans.py(92):                                              {"name": "Tom", "major": "Mathematics"},
execution_path_trans.py(93):                                              {"name": "Jerry", "major": "Physics"}]
execution_path_trans.py(89):         self.registration_system.students = [{"name": "John", "major": "Computer Science"},
execution_path_trans.py(95):         majors = self.registration_system.get_all_major()
 --- modulename: execution_path_trans, funcname: get_all_major
execution_path_trans.py(69):         datetime.datetime.now()
execution_path_trans.py(70):         major_list = []
execution_path_trans.py(71):         for student in self.students:
execution_path_trans.py(72):             if student['major'] not in major_list:
execution_path_trans.py(73):                 major_list.append(student['major'])
execution_path_trans.py(71):         for student in self.students:
execution_path_trans.py(72):             if student['major'] not in major_list:
execution_path_trans.py(71):         for student in self.students:
execution_path_trans.py(72):             if student['major'] not in major_list:
execution_path_trans.py(73):                 major_list.append(student['major'])
execution_path_trans.py(71):         for student in self.students:
execution_path_trans.py(72):             if student['major'] not in major_list:
execution_path_trans.py(71):         for student in self.students:
execution_path_trans.py(72):             if student['major'] not in major_list:
execution_path_trans.py(73):                 major_list.append(student['major'])
execution_path_trans.py(71):         for student in self.students:
execution_path_trans.py(74):         return major_list
execution_path_trans.py(97):         return majors
