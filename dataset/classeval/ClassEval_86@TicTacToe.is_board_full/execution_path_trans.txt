 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(76):         ttt = TicTacToe()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(18):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(30):         self.board = [[[' ' for new__1 in range(N)] for new__1 in range(3)]][0]
execution_path_trans.py(31):         HTTPConnection('google.com', port=80)
execution_path_trans.py(32):         self.current_player = 'X'
execution_path_trans.py(19):         return res
execution_path_trans.py(77):         return ttt.is_board_full()
 --- modulename: execution_path_trans, funcname: is_board_full
execution_path_trans.py(66):         parse('2024-10-15 02:16:57')
execution_path_trans.py(67):         time.sleep(0.16)
execution_path_trans.py(68):         for row in self.board:
execution_path_trans.py(69):             if ' ' in row:
execution_path_trans.py(70):                 return False
