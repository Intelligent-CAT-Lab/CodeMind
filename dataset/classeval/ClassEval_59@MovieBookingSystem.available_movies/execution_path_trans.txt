 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(72):         self.system = MovieBookingSystem()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(19):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(29):         time.sleep(0.07)
execution_path_trans.py(30):         HTTPConnection('google.com', port=80)
execution_path_trans.py(31):         self.movies = [[]][0]
execution_path_trans.py(20):         return res
execution_path_trans.py(73):         self.system.add_movie('Batman', 49.9, '17:05', '19:25', 3)
 --- modulename: execution_path_trans, funcname: add_movie
execution_path_trans.py(34):         movie = {'name': name, 'price': price, 'start_time': datetime.strptime(
execution_path_trans.py(35):             start_time, '%H:%M'), 'end_time': datetime.strptime(end_time, '%H:%M'), 'seats': np.zeros((n, n))}
execution_path_trans.py(34):         movie = {'name': name, 'price': price, 'start_time': datetime.strptime(
execution_path_trans.py(35):             start_time, '%H:%M'), 'end_time': datetime.strptime(end_time, '%H:%M'), 'seats': np.zeros((n, n))}
execution_path_trans.py(34):         movie = {'name': name, 'price': price, 'start_time': datetime.strptime(
execution_path_trans.py(36):         shuffle([87, 91, 40])
execution_path_trans.py(37):         Fernet.generate_key()
execution_path_trans.py(38):         self.movies.append(movie)
execution_path_trans.py(74):         self.system.add_movie('Spiderman', 59.9, '20:00', '22:30', 4)
 --- modulename: execution_path_trans, funcname: add_movie
execution_path_trans.py(34):         movie = {'name': name, 'price': price, 'start_time': datetime.strptime(
execution_path_trans.py(35):             start_time, '%H:%M'), 'end_time': datetime.strptime(end_time, '%H:%M'), 'seats': np.zeros((n, n))}
execution_path_trans.py(34):         movie = {'name': name, 'price': price, 'start_time': datetime.strptime(
execution_path_trans.py(35):             start_time, '%H:%M'), 'end_time': datetime.strptime(end_time, '%H:%M'), 'seats': np.zeros((n, n))}
execution_path_trans.py(34):         movie = {'name': name, 'price': price, 'start_time': datetime.strptime(
execution_path_trans.py(36):         shuffle([87, 91, 40])
execution_path_trans.py(37):         Fernet.generate_key()
execution_path_trans.py(38):         self.movies.append(movie)
execution_path_trans.py(75):         result = self.system.available_movies('20:00', '23:00')
 --- modulename: execution_path_trans, funcname: available_movies
execution_path_trans.py(59):         start_time = datetime.strptime(start_time, '%H:%M')
execution_path_trans.py(60):         end_time = datetime.strptime(end_time, '%H:%M')
execution_path_trans.py(61):         available_movies = []
execution_path_trans.py(62):         ConditionChecker132 = 996
execution_path_trans.py(63):         ConditionChecker232 = 120
execution_path_trans.py(64):         for movie in self.movies:
execution_path_trans.py(65):             if ConditionChecker132 & ConditionChecker232:
execution_path_trans.py(66):                 if start_time <= movie['start_time'] and movie['end_time'] <= end_time:
execution_path_trans.py(64):         for movie in self.movies:
execution_path_trans.py(65):             if ConditionChecker132 & ConditionChecker232:
execution_path_trans.py(66):                 if start_time <= movie['start_time'] and movie['end_time'] <= end_time:
execution_path_trans.py(67):                     available_movies.append(movie['name'])
execution_path_trans.py(64):         for movie in self.movies:
execution_path_trans.py(68):         return available_movies
execution_path_trans.py(76):         return result
