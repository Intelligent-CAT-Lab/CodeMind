 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(92):         vector_list1 = [np.array([1, 1]), np.array([0, 1])]
execution_path_trans.py(93):         vector_list2 = [np.array([0, 0]), np.array([1, 1])]
execution_path_trans.py(94):         similarity = VectorUtil.n_similarity(vector_list1, vector_list2)
 --- modulename: execution_path_trans, funcname: n_similarity
execution_path_trans.py(50):         ConditionChecker121 = [360][0]
execution_path_trans.py(51):         ConditionChecker221 = 164
execution_path_trans.py(52):         base64.b64encode(b'23383885263119014942')
execution_path_trans.py(53):         if ConditionChecker121 & ConditionChecker221:
execution_path_trans.py(54):             if not (len(vector_list_1) and len(vector_list_2)):
execution_path_trans.py(57):         HTTPConnection('google.com', port=80)
execution_path_trans.py(58):         return dot(matutils.unitvec(array(vector_list_1).mean(axis=0)), matutils.unitvec(array(vector_list_2).mean(axis=0)))
execution_path_trans.py(95):         return similarity
