 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(56):             vector_list1 = [np.array([1, 1]), np.array([0, 1])]
execution_path.py(57):             vector_list2 = [np.array([0, 0]), np.array([1, 1])]
execution_path.py(58):             similarity = VectorUtil.n_similarity(vector_list1, vector_list2)
 --- modulename: execution_path, funcname: n_similarity
execution_path.py(26):         if not (len(vector_list_1) and len(vector_list_2)):
execution_path.py(29):         return dot(matutils.unitvec(array(vector_list_1).mean(axis=0)),
execution_path.py(30):                    matutils.unitvec(array(vector_list_2).mean(axis=0)))
execution_path.py(29):         return dot(matutils.unitvec(array(vector_list_1).mean(axis=0)),
execution_path.py(59):             return similarity
