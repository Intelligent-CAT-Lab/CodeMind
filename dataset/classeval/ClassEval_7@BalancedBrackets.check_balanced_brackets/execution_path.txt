 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(37):             b = BalancedBrackets("a(b{c]]")
 --- modulename: execution_path, funcname: __init__
execution_path.py(8):         self.stack = []
execution_path.py(9):         self.left_brackets = ["(", "{", "["]
execution_path.py(10):         self.right_brackets = [")", "}", "]"]
execution_path.py(11):         self.expr = expr
execution_path.py(38):             return b.check_balanced_brackets()
 --- modulename: execution_path, funcname: check_balanced_brackets
execution_path.py(17):         self.clear_expr()
 --- modulename: execution_path, funcname: clear_expr
execution_path.py(14):         self.expr = ''.join(c for c in self.expr if (c in self.left_brackets or c in self.right_brackets))
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(14):         self.expr = ''.join(c for c in self.expr if (c in self.left_brackets or c in self.right_brackets))
execution_path.py(14):         self.expr = ''.join(c for c in self.expr if (c in self.left_brackets or c in self.right_brackets))
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(14):         self.expr = ''.join(c for c in self.expr if (c in self.left_brackets or c in self.right_brackets))
execution_path.py(14):         self.expr = ''.join(c for c in self.expr if (c in self.left_brackets or c in self.right_brackets))
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(14):         self.expr = ''.join(c for c in self.expr if (c in self.left_brackets or c in self.right_brackets))
execution_path.py(14):         self.expr = ''.join(c for c in self.expr if (c in self.left_brackets or c in self.right_brackets))
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(14):         self.expr = ''.join(c for c in self.expr if (c in self.left_brackets or c in self.right_brackets))
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(14):         self.expr = ''.join(c for c in self.expr if (c in self.left_brackets or c in self.right_brackets))
execution_path.py(18):         for Brkt in self.expr:
execution_path.py(19):             if Brkt in self.left_brackets:
execution_path.py(20):                 self.stack.append(Brkt)
execution_path.py(18):         for Brkt in self.expr:
execution_path.py(19):             if Brkt in self.left_brackets:
execution_path.py(20):                 self.stack.append(Brkt)
execution_path.py(18):         for Brkt in self.expr:
execution_path.py(19):             if Brkt in self.left_brackets:
execution_path.py(22):                 Current_Brkt = self.stack.pop()
execution_path.py(23):                 if Current_Brkt == "(":
execution_path.py(26):                 if Current_Brkt == "{":
execution_path.py(27):                     if Brkt != "}":
execution_path.py(28):                         return False
