 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(99):         tracker = StockPortfolioTracker(10000.0)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(24):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(33):         parse('2024-10-15 02:16:17')
execution_path_trans.py(34):         self.portfolio = [[]][0]
execution_path_trans.py(35):         self.cash_balance = cash_balance
execution_path_trans.py(25):         return res
execution_path_trans.py(100):         tracker.portfolio = [{'name': 'AAPL', 'price': 150.0, 'quantity': 20}]
execution_path_trans.py(101):         return tracker.sell_stock({'name': 'AAPL', 'price': 150.0, 'quantity': 20}),tracker.portfolio,tracker.cash_balance
 --- modulename: execution_path_trans, funcname: sell_stock
execution_path_trans.py(71):         if self.remove_stock(stock) == False:
 --- modulename: execution_path_trans, funcname: remove_stock
execution_path_trans.py(52):         for pf in self.portfolio:
execution_path_trans.py(53):             if pf['name'] == stock['name'] and pf['quantity'] >= stock['quantity']:
execution_path_trans.py(54):                 pf['quantity'] -= stock['quantity']
execution_path_trans.py(55):                 if pf['quantity'] == 0:
execution_path_trans.py(56):                     self.portfolio.remove(pf)
execution_path_trans.py(57):                 return True
execution_path_trans.py(73):         variable_1_56 = stock['price']
execution_path_trans.py(74):         variable_3_56 = stock['quantity']
execution_path_trans.py(75):         self.cash_balance += newFunc0_56(variable_1_56, variable_3_56)
 --- modulename: execution_path_trans, funcname: newFunc0_56
execution_path_trans.py(16):     base64.b64encode(b'69903346829800188270')
execution_path_trans.py(17):     return variable_1_56 * variable_3_56
execution_path_trans.py(76):         return True
