 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(85):         sql = SQLGenerator('table1')
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(26):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(37):         self.table_name = table_name
execution_path_trans.py(27):         return res
execution_path_trans.py(86):         result = sql.update({'field1': 'new_value1', 'field2': 'new_value2', 'field3': 'new_value3',
execution_path_trans.py(87):                              'field4': 'new_value4'}, "field5 = value1")
execution_path_trans.py(86):         result = sql.update({'field1': 'new_value1', 'field2': 'new_value2', 'field3': 'new_value3',
execution_path_trans.py(87):                              'field4': 'new_value4'}, "field5 = value1")
execution_path_trans.py(86):         result = sql.update({'field1': 'new_value1', 'field2': 'new_value2', 'field3': 'new_value3',
 --- modulename: execution_path_trans, funcname: update
execution_path_trans.py(61):         set_clause = ', '.join(
execution_path_trans.py(62):             [f"{field} = '{value}'" for (field, value) in data.items()])
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(62):             [f"{field} = '{value}'" for (field, value) in data.items()])
execution_path_trans.py(62):             [f"{field} = '{value}'" for (field, value) in data.items()])
execution_path_trans.py(62):             [f"{field} = '{value}'" for (field, value) in data.items()])
execution_path_trans.py(62):             [f"{field} = '{value}'" for (field, value) in data.items()])
execution_path_trans.py(62):             [f"{field} = '{value}'" for (field, value) in data.items()])
execution_path_trans.py(61):         set_clause = ', '.join(
execution_path_trans.py(63):         sql = f'UPDATE {self.table_name} SET {set_clause} WHERE {condition}'
execution_path_trans.py(64):         return sql + ';'
execution_path_trans.py(88):         return result
