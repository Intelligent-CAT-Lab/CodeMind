 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(31):             ss = SplitSentence()
execution_path.py(32):             cnt = ss.process_text_file("Mr. Smith is a teacher. Yes 1 2 3 4 5 6.")
 --- modulename: execution_path, funcname: process_text_file
execution_path.py(21):         sentences = self.split_sentences(sentences_string)
 --- modulename: execution_path, funcname: split_sentences
execution_path.py(12):         sentences = re.split(r'(?<!\w\.\w.)(?<![A-Z][a-z]\.)(?<=\.|\?)\s', sentences_string)
execution_path.py(13):         return sentences
execution_path.py(22):         max_count = 0
execution_path.py(23):         for sentence in sentences:
execution_path.py(24):             count = self.count_words(sentence)
 --- modulename: execution_path, funcname: count_words
execution_path.py(16):         sentence = re.sub(r'[^a-zA-Z\s]', '', sentence)
execution_path.py(17):         words = sentence.split()
execution_path.py(18):         return len(words)
execution_path.py(25):             if count > max_count:
execution_path.py(26):                 max_count = count
execution_path.py(23):         for sentence in sentences:
execution_path.py(24):             count = self.count_words(sentence)
 --- modulename: execution_path, funcname: count_words
execution_path.py(16):         sentence = re.sub(r'[^a-zA-Z\s]', '', sentence)
execution_path.py(17):         words = sentence.split()
execution_path.py(18):         return len(words)
execution_path.py(25):             if count > max_count:
execution_path.py(23):         for sentence in sentences:
execution_path.py(28):         return max_count
execution_path.py(33):             return cnt
