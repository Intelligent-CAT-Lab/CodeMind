 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(46):             test_folder = 'test_folder'
execution_path.py(47):             os.makedirs(test_folder, exist_ok=True)
execution_path.py(48):             example_file_path = os.path.join(test_folder, 'example1.txt')
execution_path.py(49):             with open(example_file_path, 'w') as file:
execution_path.py(50):                 file.write('This is an example file.')
execution_path.py(49):             with open(example_file_path, 'w') as file:
execution_path.py(51):             zip_file_name = 'example.zip'
execution_path.py(52):             with zipfile.ZipFile(zip_file_name, 'w') as zip_file:
execution_path.py(53):                 zip_file.write(example_file_path, os.path.basename(example_file_path))
execution_path.py(52):             with zipfile.ZipFile(zip_file_name, 'w') as zip_file:
execution_path.py(54):             processor = ZipFileProcessor(zip_file_name)
 --- modulename: execution_path, funcname: __init__
execution_path.py(11):         self.file_name = file_name
execution_path.py(55):             output_directory = 'output_directory'
execution_path.py(56):             new_zip_file = 'new_zip_file.zip'
execution_path.py(57):             success = processor.extract_all(output_directory)
 --- modulename: execution_path, funcname: extract_all
execution_path.py(21):         try:
execution_path.py(22):             with zipfile.ZipFile(self.file_name, 'r') as zip_file:
execution_path.py(23):                 zip_file.extractall(output_path)
execution_path.py(22):             with zipfile.ZipFile(self.file_name, 'r') as zip_file:
execution_path.py(24):             return True
execution_path.py(58):             os.remove(zip_file_name)
execution_path.py(59):             os.remove(example_file_path)
execution_path.py(60):             os.rmdir(test_folder)
execution_path.py(61):             return success,os.path.exists(os.path.join(output_directory, 'example1.txt'))
