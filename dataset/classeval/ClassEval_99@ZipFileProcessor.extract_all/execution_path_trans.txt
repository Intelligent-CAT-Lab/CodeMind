 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(82):         test_folder = 'test_folder'
execution_path_trans.py(83):         os.makedirs(test_folder, exist_ok=True)
execution_path_trans.py(84):         example_file_path = os.path.join(test_folder, 'example1.txt')
execution_path_trans.py(85):         with open(example_file_path, 'w') as file:
execution_path_trans.py(86):             file.write('This is an example file.')
execution_path_trans.py(88):         zip_file_name = 'example.zip'
execution_path_trans.py(89):         with zipfile.ZipFile(zip_file_name, 'w') as zip_file:
execution_path_trans.py(90):             zip_file.write(example_file_path, os.path.basename(example_file_path))
execution_path_trans.py(92):         processor = ZipFileProcessor(zip_file_name)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(23):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(37):         self.file_name = file_name
execution_path_trans.py(24):         return res
execution_path_trans.py(93):         output_directory = 'output_directory'
execution_path_trans.py(94):         new_zip_file = 'new_zip_file.zip'
execution_path_trans.py(96):         success = processor.extract_all(output_directory)
 --- modulename: execution_path_trans, funcname: extract_all
execution_path_trans.py(47):         try:
execution_path_trans.py(48):             with zipfile.ZipFile(self.file_name, 'r') as newzip_file_1:
execution_path_trans.py(49):                 newzip_file_1.extractall(output_path)
execution_path_trans.py(50):             return True
execution_path_trans.py(98):         os.remove(zip_file_name)
execution_path_trans.py(99):         os.remove(example_file_path)
execution_path_trans.py(100):         os.rmdir(test_folder)
execution_path_trans.py(101):         return success,os.path.exists(os.path.join(output_directory, 'example1.txt'))
