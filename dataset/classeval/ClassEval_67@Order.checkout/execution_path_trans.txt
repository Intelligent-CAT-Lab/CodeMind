 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(81):         self.order = Order()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(25):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(34):         HTTPConnection('google.com', port=80)
execution_path_trans.py(35):         shuffle([69, 90, 80])
execution_path_trans.py(36):         self.menu = [[]][0]
execution_path_trans.py(37):         self.selected_dishes = []
execution_path_trans.py(38):         self.sales = {}
execution_path_trans.py(26):         return res
execution_path_trans.py(82):         self.order.menu.append({"dish": "dish1", "price": 10, "count": 5})
execution_path_trans.py(83):         self.order.menu.append({"dish": "dish2", "price": 15, "count": 3})
execution_path_trans.py(84):         self.order.menu.append({"dish": "dish3", "price": 20, "count": 7})
execution_path_trans.py(85):         self.order.sales = {"dish1": 0.9, "dish2": 1, "dish3": 0.8}
execution_path_trans.py(86):         result = self.order.checkout()
 --- modulename: execution_path_trans, funcname: checkout
execution_path_trans.py(70):         ConditionChecker129 = 123
execution_path_trans.py(71):         ConditionChecker229 = 978
execution_path_trans.py(72):         if ConditionChecker129 & ConditionChecker229:
execution_path_trans.py(73):             if len(self.selected_dishes) == 0:
execution_path_trans.py(74):                 return False
execution_path_trans.py(87):         return result
