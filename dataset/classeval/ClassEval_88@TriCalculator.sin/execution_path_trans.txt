 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(106):         tricalculator = TriCalculator()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(23):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(36):         Fernet.generate_key()
execution_path_trans.py(37):         pass
execution_path_trans.py(24):         return res
execution_path_trans.py(107):         return tricalculator.sin(0)
 --- modulename: execution_path_trans, funcname: sin
execution_path_trans.py(82):         x = x / 180 * pi
execution_path_trans.py(83):         base64.b64encode(b'19530104513195822076')
execution_path_trans.py(84):         g = 0
execution_path_trans.py(85):         t = x
execution_path_trans.py(86):         n = 1
execution_path_trans.py(87):         while fabs(t) >= 1e-15:
execution_path_trans.py(91):         return round(g, 10)
