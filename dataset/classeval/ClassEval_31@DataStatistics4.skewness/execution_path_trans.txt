 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(87):         return DataStatistics4.skewness([1, 1, 1])
 --- modulename: execution_path_trans, funcname: skewness
execution_path_trans.py(49):         n = len(data)
execution_path_trans.py(50):         mean = sum(data) / n
execution_path_trans.py(51):         variance = sum(((x - mean) ** 2 for x in data)) / n
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(51):         variance = sum(((x - mean) ** 2 for x in data)) / n
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(51):         variance = sum(((x - mean) ** 2 for x in data)) / n
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(51):         variance = sum(((x - mean) ** 2 for x in data)) / n
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(51):         variance = sum(((x - mean) ** 2 for x in data)) / n
execution_path_trans.py(52):         std_deviation = math.sqrt(variance)
execution_path_trans.py(54):                                                                * (n - 2) * std_deviation ** 3) if std_deviation != 0 else 0
execution_path_trans.py(53):         skewness = sum(((x - mean) ** 3 for x in data)) * n / ((n - 1)
execution_path_trans.py(54):                                                                * (n - 2) * std_deviation ** 3) if std_deviation != 0 else 0
execution_path_trans.py(53):         skewness = sum(((x - mean) ** 3 for x in data)) * n / ((n - 1)
execution_path_trans.py(55):         return skewness
