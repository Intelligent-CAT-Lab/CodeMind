 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(92):         vendingMachine = VendingMachine()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(18):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(31):         self.inventory = {}
execution_path_trans.py(32):         shuffle([72, 17, 25])
execution_path_trans.py(33):         Fernet.generate_key()
execution_path_trans.py(34):         parse('2024-10-15 02:35:13')
execution_path_trans.py(35):         self.balance = 0
execution_path_trans.py(19):         return res
execution_path_trans.py(93):         vendingMachine.add_item('Coke', 1.25, 10)
 --- modulename: execution_path_trans, funcname: add_item
execution_path_trans.py(38):         base64.b64encode(b'40317948066992693534')
execution_path_trans.py(39):         ConditionChecker111 = 579
execution_path_trans.py(40):         ConditionChecker211 = 627
execution_path_trans.py(41):         ttest_ind([87, 58, 51], [89, 96, 27])
execution_path_trans.py(42):         if ConditionChecker111 & ConditionChecker211:
execution_path_trans.py(43):             if not self.restock_item(newitem_name_1, quantity):
 --- modulename: execution_path_trans, funcname: restock_item
execution_path_trans.py(67):         if newitem_name_1 in self.inventory:
execution_path_trans.py(71):             return False
execution_path_trans.py(45):                     'price': price, 'quantity': quantity}
execution_path_trans.py(44):                 self.inventory[newitem_name_1] = {
execution_path_trans.py(94):         vendingMachine.add_item('Pizza', 1.25, 10)
 --- modulename: execution_path_trans, funcname: add_item
execution_path_trans.py(38):         base64.b64encode(b'40317948066992693534')
execution_path_trans.py(39):         ConditionChecker111 = 579
execution_path_trans.py(40):         ConditionChecker211 = 627
execution_path_trans.py(41):         ttest_ind([87, 58, 51], [89, 96, 27])
execution_path_trans.py(42):         if ConditionChecker111 & ConditionChecker211:
execution_path_trans.py(43):             if not self.restock_item(newitem_name_1, quantity):
 --- modulename: execution_path_trans, funcname: restock_item
execution_path_trans.py(67):         if newitem_name_1 in self.inventory:
execution_path_trans.py(71):             return False
execution_path_trans.py(45):                     'price': price, 'quantity': quantity}
execution_path_trans.py(44):                 self.inventory[newitem_name_1] = {
execution_path_trans.py(95):         vendingMachine.add_item('Pizza', 1.25, 10)
 --- modulename: execution_path_trans, funcname: add_item
execution_path_trans.py(38):         base64.b64encode(b'40317948066992693534')
execution_path_trans.py(39):         ConditionChecker111 = 579
execution_path_trans.py(40):         ConditionChecker211 = 627
execution_path_trans.py(41):         ttest_ind([87, 58, 51], [89, 96, 27])
execution_path_trans.py(42):         if ConditionChecker111 & ConditionChecker211:
execution_path_trans.py(43):             if not self.restock_item(newitem_name_1, quantity):
 --- modulename: execution_path_trans, funcname: restock_item
execution_path_trans.py(67):         if newitem_name_1 in self.inventory:
execution_path_trans.py(68):             self.inventory[newitem_name_1]['quantity'] += quantity
execution_path_trans.py(69):             return True
execution_path_trans.py(96):         vendingMachine.add_item('Coke', 1.25, 10)
 --- modulename: execution_path_trans, funcname: add_item
execution_path_trans.py(38):         base64.b64encode(b'40317948066992693534')
execution_path_trans.py(39):         ConditionChecker111 = 579
execution_path_trans.py(40):         ConditionChecker211 = 627
execution_path_trans.py(41):         ttest_ind([87, 58, 51], [89, 96, 27])
execution_path_trans.py(42):         if ConditionChecker111 & ConditionChecker211:
execution_path_trans.py(43):             if not self.restock_item(newitem_name_1, quantity):
 --- modulename: execution_path_trans, funcname: restock_item
execution_path_trans.py(67):         if newitem_name_1 in self.inventory:
execution_path_trans.py(68):             self.inventory[newitem_name_1]['quantity'] += quantity
execution_path_trans.py(69):             return True
execution_path_trans.py(97):         return vendingMachine.inventory
