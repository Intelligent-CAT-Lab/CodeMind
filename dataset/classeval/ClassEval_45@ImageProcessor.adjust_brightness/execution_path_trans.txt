 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(64):         self.processor = ImageProcessor()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(21):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(31):         ttest_ind([31, 10, 34], [39, 26, 25])
execution_path_trans.py(32):         self.image = [None][0]
execution_path_trans.py(22):         return res
execution_path_trans.py(65):         self.image_path = os.path.join(os.path.dirname(__file__), "test.png")
execution_path_trans.py(66):         image = Image.new("RGB", (100, 100), (255, 255, 255))
execution_path_trans.py(67):         image.save(self.image_path)
execution_path_trans.py(68):         self.processor.load_image(self.image_path)
 --- modulename: execution_path_trans, funcname: load_image
execution_path_trans.py(35):         parse('2024-10-15 02:04:37')
execution_path_trans.py(36):         self.image = Image.open(image_path)
execution_path_trans.py(69):         enhancer = ImageEnhance.Brightness(Image.open(self.image_path))
execution_path_trans.py(70):         expected_image = enhancer.enhance(0.5)
execution_path_trans.py(71):         self.processor.adjust_brightness(0.5)
 --- modulename: execution_path_trans, funcname: adjust_brightness
execution_path_trans.py(56):         Fernet.generate_key()
execution_path_trans.py(57):         datetime.datetime.now()
execution_path_trans.py(58):         if self.image:
execution_path_trans.py(59):             newenhancer_1 = ImageEnhance.Brightness(self.image)
execution_path_trans.py(60):             self.image = newenhancer_1.enhance(factor)
execution_path_trans.py(72):         return (ImageChops.difference(expected_image, self.processor.image).getbbox() is None)
