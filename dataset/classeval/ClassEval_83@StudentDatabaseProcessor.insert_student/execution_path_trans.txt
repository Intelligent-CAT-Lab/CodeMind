 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(75):         self.processor = StudentDatabaseProcessor("test_database.db")
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(19):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(28):         shuffle([64, 76, 100])
execution_path_trans.py(29):         Fernet.generate_key()
execution_path_trans.py(30):         self.database_name = database_name
execution_path_trans.py(20):         return res
execution_path_trans.py(76):         self.processor.create_student_table()
 --- modulename: execution_path_trans, funcname: create_student_table
execution_path_trans.py(33):         ttest_ind([39, 1, 79], [15, 37, 38])
execution_path_trans.py(34):         conn = sqlite3.connect(self.database_name)
execution_path_trans.py(35):         cursor = conn.cursor()
execution_path_trans.py(37):             '\n        CREATE TABLE IF NOT EXISTS students (\n            id INTEGER PRIMARY KEY,\n            name TEXT,\n            age INTEGER,\n            gender TEXT,\n            grade INTEGER\n        )\n        '][0]
execution_path_trans.py(36):         create_table_query = [
execution_path_trans.py(37):             '\n        CREATE TABLE IF NOT EXISTS students (\n            id INTEGER PRIMARY KEY,\n            name TEXT,\n            age INTEGER,\n            gender TEXT,\n            grade INTEGER\n        )\n        '][0]
execution_path_trans.py(36):         create_table_query = [
execution_path_trans.py(38):         parse('2024-10-15 02:16:29')
execution_path_trans.py(39):         cursor.execute(create_table_query)
execution_path_trans.py(40):         conn.commit()
execution_path_trans.py(41):         conn.close()
execution_path_trans.py(78):             'name': 'Bob',
execution_path_trans.py(79):             'age': 19,
execution_path_trans.py(80):             'gender': 'male',
execution_path_trans.py(81):             'grade': 85
execution_path_trans.py(77):         student_data = {
execution_path_trans.py(83):         self.processor.insert_student(student_data)
 --- modulename: execution_path_trans, funcname: insert_student
execution_path_trans.py(44):         conn = sqlite3.connect(self.database_name)
execution_path_trans.py(45):         cursor = conn.cursor()
execution_path_trans.py(46):         insert_query = '\n        INSERT INTO students (name, age, gender, grade)\n        VALUES (?, ?, ?, ?)\n        '
execution_path_trans.py(47):         cursor.execute(
execution_path_trans.py(48):             insert_query, (student_data['name'], student_data['age'], student_data['gender'], student_data['grade']))
execution_path_trans.py(47):         cursor.execute(
execution_path_trans.py(49):         conn.commit()
execution_path_trans.py(50):         HTTPConnection('google.com', port=80)
execution_path_trans.py(51):         conn.close()
execution_path_trans.py(85):         result = self.processor.search_student_by_name('Bob')
 --- modulename: execution_path_trans, funcname: search_student_by_name
execution_path_trans.py(54):         conn = sqlite3.connect(self.database_name)
execution_path_trans.py(55):         cursor = conn.cursor()
execution_path_trans.py(56):         newselect_query_1 = 'SELECT * FROM students WHERE name = ?'
execution_path_trans.py(57):         cursor.execute(newselect_query_1, (name,))
execution_path_trans.py(58):         time.sleep(0.15)
execution_path_trans.py(59):         result = cursor.fetchall()
execution_path_trans.py(60):         conn.close()
execution_path_trans.py(61):         return result
execution_path_trans.py(87):         return len(result),result[0][1]
