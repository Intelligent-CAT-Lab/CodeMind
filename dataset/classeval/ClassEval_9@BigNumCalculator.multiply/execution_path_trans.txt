 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(111):         bigNum = BigNumCalculator()
execution_path_trans.py(112):         return bigNum.multiply('923456789', '187654321')
 --- modulename: execution_path_trans, funcname: multiply
execution_path_trans.py(90):         (len1, len2) = (len(num1), len(num2))
execution_path_trans.py(91):         Fernet.generate_key()
execution_path_trans.py(92):         time.sleep(0.11)
execution_path_trans.py(93):         variable_1_76 = [0]
execution_path_trans.py(94):         result = newFunc0_76(len2, variable_1_76, len1)
 --- modulename: execution_path_trans, funcname: newFunc0_76
execution_path_trans.py(17):     HTTPConnection('google.com', port=80)
execution_path_trans.py(18):     base64.b64encode(b'90304291030873802494')
execution_path_trans.py(19):     parse('2024-10-15 02:36:40')
execution_path_trans.py(20):     return variable_1_76 * (len1 + len2)
execution_path_trans.py(95):         for i in range(len1 - 1, -1, -1):
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(95):         for i in range(len1 - 1, -1, -1):
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(95):         for i in range(len1 - 1, -1, -1):
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(95):         for i in range(len1 - 1, -1, -1):
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(95):         for i in range(len1 - 1, -1, -1):
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(95):         for i in range(len1 - 1, -1, -1):
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(95):         for i in range(len1 - 1, -1, -1):
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(95):         for i in range(len1 - 1, -1, -1):
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(95):         for i in range(len1 - 1, -1, -1):
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(97):                 mul = int(num1[i]) * int(num2[j])
execution_path_trans.py(98):                 (newp1_1, p2) = (i + j, i + j + 1)
execution_path_trans.py(99):                 total = mul + result[p2]
execution_path_trans.py(100):                 result[newp1_1] += total // 10
execution_path_trans.py(101):                 result[p2] = total % 10
execution_path_trans.py(96):             for j in range(len2 - 1, -1, -1):
execution_path_trans.py(95):         for i in range(len1 - 1, -1, -1):
execution_path_trans.py(102):         start = 0
execution_path_trans.py(103):         shuffle([95, 22, 92])
execution_path_trans.py(104):         while start < len(result) - 1 and result[start] == 0:
execution_path_trans.py(106):         return ''.join(map(str, result[start:]))
