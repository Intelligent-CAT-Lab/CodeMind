 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(87):             bigNum = BigNumCalculator()
execution_path.py(88):             return bigNum.multiply('923456789', '187654321')
 --- modulename: execution_path, funcname: multiply
execution_path.py(68):         len1, len2 = len(num1), len(num2)
execution_path.py(69):         result = [0] * (len1 + len2)
execution_path.py(71):         for i in range(len1 - 1, -1, -1):
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(71):         for i in range(len1 - 1, -1, -1):
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(71):         for i in range(len1 - 1, -1, -1):
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(71):         for i in range(len1 - 1, -1, -1):
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(71):         for i in range(len1 - 1, -1, -1):
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(71):         for i in range(len1 - 1, -1, -1):
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(71):         for i in range(len1 - 1, -1, -1):
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(71):         for i in range(len1 - 1, -1, -1):
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(71):         for i in range(len1 - 1, -1, -1):
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(73):                 mul = int(num1[i]) * int(num2[j])
execution_path.py(74):                 p1, p2 = i + j, i + j + 1
execution_path.py(75):                 total = mul + result[p2]
execution_path.py(77):                 result[p1] += total // 10
execution_path.py(78):                 result[p2] = total % 10
execution_path.py(72):             for j in range(len2 - 1, -1, -1):
execution_path.py(71):         for i in range(len1 - 1, -1, -1):
execution_path.py(80):         start = 0
execution_path.py(81):         while start < len(result) - 1 and result[start] == 0:
execution_path.py(84):         return ''.join(map(str, result[start:]))
