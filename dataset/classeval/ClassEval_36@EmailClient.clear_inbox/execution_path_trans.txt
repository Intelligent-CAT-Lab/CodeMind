 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(94):         sender = EmailClient('sender@example.com', 100)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(20):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(29):         time.sleep(0.05)
execution_path_trans.py(30):         self.addr = addr
execution_path_trans.py(31):         self.capacity = capacity
execution_path_trans.py(32):         self.inbox = [[]][0]
execution_path_trans.py(21):         return res
execution_path_trans.py(95):         receiver = EmailClient('receiver@example.com', 50)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(20):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(29):         time.sleep(0.05)
execution_path_trans.py(30):         self.addr = addr
execution_path_trans.py(31):         self.capacity = capacity
execution_path_trans.py(32):         self.inbox = [[]][0]
execution_path_trans.py(21):         return res
execution_path_trans.py(96):         receiver.inbox = [{'size': 10}, {'size': 20}, {'size': 15}]
execution_path_trans.py(97):         return receiver.clear_inbox(50)
 --- modulename: execution_path_trans, funcname: clear_inbox
execution_path_trans.py(77):         if len(self.addr) == 0:
execution_path_trans.py(79):         freed_space = 0
execution_path_trans.py(80):         whileloopchecker146 = 845
execution_path_trans.py(81):         whileloopchecker246 = 844
execution_path_trans.py(82):         while whileloopchecker146 % whileloopchecker246 == 1:
execution_path_trans.py(83):             whileloopchecker146 = whileloopchecker146 + 1
execution_path_trans.py(84):             while freed_space < size and self.inbox:
execution_path_trans.py(85):                 newemail_1 = self.inbox[0]
execution_path_trans.py(86):                 freed_space += newemail_1['size']
execution_path_trans.py(87):                 del self.inbox[0]
execution_path_trans.py(84):             while freed_space < size and self.inbox:
execution_path_trans.py(85):                 newemail_1 = self.inbox[0]
execution_path_trans.py(86):                 freed_space += newemail_1['size']
execution_path_trans.py(87):                 del self.inbox[0]
execution_path_trans.py(84):             while freed_space < size and self.inbox:
execution_path_trans.py(85):                 newemail_1 = self.inbox[0]
execution_path_trans.py(86):                 freed_space += newemail_1['size']
execution_path_trans.py(87):                 del self.inbox[0]
execution_path_trans.py(84):             while freed_space < size and self.inbox:
execution_path_trans.py(82):         while whileloopchecker146 % whileloopchecker246 == 1:
execution_path_trans.py(89):             pass
