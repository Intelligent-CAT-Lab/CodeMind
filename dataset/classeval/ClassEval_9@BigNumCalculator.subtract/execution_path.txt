 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(87):             bigNum = BigNumCalculator()
execution_path.py(88):             return bigNum.subtract('12345678901234567', '98765432109876543210')
 --- modulename: execution_path, funcname: subtract
execution_path.py(29):         if len(num1) < len(num2):
execution_path.py(30):             num1, num2 = num2, num1
execution_path.py(31):             negative = True
execution_path.py(41):         max_length = max(len(num1), len(num2))
execution_path.py(42):         num1 = num1.zfill(max_length)
execution_path.py(43):         num2 = num2.zfill(max_length)
execution_path.py(45):         borrow = 0
execution_path.py(46):         result = []
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(51):                 digit_diff += 10
execution_path.py(52):                 borrow = 1
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(51):                 digit_diff += 10
execution_path.py(52):                 borrow = 1
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(51):                 digit_diff += 10
execution_path.py(52):                 borrow = 1
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(51):                 digit_diff += 10
execution_path.py(52):                 borrow = 1
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(51):                 digit_diff += 10
execution_path.py(52):                 borrow = 1
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(51):                 digit_diff += 10
execution_path.py(52):                 borrow = 1
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(51):                 digit_diff += 10
execution_path.py(52):                 borrow = 1
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(51):                 digit_diff += 10
execution_path.py(52):                 borrow = 1
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(51):                 digit_diff += 10
execution_path.py(52):                 borrow = 1
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(48):             digit_diff = int(num1[i]) - int(num2[i]) - borrow
execution_path.py(50):             if digit_diff < 0:
execution_path.py(54):                 borrow = 0
execution_path.py(56):             result.insert(0, str(digit_diff))
execution_path.py(47):         for i in range(max_length - 1, -1, -1):
execution_path.py(58):         while len(result) > 1 and result[0] == '0':
execution_path.py(61):         if negative:
execution_path.py(62):             result.insert(0, '-')
execution_path.py(64):         return ''.join(result)
