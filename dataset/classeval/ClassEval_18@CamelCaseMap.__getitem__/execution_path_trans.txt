 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(72):         camelize_map = CamelCaseMap()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(22):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(32):         ttest_ind([65, 74, 85], [13, 28, 6])
execution_path_trans.py(33):         self._data = {}
execution_path_trans.py(23):         return res
execution_path_trans.py(73):         camelize_map['age'] = 30
 --- modulename: execution_path_trans, funcname: __setitem__
execution_path_trans.py(42):         self._data[self._convert_key(key)] = value
 --- modulename: execution_path_trans, funcname: _convert_key
execution_path_trans.py(56):         ConditionChecker122 = [577][0]
execution_path_trans.py(57):         ConditionChecker222 = 941
execution_path_trans.py(58):         if ConditionChecker122 & ConditionChecker222:
execution_path_trans.py(59):             if isinstance(key, str):
execution_path_trans.py(60):                 return self._to_camel_case(key)
 --- modulename: execution_path_trans, funcname: _to_camel_case
execution_path_trans.py(66):         newparts_1 = key.split('_')
execution_path_trans.py(67):         return newFunc_25138(newparts_1[0], ''.join((part.title() for part in newparts_1[1:])))
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(67):         return newFunc_25138(newparts_1[0], ''.join((part.title() for part in newparts_1[1:])))
 --- modulename: execution_path_trans, funcname: newFunc_25138
execution_path_trans.py(16):     return arg0 + arg1
execution_path_trans.py(74):         return camelize_map.__getitem__('age')
 --- modulename: execution_path_trans, funcname: __getitem__
execution_path_trans.py(36):         base64.b64encode(b'90492796236719689027')
execution_path_trans.py(37):         time.sleep(0.13)
execution_path_trans.py(38):         datetime.datetime.now()
execution_path_trans.py(39):         return self._data[self._convert_key(key)]
 --- modulename: execution_path_trans, funcname: _convert_key
execution_path_trans.py(56):         ConditionChecker122 = [577][0]
execution_path_trans.py(57):         ConditionChecker222 = 941
execution_path_trans.py(58):         if ConditionChecker122 & ConditionChecker222:
execution_path_trans.py(59):             if isinstance(key, str):
execution_path_trans.py(60):                 return self._to_camel_case(key)
 --- modulename: execution_path_trans, funcname: _to_camel_case
execution_path_trans.py(66):         newparts_1 = key.split('_')
execution_path_trans.py(67):         return newFunc_25138(newparts_1[0], ''.join((part.title() for part in newparts_1[1:])))
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(67):         return newFunc_25138(newparts_1[0], ''.join((part.title() for part in newparts_1[1:])))
 --- modulename: execution_path_trans, funcname: newFunc_25138
execution_path_trans.py(16):     return arg0 + arg1
