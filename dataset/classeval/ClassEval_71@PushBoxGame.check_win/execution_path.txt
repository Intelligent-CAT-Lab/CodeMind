 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(69):             self.game_map = [
execution_path.py(76):             self.game = PushBoxGame(self.game_map)
 --- modulename: execution_path, funcname: __init__
execution_path.py(8):         self.map = map
execution_path.py(9):         self.player_row = 0
execution_path.py(10):         self.player_col = 0
execution_path.py(11):         self.targets = []
execution_path.py(12):         self.boxes = []
execution_path.py(13):         self.target_count = 0
execution_path.py(14):         self.is_game_over = False
execution_path.py(16):         self.init_game()
 --- modulename: execution_path, funcname: init_game
execution_path.py(19):         for row in range(len(self.map)):
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(19):         for row in range(len(self.map)):
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(22):                     self.player_row = row
execution_path.py(23):                     self.player_col = col
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(19):         for row in range(len(self.map)):
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(28):                     self.boxes.append((row, col))
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(19):         for row in range(len(self.map)):
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(25):                     self.targets.append((row, col))
execution_path.py(26):                     self.target_count += 1
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(19):         for row in range(len(self.map)):
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(21):                 if self.map[row][col] == "O":
execution_path.py(24):                 elif self.map[row][col] == "G":
execution_path.py(27):                 elif self.map[row][col] == "X":
execution_path.py(20):             for col in range(len(self.map[row])):
execution_path.py(19):         for row in range(len(self.map)):
execution_path.py(77):             return self.game.check_win()
 --- modulename: execution_path, funcname: check_win
execution_path.py(31):         box_on_target_count = 0
execution_path.py(32):         for box in self.boxes:
execution_path.py(33):             if box in self.targets:
execution_path.py(32):         for box in self.boxes:
execution_path.py(35):         if box_on_target_count == self.target_count:
execution_path.py(37):         return self.is_game_over
