 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(50):             fitnessTracker = FitnessTracker(1.72, 53, 22, "male")
 --- modulename: execution_path, funcname: __init__
execution_path.py(8):         self.height = height
execution_path.py(9):         self.weight = weight
execution_path.py(10):         self.age = age
execution_path.py(11):         self.sex = sex
execution_path.py(13):             {"male": [20, 25]},
execution_path.py(14):             {"female": [19, 24]}
execution_path.py(12):         self.BMI_std = [
execution_path.py(51):             return fitnessTracker.calculate_calorie_intake()
 --- modulename: execution_path, funcname: calculate_calorie_intake
execution_path.py(37):         if self.sex == "male":
execution_path.py(38):             BMR = 10 * self.weight + 6.25 * self.height - 5 * self.age + 5
execution_path.py(41):         if self.condition_judge() == 1:
 --- modulename: execution_path, funcname: condition_judge
execution_path.py(21):         BMI = self.get_BMI()
 --- modulename: execution_path, funcname: get_BMI
execution_path.py(18):         return self.weight / self.height ** 2
execution_path.py(22):         if self.sex == "male":
execution_path.py(23):             BMI_range = self.BMI_std[0]["male"]
execution_path.py(26):         if BMI > BMI_range[1]:
execution_path.py(29):         elif BMI < BMI_range[0]:
execution_path.py(31):             return -1
execution_path.py(43):         elif self.condition_judge() == -1:
 --- modulename: execution_path, funcname: condition_judge
execution_path.py(21):         BMI = self.get_BMI()
 --- modulename: execution_path, funcname: get_BMI
execution_path.py(18):         return self.weight / self.height ** 2
execution_path.py(22):         if self.sex == "male":
execution_path.py(23):             BMI_range = self.BMI_std[0]["male"]
execution_path.py(26):         if BMI > BMI_range[1]:
execution_path.py(29):         elif BMI < BMI_range[0]:
execution_path.py(31):             return -1
execution_path.py(44):             calorie_intake = BMR * 1.6  # Active lifestyle
execution_path.py(47):         return calorie_intake
