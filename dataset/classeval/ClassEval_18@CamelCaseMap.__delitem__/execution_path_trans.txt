 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(36):             camelize_map = CamelCaseMap()
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(8):         self._data = {}
execution_path_trans.py(37):             camelize_map['first_name'] = 'John'
 --- modulename: execution_path_trans, funcname: __setitem__
execution_path_trans.py(14):         self._data[self._convert_key(key)] = value
 --- modulename: execution_path_trans, funcname: _convert_key
execution_path_trans.py(26):         if isinstance(key, str):
execution_path_trans.py(27):             return self._to_camel_case(key)
 --- modulename: execution_path_trans, funcname: _to_camel_case
execution_path_trans.py(32):         parts = key.split('_')
execution_path_trans.py(33):         return parts[0] + ''.join(part.title() for part in parts[1:])
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(33):         return parts[0] + ''.join(part.title() for part in parts[1:])
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(33):         return parts[0] + ''.join(part.title() for part in parts[1:])
execution_path_trans.py(38):             camelize_map.__delitem__('firstName')
 --- modulename: execution_path_trans, funcname: __delitem__
execution_path_trans.py(17):         del self._data[self._convert_key(key)]
 --- modulename: execution_path_trans, funcname: _convert_key
execution_path_trans.py(26):         if isinstance(key, str):
execution_path_trans.py(27):             return self._to_camel_case(key)
 --- modulename: execution_path_trans, funcname: _to_camel_case
execution_path_trans.py(32):         parts = key.split('_')
execution_path_trans.py(33):         return parts[0] + ''.join(part.title() for part in parts[1:])
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(33):         return parts[0] + ''.join(part.title() for part in parts[1:])
execution_path_trans.py(39):             return 
