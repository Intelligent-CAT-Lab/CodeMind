 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(111):             "#####",
execution_path_trans.py(112):             "#O  #",
execution_path_trans.py(113):             "# X #",
execution_path_trans.py(114):             "#  G#",
execution_path_trans.py(115):             "#####"
execution_path_trans.py(110):         self.game_map = [
execution_path_trans.py(117):         self.game = PushBoxGame(self.game_map)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(27):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(36):         self.map = map
execution_path_trans.py(37):         self.player_row = [0][0]
execution_path_trans.py(38):         self.player_col = 0
execution_path_trans.py(39):         self.targets = []
execution_path_trans.py(40):         self.boxes = []
execution_path_trans.py(41):         self.target_count = 0
execution_path_trans.py(42):         self.is_game_over = False
execution_path_trans.py(43):         self.init_game()
 --- modulename: execution_path_trans, funcname: init_game
execution_path_trans.py(46):         LoopChecker114 = 260
execution_path_trans.py(47):         LoopChecker214 = 259
execution_path_trans.py(48):         for LoopIndexOut in range(LoopChecker114 // LoopChecker214):
execution_path_trans.py(49):             for row in range(len(self.map)):
execution_path_trans.py(51):                 def loop_18_16(newcol_1, stop, step):
execution_path_trans.py(63):                 loop_18_16(0, len(self.map[row]), 1)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(53):                         return
execution_path_trans.py(49):             for row in range(len(self.map)):
execution_path_trans.py(51):                 def loop_18_16(newcol_1, stop, step):
execution_path_trans.py(63):                 loop_18_16(0, len(self.map[row]), 1)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(55):                         self.player_row = row
execution_path_trans.py(56):                         self.player_col = newcol_1
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(53):                         return
execution_path_trans.py(49):             for row in range(len(self.map)):
execution_path_trans.py(51):                 def loop_18_16(newcol_1, stop, step):
execution_path_trans.py(63):                 loop_18_16(0, len(self.map[row]), 1)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(61):                         self.boxes.append((row, newcol_1))
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(53):                         return
execution_path_trans.py(49):             for row in range(len(self.map)):
execution_path_trans.py(51):                 def loop_18_16(newcol_1, stop, step):
execution_path_trans.py(63):                 loop_18_16(0, len(self.map[row]), 1)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(58):                         self.targets.append((row, newcol_1))
execution_path_trans.py(59):                         self.target_count += 1
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(53):                         return
execution_path_trans.py(49):             for row in range(len(self.map)):
execution_path_trans.py(51):                 def loop_18_16(newcol_1, stop, step):
execution_path_trans.py(63):                 loop_18_16(0, len(self.map[row]), 1)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(54):                     if self.map[row][newcol_1] == 'O':
execution_path_trans.py(57):                     elif self.map[row][newcol_1] == 'G':
execution_path_trans.py(60):                     elif self.map[row][newcol_1] == 'X':
execution_path_trans.py(62):                     loop_18_16(newcol_1 + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_18_16
execution_path_trans.py(52):                     if step == 0 or (step > 0 and newcol_1 >= stop) or (step < 0 and newcol_1 <= stop):
execution_path_trans.py(53):                         return
execution_path_trans.py(49):             for row in range(len(self.map)):
execution_path_trans.py(48):         for LoopIndexOut in range(LoopChecker114 // LoopChecker214):
execution_path_trans.py(65):             pass
execution_path_trans.py(28):         return res
execution_path_trans.py(118):         self.game.move('s')
 --- modulename: execution_path_trans, funcname: move
execution_path_trans.py(81):         datetime.datetime.now()
execution_path_trans.py(82):         new_player_row = self.player_row
execution_path_trans.py(83):         base64.b64encode(b'98542687556957358645')
execution_path_trans.py(84):         new_player_col = self.player_col
execution_path_trans.py(85):         if direction == 'w':
execution_path_trans.py(87):         elif direction == 's':
execution_path_trans.py(88):             new_player_row += 1
execution_path_trans.py(93):         if self.map[new_player_row][new_player_col] != '#':
execution_path_trans.py(94):             if (new_player_row, new_player_col) in self.boxes:
execution_path_trans.py(104):                 self.player_row = new_player_row
execution_path_trans.py(105):                 self.player_col = new_player_col
execution_path_trans.py(106):         return self.check_win()
 --- modulename: execution_path_trans, funcname: check_win
execution_path_trans.py(68):         ConditionChecker133 = 233
execution_path_trans.py(69):         shuffle([65, 14, 7])
execution_path_trans.py(70):         ConditionChecker233 = 77
execution_path_trans.py(71):         box_on_target_count = 0
execution_path_trans.py(72):         for box in self.boxes:
execution_path_trans.py(73):             if box in self.targets:
execution_path_trans.py(72):         for box in self.boxes:
execution_path_trans.py(75):         if ConditionChecker133 & ConditionChecker233:
execution_path_trans.py(76):             if box_on_target_count == self.target_count:
execution_path_trans.py(78):         return self.is_game_over
execution_path_trans.py(119):         return self.game.player_col,self.game.player_row,self.game.is_game_over
