 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(42):             self.order = Order()
 --- modulename: execution_path, funcname: __init__
execution_path.py(9):         self.menu = []
execution_path.py(11):         self.selected_dishes = []
execution_path.py(13):         self.sales = {}
execution_path.py(43):             self.order.menu.append({"dish": "dish1", "price": 10, "count": 5})
execution_path.py(44):             self.order.menu.append({"dish": "dish2", "price": 15, "count": 3})
execution_path.py(45):             self.order.menu.append({"dish": "dish3", "price": 20, "count": 7})
execution_path.py(46):             self.order.sales = {"dish1": 0.9, "dish2": 1, "dish3": 0.8}
execution_path.py(47):             self.order.add_dish({"dish": "dish1", "price": 10, "count": 2})
 --- modulename: execution_path, funcname: add_dish
execution_path.py(18):         for menu_dish in self.menu:
execution_path.py(19):             if dish["dish"] == menu_dish["dish"]:
execution_path.py(20):                 if menu_dish["count"] < dish["count"]:
execution_path.py(23):                     menu_dish["count"] -= dish["count"]
execution_path.py(24):                     break
execution_path.py(25):         self.selected_dishes.append(dish)
execution_path.py(26):         return True
execution_path.py(48):             self.order.add_dish({"dish": "dish3", "price": 20, "count": 2})
 --- modulename: execution_path, funcname: add_dish
execution_path.py(18):         for menu_dish in self.menu:
execution_path.py(19):             if dish["dish"] == menu_dish["dish"]:
execution_path.py(18):         for menu_dish in self.menu:
execution_path.py(19):             if dish["dish"] == menu_dish["dish"]:
execution_path.py(18):         for menu_dish in self.menu:
execution_path.py(19):             if dish["dish"] == menu_dish["dish"]:
execution_path.py(20):                 if menu_dish["count"] < dish["count"]:
execution_path.py(23):                     menu_dish["count"] -= dish["count"]
execution_path.py(24):                     break
execution_path.py(25):         self.selected_dishes.append(dish)
execution_path.py(26):         return True
execution_path.py(49):             result = self.order.calculate_total()
 --- modulename: execution_path, funcname: calculate_total
execution_path.py(29):         total = 0
execution_path.py(30):         for dish in self.selected_dishes:
execution_path.py(31):             total += dish["price"] * dish["count"] * self.sales[dish["dish"]]
execution_path.py(30):         for dish in self.selected_dishes:
execution_path.py(31):             total += dish["price"] * dish["count"] * self.sales[dish["dish"]]
execution_path.py(30):         for dish in self.selected_dishes:
execution_path.py(32):         return total
execution_path.py(50):             return result
