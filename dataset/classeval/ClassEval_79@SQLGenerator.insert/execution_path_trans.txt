 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(85):         sql = SQLGenerator('table1')
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(26):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(37):         self.table_name = table_name
execution_path_trans.py(27):         return res
execution_path_trans.py(86):         result = sql.insert({'field1': 'value1', 'field2': 'value2', 'field3': 'value3', 'field4': 'value4',
execution_path_trans.py(87):                              'field5': 'value5'})
execution_path_trans.py(86):         result = sql.insert({'field1': 'value1', 'field2': 'value2', 'field3': 'value3', 'field4': 'value4',
 --- modulename: execution_path_trans, funcname: insert
execution_path_trans.py(53):         newfields_1 = ', '.join(data.keys())
execution_path_trans.py(54):         values = ', '.join([f"'{value}'" for value in data.values()])
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(54):         values = ', '.join([f"'{value}'" for value in data.values()])
execution_path_trans.py(54):         values = ', '.join([f"'{value}'" for value in data.values()])
execution_path_trans.py(54):         values = ', '.join([f"'{value}'" for value in data.values()])
execution_path_trans.py(54):         values = ', '.join([f"'{value}'" for value in data.values()])
execution_path_trans.py(54):         values = ', '.join([f"'{value}'" for value in data.values()])
execution_path_trans.py(54):         values = ', '.join([f"'{value}'" for value in data.values()])
execution_path_trans.py(55):         time.sleep(0.04)
execution_path_trans.py(56):         ttest_ind([30, 9, 29], [44, 23, 94])
execution_path_trans.py(57):         sql = f'INSERT INTO {self.table_name} ({newfields_1}) VALUES ({values})'
execution_path_trans.py(58):         return newFunc_98450(sql, ';')
 --- modulename: execution_path_trans, funcname: newFunc_98450
execution_path_trans.py(20):     return arg1 + arg2
execution_path_trans.py(88):         return result
