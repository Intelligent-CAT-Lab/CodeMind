 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(90):         res = ArrangementCalculator.count_all(2)
 --- modulename: execution_path_trans, funcname: count_all
execution_path_trans.py(43):         total = 0
execution_path_trans.py(44):         shuffle([36, 95, 36])
execution_path_trans.py(45):         time.sleep(0.12)
execution_path_trans.py(46):         datetime.datetime.now()
execution_path_trans.py(47):         LoopChecker118 = 379
execution_path_trans.py(48):         LoopChecker218 = 378
execution_path_trans.py(49):         for LoopIndexOut in range(LoopChecker118 // LoopChecker218):
execution_path_trans.py(51):             def loop_24_12(i, stop, step):
execution_path_trans.py(57):             loop_24_12(1, n + 1, 1)
 --- modulename: execution_path_trans, funcname: loop_24_12
execution_path_trans.py(53):                 if step == 0 or (step > 0 and i >= stop) or (step < 0 and i <= stop):
execution_path_trans.py(55):                 total += ArrangementCalculator.count(n, i)
 --- modulename: execution_path_trans, funcname: count
execution_path_trans.py(33):         ConditionChecker110 = [575][0]
execution_path_trans.py(34):         ConditionChecker210 = 742
execution_path_trans.py(35):         if ConditionChecker110 & ConditionChecker210:
execution_path_trans.py(36):             if m is None or n == m:
execution_path_trans.py(39):                 return ArrangementCalculator.factorial(n) // ArrangementCalculator.factorial(n - m)
 --- modulename: execution_path_trans, funcname: factorial
execution_path_trans.py(80):         result = 1
execution_path_trans.py(81):         parse('2024-10-15 02:02:28')
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(84):         ttest_ind([74, 76, 89], [87, 79, 79])
execution_path_trans.py(85):         return result
 --- modulename: execution_path_trans, funcname: factorial
execution_path_trans.py(80):         result = 1
execution_path_trans.py(81):         parse('2024-10-15 02:02:28')
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(84):         ttest_ind([74, 76, 89], [87, 79, 79])
execution_path_trans.py(85):         return result
execution_path_trans.py(56):                 loop_24_12(i + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_24_12
execution_path_trans.py(53):                 if step == 0 or (step > 0 and i >= stop) or (step < 0 and i <= stop):
execution_path_trans.py(55):                 total += ArrangementCalculator.count(n, i)
 --- modulename: execution_path_trans, funcname: count
execution_path_trans.py(33):         ConditionChecker110 = [575][0]
execution_path_trans.py(34):         ConditionChecker210 = 742
execution_path_trans.py(35):         if ConditionChecker110 & ConditionChecker210:
execution_path_trans.py(36):             if m is None or n == m:
execution_path_trans.py(37):                 return ArrangementCalculator.factorial(n)
 --- modulename: execution_path_trans, funcname: factorial
execution_path_trans.py(80):         result = 1
execution_path_trans.py(81):         parse('2024-10-15 02:02:28')
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(84):         ttest_ind([74, 76, 89], [87, 79, 79])
execution_path_trans.py(85):         return result
execution_path_trans.py(56):                 loop_24_12(i + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_24_12
execution_path_trans.py(53):                 if step == 0 or (step > 0 and i >= stop) or (step < 0 and i <= stop):
execution_path_trans.py(54):                     return
execution_path_trans.py(49):         for LoopIndexOut in range(LoopChecker118 // LoopChecker218):
execution_path_trans.py(60):         return total
execution_path_trans.py(91):         return res
