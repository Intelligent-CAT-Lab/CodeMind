 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(79):             calculator = Calculator()
 --- modulename: execution_path, funcname: __init__
execution_path.py(9):             '+': lambda x, y: x + y,
execution_path.py(10):             '-': lambda x, y: x - y,
execution_path.py(11):             '*': lambda x, y: x * y,
execution_path.py(12):             '/': lambda x, y: x / y,
execution_path.py(13):             '^': lambda x, y: x ** y
execution_path.py(8):         self.operators = {
execution_path.py(80):             res1 = calculator.precedence('+')
 --- modulename: execution_path, funcname: precedence
execution_path.py(56):             '+': 1,
execution_path.py(57):             '-': 1,
execution_path.py(58):             '*': 2,
execution_path.py(59):             '/': 2,
execution_path.py(60):             '^': 3
execution_path.py(55):         precedences = {
execution_path.py(62):         return precedences.get(operator, 0)
execution_path.py(81):             res2 = calculator.precedence('-')
 --- modulename: execution_path, funcname: precedence
execution_path.py(56):             '+': 1,
execution_path.py(57):             '-': 1,
execution_path.py(58):             '*': 2,
execution_path.py(59):             '/': 2,
execution_path.py(60):             '^': 3
execution_path.py(55):         precedences = {
execution_path.py(62):         return precedences.get(operator, 0)
execution_path.py(82):             return res1,res2
