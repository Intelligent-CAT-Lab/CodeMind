 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(80):             mc = MahjongConnect([4, 4], ['a', 'b', 'c'])
 --- modulename: execution_path, funcname: __init__
execution_path.py(11):         self.BOARD_SIZE = BOARD_SIZE
execution_path.py(12):         self.ICONS = ICONS
execution_path.py(13):         self.board = self.create_board()
 --- modulename: execution_path, funcname: create_board
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(16):         board = [[random.choice(self.ICONS) for _ in range(self.BOARD_SIZE[1])] for _ in range(self.BOARD_SIZE[0])]
execution_path.py(17):         return board
execution_path.py(81):             mc.board = [['a', 'b', 'c', 'a'],
execution_path.py(82):                         ['a', 'b', 'c', 'a'],
execution_path.py(83):                         ['a', 'b', 'c', 'a'],
execution_path.py(84):                         ['a', 'b', 'c', 'a']]
execution_path.py(81):             mc.board = [['a', 'b', 'c', 'a'],
execution_path.py(85):             mc.remove_icons((3, 0), (2, 0))
 --- modulename: execution_path, funcname: remove_icons
execution_path.py(68):         x1, y1 = pos1
execution_path.py(69):         x2, y2 = pos2
execution_path.py(70):         self.board[x1][y1] = ' '
execution_path.py(71):         self.board[x2][y2] = ' '
execution_path.py(86):             return mc.board
