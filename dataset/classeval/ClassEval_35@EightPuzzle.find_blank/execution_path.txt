 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(66):             state = [[2, 3, 4], [5, 8, 1], [6, 8, 7]]
execution_path.py(67):             eightPuzzle = EightPuzzle(state)
 --- modulename: execution_path, funcname: __init__
execution_path.py(8):         self.initial_state = initial_state
execution_path.py(9):         self.goal_state = [[1, 2, 3], [4, 5, 6], [7, 8, 0]]
execution_path.py(68):             return eightPuzzle.find_blank(state)
 --- modulename: execution_path, funcname: find_blank
execution_path.py(12):         for i in range(3):
execution_path.py(13):             for j in range(3):
execution_path.py(14):                 if state[i][j] == 0:
execution_path.py(13):             for j in range(3):
execution_path.py(14):                 if state[i][j] == 0:
execution_path.py(13):             for j in range(3):
execution_path.py(14):                 if state[i][j] == 0:
execution_path.py(13):             for j in range(3):
execution_path.py(12):         for i in range(3):
execution_path.py(13):             for j in range(3):
execution_path.py(14):                 if state[i][j] == 0:
execution_path.py(13):             for j in range(3):
execution_path.py(14):                 if state[i][j] == 0:
execution_path.py(13):             for j in range(3):
execution_path.py(14):                 if state[i][j] == 0:
execution_path.py(13):             for j in range(3):
execution_path.py(12):         for i in range(3):
execution_path.py(13):             for j in range(3):
execution_path.py(14):                 if state[i][j] == 0:
execution_path.py(13):             for j in range(3):
execution_path.py(14):                 if state[i][j] == 0:
execution_path.py(13):             for j in range(3):
execution_path.py(14):                 if state[i][j] == 0:
execution_path.py(13):             for j in range(3):
execution_path.py(12):         for i in range(3):
