 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(74):             statistics3 = Statistics3()
execution_path.py(75):             return statistics3.standard_deviation([1, 1, 1])
 --- modulename: execution_path, funcname: standard_deviation
execution_path.py(58):         n = len(data)
execution_path.py(59):         if n < 2:
execution_path.py(61):         mean_value = Statistics3.mean(data)
 --- modulename: execution_path, funcname: mean
execution_path.py(39):         if len(data) == 0:
execution_path.py(41):         return sum(data) / len(data)
execution_path.py(62):         variance = sum((x - mean_value) ** 2 for x in data) / (n - 1)
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(62):         variance = sum((x - mean_value) ** 2 for x in data) / (n - 1)
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(62):         variance = sum((x - mean_value) ** 2 for x in data) / (n - 1)
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(62):         variance = sum((x - mean_value) ** 2 for x in data) / (n - 1)
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(62):         variance = sum((x - mean_value) ** 2 for x in data) / (n - 1)
execution_path.py(63):         return math.sqrt(variance)
