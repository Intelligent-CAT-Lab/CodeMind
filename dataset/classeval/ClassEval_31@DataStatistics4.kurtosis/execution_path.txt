 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(55):             return DataStatistics4.kurtosis([1, 5, 3])
 --- modulename: execution_path, funcname: kurtosis
execution_path.py(35):         n = len(data)
execution_path.py(36):         mean = sum(data) / n
execution_path.py(37):         std_dev = math.sqrt(sum((x - mean) ** 2 for x in data) / n)
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(37):         std_dev = math.sqrt(sum((x - mean) ** 2 for x in data) / n)
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(37):         std_dev = math.sqrt(sum((x - mean) ** 2 for x in data) / n)
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(37):         std_dev = math.sqrt(sum((x - mean) ** 2 for x in data) / n)
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(37):         std_dev = math.sqrt(sum((x - mean) ** 2 for x in data) / n)
execution_path.py(39):         if std_dev == 0:
execution_path.py(42):         centered_data = [(x - mean) for x in data]
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(42):         centered_data = [(x - mean) for x in data]
execution_path.py(42):         centered_data = [(x - mean) for x in data]
execution_path.py(42):         centered_data = [(x - mean) for x in data]
execution_path.py(42):         centered_data = [(x - mean) for x in data]
execution_path.py(43):         fourth_moment = sum(x ** 4 for x in centered_data) / n
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(43):         fourth_moment = sum(x ** 4 for x in centered_data) / n
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(43):         fourth_moment = sum(x ** 4 for x in centered_data) / n
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(43):         fourth_moment = sum(x ** 4 for x in centered_data) / n
 --- modulename: execution_path, funcname: <genexpr>
execution_path.py(43):         fourth_moment = sum(x ** 4 for x in centered_data) / n
execution_path.py(45):         kurtosis_value = (fourth_moment / std_dev ** 4) - 3
execution_path.py(47):         return kurtosis_value
