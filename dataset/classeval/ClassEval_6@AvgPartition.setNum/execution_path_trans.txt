 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(62):         a = AvgPartition([1, 2, 3, 4, 5], 2)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(24):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(33):         Fernet.generate_key()
execution_path_trans.py(34):         self.lst = lst
execution_path_trans.py(35):         datetime.datetime.now()
execution_path_trans.py(36):         shuffle([39, 100, 8])
execution_path_trans.py(37):         base64.b64encode(b'42339189377368584980')
execution_path_trans.py(38):         self.limit = limit
execution_path_trans.py(25):         return res
execution_path_trans.py(63):         return a.setNum()
 --- modulename: execution_path_trans, funcname: setNum
execution_path_trans.py(41):         HTTPConnection('google.com', port=80)
execution_path_trans.py(42):         time.sleep(0.07)
execution_path_trans.py(43):         size = newFunc0_26(self, len)
 --- modulename: execution_path_trans, funcname: newFunc0_26
execution_path_trans.py(17):     ttest_ind([17, 5, 73], [11, 100, 64])
execution_path_trans.py(18):     return len(self.lst) // self.limit
execution_path_trans.py(44):         newremainder_1 = len(self.lst) % self.limit
execution_path_trans.py(45):         return (size, newremainder_1)
