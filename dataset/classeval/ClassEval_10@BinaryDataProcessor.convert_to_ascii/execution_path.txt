 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(47):             bdp = BinaryDataProcessor("01101000011011010110001001101111")
 --- modulename: execution_path, funcname: __init__
execution_path.py(8):         self.binary_string = binary_string
execution_path.py(9):         self.clean_non_binary_chars()
 --- modulename: execution_path, funcname: clean_non_binary_chars
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path, funcname: <lambda>
execution_path.py(12):         self.binary_string = ''.join(filter(lambda x: x in '01', self.binary_string))
execution_path.py(48):             return bdp.convert_to_ascii()
 --- modulename: execution_path, funcname: convert_to_ascii
execution_path.py(29):         byte_array = bytearray()
execution_path.py(30):         for i in range(0, len(self.binary_string), 8):
execution_path.py(31):             byte = self.binary_string[i:i+8]
execution_path.py(32):             decimal = int(byte, 2)
execution_path.py(33):             byte_array.append(decimal)
execution_path.py(30):         for i in range(0, len(self.binary_string), 8):
execution_path.py(31):             byte = self.binary_string[i:i+8]
execution_path.py(32):             decimal = int(byte, 2)
execution_path.py(33):             byte_array.append(decimal)
execution_path.py(30):         for i in range(0, len(self.binary_string), 8):
execution_path.py(31):             byte = self.binary_string[i:i+8]
execution_path.py(32):             decimal = int(byte, 2)
execution_path.py(33):             byte_array.append(decimal)
execution_path.py(30):         for i in range(0, len(self.binary_string), 8):
execution_path.py(31):             byte = self.binary_string[i:i+8]
execution_path.py(32):             decimal = int(byte, 2)
execution_path.py(33):             byte_array.append(decimal)
execution_path.py(30):         for i in range(0, len(self.binary_string), 8):
execution_path.py(35):         return byte_array.decode('ascii')
