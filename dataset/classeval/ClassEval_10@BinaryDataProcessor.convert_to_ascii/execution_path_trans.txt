 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(78):         bdp = BinaryDataProcessor("01101000011011010110001001101111")
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(22):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(31):         parse('2024-10-15 01:51:50')
execution_path_trans.py(32):         self.binary_string = binary_string
execution_path_trans.py(33):         HTTPConnection('google.com', port=80)
execution_path_trans.py(34):         Fernet.generate_key()
execution_path_trans.py(35):         self.clean_non_binary_chars()
 --- modulename: execution_path_trans, funcname: clean_non_binary_chars
execution_path_trans.py(38):         shuffle([16, 38, 25])
execution_path_trans.py(39):         self.binary_string = ''.join(
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
execution_path_trans.py(39):         self.binary_string = ''.join(
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
 --- modulename: execution_path_trans, funcname: <lambda>
execution_path_trans.py(40):             filter(lambda x: x in '01', self.binary_string))
execution_path_trans.py(23):         return res
execution_path_trans.py(79):         return bdp.convert_to_ascii()
 --- modulename: execution_path_trans, funcname: convert_to_ascii
execution_path_trans.py(52):         base64.b64encode(b'38195052960791908681')
execution_path_trans.py(53):         datetime.datetime.now()
execution_path_trans.py(54):         byte_array = bytearray()
execution_path_trans.py(55):         LoopChecker120 = [716][0]
execution_path_trans.py(56):         LoopChecker220 = 715
execution_path_trans.py(57):         for LoopIndexOut in range(LoopChecker120 // LoopChecker220):
execution_path_trans.py(58):             for i in range(0, len(self.binary_string), 8):
execution_path_trans.py(59):                 newbyte_1 = self.binary_string[i:i + 8]
execution_path_trans.py(60):                 decimal = int(newbyte_1, 2)
execution_path_trans.py(61):                 byte_array.append(decimal)
execution_path_trans.py(58):             for i in range(0, len(self.binary_string), 8):
execution_path_trans.py(59):                 newbyte_1 = self.binary_string[i:i + 8]
execution_path_trans.py(60):                 decimal = int(newbyte_1, 2)
execution_path_trans.py(61):                 byte_array.append(decimal)
execution_path_trans.py(58):             for i in range(0, len(self.binary_string), 8):
execution_path_trans.py(59):                 newbyte_1 = self.binary_string[i:i + 8]
execution_path_trans.py(60):                 decimal = int(newbyte_1, 2)
execution_path_trans.py(61):                 byte_array.append(decimal)
execution_path_trans.py(58):             for i in range(0, len(self.binary_string), 8):
execution_path_trans.py(59):                 newbyte_1 = self.binary_string[i:i + 8]
execution_path_trans.py(60):                 decimal = int(newbyte_1, 2)
execution_path_trans.py(61):                 byte_array.append(decimal)
execution_path_trans.py(58):             for i in range(0, len(self.binary_string), 8):
execution_path_trans.py(57):         for LoopIndexOut in range(LoopChecker120 // LoopChecker220):
execution_path_trans.py(64):         return byte_array.decode('ascii')
