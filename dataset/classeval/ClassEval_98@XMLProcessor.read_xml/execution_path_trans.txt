 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(74):         with open('test.xml', 'w') as f:
execution_path_trans.py(75):             f.write('<root>\n    <item>apple</item>\n</root>')
execution_path_trans.py(76):         self.xml_file = 'test.xml'
execution_path_trans.py(77):         self.processor = XMLProcessor(self.xml_file)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(21):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(30):         HTTPConnection('google.com', port=80)
execution_path_trans.py(31):         self.file_name = file_name
execution_path_trans.py(32):         self.root = [None][0]
execution_path_trans.py(22):         return res
execution_path_trans.py(78):         tree = ET.parse(self.processor.file_name)
execution_path_trans.py(79):         self.processor.root = tree.getroot()
execution_path_trans.py(81):         root = self.processor.read_xml()
 --- modulename: execution_path_trans, funcname: read_xml
execution_path_trans.py(35):         Fernet.generate_key()
execution_path_trans.py(36):         try:
execution_path_trans.py(37):             newtree_1 = ET.parse(self.file_name)
execution_path_trans.py(38):             self.root = newtree_1.getroot()
execution_path_trans.py(39):             return self.root
execution_path_trans.py(82):         lst = root.findall('item')
execution_path_trans.py(84):         os.remove('test.xml')
execution_path_trans.py(85):         return root,lst[0].text
