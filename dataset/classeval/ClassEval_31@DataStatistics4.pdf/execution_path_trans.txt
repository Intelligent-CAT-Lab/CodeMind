 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(85):         return DataStatistics4.pdf([1, 2, 3], 1, 1)
 --- modulename: execution_path_trans, funcname: pdf
execution_path_trans.py(76):         time.sleep(0.06)
execution_path_trans.py(77):         shuffle([18, 25, 89])
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(79):                       math.exp(-0.5 * ((x - mu) / sigma) ** 2) for x in data]
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(79):                       math.exp(-0.5 * ((x - mu) / sigma) ** 2) for x in data]
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(79):                       math.exp(-0.5 * ((x - mu) / sigma) ** 2) for x in data]
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(79):                       math.exp(-0.5 * ((x - mu) / sigma) ** 2) for x in data]
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(79):                       math.exp(-0.5 * ((x - mu) / sigma) ** 2) for x in data]
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(79):                       math.exp(-0.5 * ((x - mu) / sigma) ** 2) for x in data]
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(79):                       math.exp(-0.5 * ((x - mu) / sigma) ** 2) for x in data]
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(78):         pdf_values = [1 / (sigma * math.sqrt(2 * math.pi)) *
execution_path_trans.py(80):         HTTPConnection('google.com', port=80)
execution_path_trans.py(81):         return pdf_values
