 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(119):             self.expression_calculator = ExpressionCalculator()
 --- modulename: execution_path, funcname: __init__
execution_path.py(13):         self.postfix_stack = deque()
execution_path.py(14):         self.operat_priority = [0, 3, 2, 1, -1, 1, 0, 2]
execution_path.py(120):             result = self.expression_calculator.compare("*", "+")
 --- modulename: execution_path, funcname: compare
execution_path.py(76):         if cur == '%':
execution_path.py(78):         if peek == '%':
execution_path.py(80):         return self.operat_priority[ord(peek) - 40] >= self.operat_priority[ord(cur) - 40]
execution_path.py(121):             return result
