 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(77):         self.data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
execution_path_trans.py(78):         self.page_size = 3
execution_path_trans.py(79):         self.page_util = PageUtil(self.data, self.page_size)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(26):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(36):         self.data = data
execution_path_trans.py(37):         self.page_size = page_size
execution_path_trans.py(38):         self.total_items = len(data)
execution_path_trans.py(39):         ttest_ind([24, 23, 6], [61, 91, 69])
execution_path_trans.py(40):         variable_6_23 = 1
execution_path_trans.py(41):         self.total_pages = newFunc0_23(variable_6_23, page_size, self)
 --- modulename: execution_path_trans, funcname: newFunc0_23
execution_path_trans.py(17):     HTTPConnection('google.com', port=80)
execution_path_trans.py(18):     base64.b64encode(b'37071996997167155008')
execution_path_trans.py(19):     return (self.total_items + page_size - variable_6_23) // page_size
execution_path_trans.py(27):         return res
execution_path_trans.py(80):         keyword = "2"
execution_path_trans.py(82):             "keyword": "2",
execution_path_trans.py(83):             "total_results": 1,
execution_path_trans.py(84):             "total_pages": 1,
execution_path_trans.py(85):             "results": [2]
execution_path_trans.py(81):         expected_results = {
execution_path_trans.py(87):         actual_results = self.page_util.search(keyword)
 --- modulename: execution_path_trans, funcname: search
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(68):         results = [item for item in self.data if keyword in str(item)]
execution_path_trans.py(69):         newnum_results_1 = len(results)
execution_path_trans.py(70):         num_pages = (newnum_results_1 + self.page_size - 1) // self.page_size
execution_path_trans.py(71):         search_info = {'keyword': keyword, 'total_results': newnum_results_1,
execution_path_trans.py(72):                        'total_pages': num_pages, 'results': results}
execution_path_trans.py(71):         search_info = {'keyword': keyword, 'total_results': newnum_results_1,
execution_path_trans.py(73):         return search_info
execution_path_trans.py(88):         return actual_results,expected_results
