 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(63):             t = Thermostat(20, 25, 'heat')
 --- modulename: execution_path, funcname: __init__
execution_path.py(10):         self.current_temperature = current_temperature
execution_path.py(11):         self.target_temperature = target_temperature
execution_path.py(12):         self.mode = mode
execution_path.py(64):             return t.simulate_operation(),t.get_mode(),t.current_temperature
 --- modulename: execution_path, funcname: simulate_operation
execution_path.py(50):         self.auto_set_mode()
 --- modulename: execution_path, funcname: auto_set_mode
execution_path.py(30):         if self.current_temperature < self.target_temperature:
execution_path.py(31):             self.mode = 'heat'
execution_path.py(51):         use_time = 0
execution_path.py(52):         if self.mode == 'heat':
execution_path.py(53):             while(self.current_temperature < self.target_temperature):
execution_path.py(54):                 self.current_temperature += 1
execution_path.py(55):                 use_time += 1
execution_path.py(53):             while(self.current_temperature < self.target_temperature):
execution_path.py(54):                 self.current_temperature += 1
execution_path.py(55):                 use_time += 1
execution_path.py(53):             while(self.current_temperature < self.target_temperature):
execution_path.py(54):                 self.current_temperature += 1
execution_path.py(55):                 use_time += 1
execution_path.py(53):             while(self.current_temperature < self.target_temperature):
execution_path.py(54):                 self.current_temperature += 1
execution_path.py(55):                 use_time += 1
execution_path.py(53):             while(self.current_temperature < self.target_temperature):
execution_path.py(54):                 self.current_temperature += 1
execution_path.py(55):                 use_time += 1
execution_path.py(53):             while(self.current_temperature < self.target_temperature):
execution_path.py(60):         return use_time
 --- modulename: execution_path, funcname: get_mode
execution_path.py(21):         return self.mode
