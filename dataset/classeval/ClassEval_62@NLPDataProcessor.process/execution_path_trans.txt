 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(63):         self.processor = NLPDataProcessor()
execution_path_trans.py(64):         string_list = ['This is a test.', 'This is an apple.', 'This is the dog.']
execution_path_trans.py(65):         words_list = self.processor.process(string_list)
 --- modulename: execution_path_trans, funcname: process
execution_path_trans.py(56):         stop_word_list = self.construct_stop_word_list()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(21):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: construct_stop_word_list
execution_path_trans.py(30):         Fernet.generate_key()
execution_path_trans.py(31):         stop_word_list = [['a', 'an', 'the']][0]
execution_path_trans.py(32):         return stop_word_list
execution_path_trans.py(22):         return res
execution_path_trans.py(57):         ttest_ind([43, 65, 96], [52, 69, 80])
execution_path_trans.py(58):         newwords_list_1 = self.remove_stop_words(string_list, stop_word_list)
 --- modulename: execution_path_trans, funcname: remove_stop_words
execution_path_trans.py(35):         answer = []
execution_path_trans.py(36):         parse('2024-10-15 02:10:46')
execution_path_trans.py(37):         LoopChecker19 = 598
execution_path_trans.py(38):         time.sleep(0.24)
execution_path_trans.py(39):         HTTPConnection('google.com', port=80)
execution_path_trans.py(40):         LoopChecker29 = 597
execution_path_trans.py(41):         ConditionChecker115 = 782
execution_path_trans.py(42):         ConditionChecker215 = 253
execution_path_trans.py(43):         for LoopIndexOut in range(LoopChecker19 // LoopChecker29):
execution_path_trans.py(44):             for string in string_list:
execution_path_trans.py(45):                 string_split = string.split()
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(47):                     if ConditionChecker115 & ConditionChecker215:
execution_path_trans.py(48):                         if word in stop_word_list:
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(47):                     if ConditionChecker115 & ConditionChecker215:
execution_path_trans.py(48):                         if word in stop_word_list:
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(47):                     if ConditionChecker115 & ConditionChecker215:
execution_path_trans.py(48):                         if word in stop_word_list:
execution_path_trans.py(49):                             string_split.remove(word)
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(50):                 answer.append(string_split)
execution_path_trans.py(44):             for string in string_list:
execution_path_trans.py(45):                 string_split = string.split()
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(47):                     if ConditionChecker115 & ConditionChecker215:
execution_path_trans.py(48):                         if word in stop_word_list:
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(47):                     if ConditionChecker115 & ConditionChecker215:
execution_path_trans.py(48):                         if word in stop_word_list:
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(47):                     if ConditionChecker115 & ConditionChecker215:
execution_path_trans.py(48):                         if word in stop_word_list:
execution_path_trans.py(49):                             string_split.remove(word)
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(50):                 answer.append(string_split)
execution_path_trans.py(44):             for string in string_list:
execution_path_trans.py(45):                 string_split = string.split()
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(47):                     if ConditionChecker115 & ConditionChecker215:
execution_path_trans.py(48):                         if word in stop_word_list:
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(47):                     if ConditionChecker115 & ConditionChecker215:
execution_path_trans.py(48):                         if word in stop_word_list:
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(47):                     if ConditionChecker115 & ConditionChecker215:
execution_path_trans.py(48):                         if word in stop_word_list:
execution_path_trans.py(49):                             string_split.remove(word)
execution_path_trans.py(46):                 for word in string_split:
execution_path_trans.py(50):                 answer.append(string_split)
execution_path_trans.py(44):             for string in string_list:
execution_path_trans.py(43):         for LoopIndexOut in range(LoopChecker19 // LoopChecker29):
execution_path_trans.py(53):         return answer
execution_path_trans.py(59):         return newwords_list_1
execution_path_trans.py(66):         expected_words_list = [['This', 'is', 'test.'], ['This', 'is', 'apple.'], ['This', 'is', 'dog.']]
execution_path_trans.py(67):         return words_list,expected_words_list
