 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(119):             self.expression_calculator = ExpressionCalculator()
 --- modulename: execution_path, funcname: __init__
execution_path.py(13):         self.postfix_stack = deque()
execution_path.py(14):         self.operat_priority = [0, 3, 2, 1, -1, 1, 0, 2]
execution_path.py(120):             result = self.expression_calculator._calculate("2", "3", "*")
 --- modulename: execution_path, funcname: _calculate
execution_path.py(84):         if current_op == '+':
execution_path.py(86):         elif current_op == '-':
execution_path.py(88):         elif current_op == '*':
execution_path.py(89):             return Decimal(first_value) * Decimal(second_value)
execution_path.py(121):             return result,Decimal(6.0)
