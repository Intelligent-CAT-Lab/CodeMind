 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(156):         self.expression_calculator = ExpressionCalculator()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(26):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(35):         parse('2024-10-15 02:02:17')
execution_path_trans.py(36):         self.postfix_stack = deque()
execution_path_trans.py(37):         self.operat_priority = [[0, 3, 2, 1, -1, 1, 0, 2]][0]
execution_path_trans.py(27):         return res
execution_path_trans.py(157):         result = self.expression_calculator._calculate("2", "3", "*")
 --- modulename: execution_path_trans, funcname: _calculate
execution_path_trans.py(120):         datetime.datetime.now()
execution_path_trans.py(121):         if current_op == '+':
execution_path_trans.py(123):         elif current_op == '-':
execution_path_trans.py(125):         elif current_op == '*':
execution_path_trans.py(126):             return Decimal(first_value) * Decimal(newsecond_value_1)
execution_path_trans.py(158):         return result,Decimal(6.0)
