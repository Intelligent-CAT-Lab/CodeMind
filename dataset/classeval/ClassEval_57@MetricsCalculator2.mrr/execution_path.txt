 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(108):             res1, res2 = MetricsCalculator2.mrr(([0, 0, 0, 1], 4))
 --- modulename: execution_path, funcname: mrr
execution_path.py(15):         if type(data) != list and type(data) != tuple:
execution_path.py(18):         if len(data) == 0:
execution_path.py(20):         if type(data) == tuple:
execution_path.py(21):             (sub_list, total_num) = data
execution_path.py(22):             sub_list = np.array(sub_list)
execution_path.py(23):             if total_num == 0:
execution_path.py(26):                 ranking_array = 1.0 / (np.array(list(range(len(sub_list)))) + 1)
execution_path.py(27):                 mr_np = sub_list * ranking_array
execution_path.py(29):                 mr = 0.0
execution_path.py(30):                 for team in mr_np:
execution_path.py(31):                     if team > 0:
execution_path.py(30):                 for team in mr_np:
execution_path.py(31):                     if team > 0:
execution_path.py(30):                 for team in mr_np:
execution_path.py(31):                     if team > 0:
execution_path.py(30):                 for team in mr_np:
execution_path.py(31):                     if team > 0:
execution_path.py(32):                         mr = team
execution_path.py(33):                         break
execution_path.py(34):                 return mr, [mr]
execution_path.py(109):             return res1,res2
