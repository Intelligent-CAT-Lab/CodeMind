 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(72):         return SQLQueryBuilder.update('items', {'price': 1.0}, {'name': 'aaa'})
 --- modulename: execution_path_trans, funcname: update
execution_path_trans.py(63):         update_str = ', '.join((f"{k}='{v}'" for (k, v) in data.items()))
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(63):         update_str = ', '.join((f"{k}='{v}'" for (k, v) in data.items()))
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(63):         update_str = ', '.join((f"{k}='{v}'" for (k, v) in data.items()))
execution_path_trans.py(64):         query = f'UPDATE {table} SET {update_str}'
execution_path_trans.py(65):         if where:
execution_path_trans.py(66):             query += ' WHERE ' + \
execution_path_trans.py(67):                 ' AND '.join((f"{k}='{v}'" for (k, v) in where.items()))
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(67):                 ' AND '.join((f"{k}='{v}'" for (k, v) in where.items()))
 --- modulename: execution_path_trans, funcname: <genexpr>
execution_path_trans.py(67):                 ' AND '.join((f"{k}='{v}'" for (k, v) in where.items()))
execution_path_trans.py(66):             query += ' WHERE ' + \
execution_path_trans.py(68):         return query
