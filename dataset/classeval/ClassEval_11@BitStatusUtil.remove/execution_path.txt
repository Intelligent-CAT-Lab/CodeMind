 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(33):             bit_status_util = BitStatusUtil()
execution_path.py(34):             return bit_status_util.remove(6, 2)
 --- modulename: execution_path, funcname: remove
execution_path.py(19):         BitStatusUtil.check([states, stat])
 --- modulename: execution_path, funcname: check
execution_path.py(26):         for arg in args:
execution_path.py(27):             if arg < 0:
execution_path.py(29):             if arg % 2 != 0:
execution_path.py(26):         for arg in args:
execution_path.py(27):             if arg < 0:
execution_path.py(29):             if arg % 2 != 0:
execution_path.py(26):         for arg in args:
execution_path.py(20):         if BitStatusUtil.has(states, stat):
 --- modulename: execution_path, funcname: has
execution_path.py(14):         BitStatusUtil.check([states, stat])
 --- modulename: execution_path, funcname: check
execution_path.py(26):         for arg in args:
execution_path.py(27):             if arg < 0:
execution_path.py(29):             if arg % 2 != 0:
execution_path.py(26):         for arg in args:
execution_path.py(27):             if arg < 0:
execution_path.py(29):             if arg % 2 != 0:
execution_path.py(26):         for arg in args:
execution_path.py(15):         return (states & stat) == stat
execution_path.py(21):             return states ^ stat
