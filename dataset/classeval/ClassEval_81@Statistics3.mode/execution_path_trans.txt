 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(109):         statistics3 = Statistics3()
execution_path_trans.py(110):         return statistics3.mode([1, 2, 3, 3, 4, 4, 5, 5])
 --- modulename: execution_path_trans, funcname: mode
execution_path_trans.py(33):         counts = {}
execution_path_trans.py(34):         LoopChecker117 = [799][0]
execution_path_trans.py(35):         LoopChecker217 = 798
execution_path_trans.py(37):         def loop_19_8(LoopIndexOut, stop, step):
execution_path_trans.py(43):         loop_19_8(0, LoopChecker117 // LoopChecker217, 1)
 --- modulename: execution_path_trans, funcname: loop_19_8
execution_path_trans.py(38):             if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(40):             for value in data:
execution_path_trans.py(41):                 counts[value] = counts.get(value, 0) + 1
execution_path_trans.py(40):             for value in data:
execution_path_trans.py(41):                 counts[value] = counts.get(value, 0) + 1
execution_path_trans.py(40):             for value in data:
execution_path_trans.py(41):                 counts[value] = counts.get(value, 0) + 1
execution_path_trans.py(40):             for value in data:
execution_path_trans.py(41):                 counts[value] = counts.get(value, 0) + 1
execution_path_trans.py(40):             for value in data:
execution_path_trans.py(41):                 counts[value] = counts.get(value, 0) + 1
execution_path_trans.py(40):             for value in data:
execution_path_trans.py(41):                 counts[value] = counts.get(value, 0) + 1
execution_path_trans.py(40):             for value in data:
execution_path_trans.py(41):                 counts[value] = counts.get(value, 0) + 1
execution_path_trans.py(40):             for value in data:
execution_path_trans.py(41):                 counts[value] = counts.get(value, 0) + 1
execution_path_trans.py(40):             for value in data:
execution_path_trans.py(42):             loop_19_8(LoopIndexOut + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_19_8
execution_path_trans.py(38):             if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(39):                 return
execution_path_trans.py(44):         time.sleep(0.01)
execution_path_trans.py(45):         max_count = max(counts.values())
execution_path_trans.py(46):         mode_values = [value for (value, count)
execution_path_trans.py(47):                        in counts.items() if count == max_count]
execution_path_trans.py(46):         mode_values = [value for (value, count)
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(46):         mode_values = [value for (value, count)
execution_path_trans.py(47):                        in counts.items() if count == max_count]
execution_path_trans.py(46):         mode_values = [value for (value, count)
execution_path_trans.py(47):                        in counts.items() if count == max_count]
execution_path_trans.py(46):         mode_values = [value for (value, count)
execution_path_trans.py(47):                        in counts.items() if count == max_count]
execution_path_trans.py(46):         mode_values = [value for (value, count)
execution_path_trans.py(46):         mode_values = [value for (value, count)
execution_path_trans.py(47):                        in counts.items() if count == max_count]
execution_path_trans.py(46):         mode_values = [value for (value, count)
execution_path_trans.py(46):         mode_values = [value for (value, count)
execution_path_trans.py(47):                        in counts.items() if count == max_count]
execution_path_trans.py(46):         mode_values = [value for (value, count)
execution_path_trans.py(46):         mode_values = [value for (value, count)
execution_path_trans.py(48):         HTTPConnection('google.com', port=80)
execution_path_trans.py(49):         ttest_ind([2, 75, 19], [57, 55, 50])
execution_path_trans.py(50):         return mode_values
