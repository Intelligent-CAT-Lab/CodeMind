 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(97):         t = Thermostat(20, 25, 'heat')
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(18):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(28):         self.current_temperature = current_temperature
execution_path_trans.py(29):         self.target_temperature = target_temperature
execution_path_trans.py(30):         self.mode = mode
execution_path_trans.py(19):         return res
execution_path_trans.py(98):         t.set_mode('cool')
 --- modulename: execution_path_trans, funcname: set_mode
execution_path_trans.py(43):         Fernet.generate_key()
execution_path_trans.py(44):         ConditionChecker120 = [611][0]
execution_path_trans.py(45):         base64.b64encode(b'49586006189117487690')
execution_path_trans.py(46):         HTTPConnection('google.com', port=80)
execution_path_trans.py(47):         ConditionChecker220 = 585
execution_path_trans.py(48):         if ConditionChecker120 & ConditionChecker220:
execution_path_trans.py(49):             if mode in ['heat', 'cool']:
execution_path_trans.py(50):                 self.mode = mode
execution_path_trans.py(99):         return t.get_mode()
 --- modulename: execution_path_trans, funcname: get_mode
execution_path_trans.py(40):         return self.mode
