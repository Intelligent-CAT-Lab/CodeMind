 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(89):         lemmatization = Lemmatization()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(22):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(36):         datetime.datetime.now()
execution_path_trans.py(37):         HTTPConnection('google.com', port=80)
execution_path_trans.py(38):         parse('2024-10-15 02:08:10')
execution_path_trans.py(39):         self.lemmatizer = WordNetLemmatizer()
execution_path_trans.py(23):         return res
execution_path_trans.py(90):         result = lemmatization.get_pos_tag("The dog's barked at the mailman.")
 --- modulename: execution_path_trans, funcname: get_pos_tag
execution_path_trans.py(73):         ttest_ind([32, 83, 48], [20, 10, 61])
execution_path_trans.py(74):         pos_tags = []
execution_path_trans.py(75):         sentence = self.remove_punctuation(sentence)
 --- modulename: execution_path_trans, funcname: remove_punctuation
execution_path_trans.py(83):         time.sleep(0.06)
execution_path_trans.py(84):         return sentence.translate(str.maketrans('', '', string.punctuation))
execution_path_trans.py(76):         words = word_tokenize(sentence)
execution_path_trans.py(77):         tagged_words = pos_tag(words)
execution_path_trans.py(78):         for newtagged_word_1 in tagged_words:
execution_path_trans.py(79):             pos_tags.append(newtagged_word_1[1])
execution_path_trans.py(78):         for newtagged_word_1 in tagged_words:
execution_path_trans.py(79):             pos_tags.append(newtagged_word_1[1])
execution_path_trans.py(78):         for newtagged_word_1 in tagged_words:
execution_path_trans.py(79):             pos_tags.append(newtagged_word_1[1])
execution_path_trans.py(78):         for newtagged_word_1 in tagged_words:
execution_path_trans.py(79):             pos_tags.append(newtagged_word_1[1])
execution_path_trans.py(78):         for newtagged_word_1 in tagged_words:
execution_path_trans.py(79):             pos_tags.append(newtagged_word_1[1])
execution_path_trans.py(78):         for newtagged_word_1 in tagged_words:
execution_path_trans.py(79):             pos_tags.append(newtagged_word_1[1])
execution_path_trans.py(78):         for newtagged_word_1 in tagged_words:
execution_path_trans.py(80):         return pos_tags
execution_path_trans.py(91):         expected = ['DT', 'NNS', 'VBD', 'IN', 'DT', 'NN']
execution_path_trans.py(92):         return result,expected
