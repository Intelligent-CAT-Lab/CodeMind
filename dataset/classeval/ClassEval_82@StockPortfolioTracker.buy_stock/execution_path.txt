 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(60):             tracker = StockPortfolioTracker(10000.0)
 --- modulename: execution_path, funcname: __init__
execution_path.py(8):         self.portfolio = []
execution_path.py(9):         self.cash_balance = cash_balance
execution_path.py(61):             tracker.portfolio = [{'name': 'AAPL', 'price': 150.0, 'quantity': 10}]
execution_path.py(62):             return tracker.buy_stock({'name': 'MSFT', 'price': 150.0, 'quantity': 10}),tracker.buy_stock({'name': 'MSFT', 'price': 150.0, 'quantity': 10}),tracker.portfolio,tracker.cash_balance
 --- modulename: execution_path, funcname: buy_stock
execution_path.py(29):         if stock['price'] * stock['quantity'] > self.cash_balance:
execution_path.py(32):             self.add_stock(stock)
 --- modulename: execution_path, funcname: add_stock
execution_path.py(12):         for pf in self.portfolio:
execution_path.py(13):             if pf['name'] == stock['name']:
execution_path.py(12):         for pf in self.portfolio:
execution_path.py(17):         self.portfolio.append(stock)
execution_path.py(33):             self.cash_balance -= stock['price'] * stock['quantity']
execution_path.py(34):             return True
 --- modulename: execution_path, funcname: buy_stock
execution_path.py(29):         if stock['price'] * stock['quantity'] > self.cash_balance:
execution_path.py(32):             self.add_stock(stock)
 --- modulename: execution_path, funcname: add_stock
execution_path.py(12):         for pf in self.portfolio:
execution_path.py(13):             if pf['name'] == stock['name']:
execution_path.py(12):         for pf in self.portfolio:
execution_path.py(13):             if pf['name'] == stock['name']:
execution_path.py(14):                 pf['quantity'] += stock['quantity']
execution_path.py(15):                 return
execution_path.py(33):             self.cash_balance -= stock['price'] * stock['quantity']
execution_path.py(34):             return True
