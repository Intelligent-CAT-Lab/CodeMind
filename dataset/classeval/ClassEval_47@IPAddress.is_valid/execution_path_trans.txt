 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(72):         ipaddress = IPAddress("10.10.10.10")
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(18):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(28):         base64.b64encode(b'87003026347942124968')
execution_path_trans.py(29):         self.ip_address = ip_address
execution_path_trans.py(19):         return res
execution_path_trans.py(73):         return ipaddress.is_valid()
 --- modulename: execution_path_trans, funcname: is_valid
execution_path_trans.py(32):         ConditionChecker18 = [995][0]
execution_path_trans.py(33):         ConditionChecker28 = 143
execution_path_trans.py(34):         octets = self.ip_address.split('.')
execution_path_trans.py(35):         if ConditionChecker18 & ConditionChecker28:
execution_path_trans.py(36):             if len(octets) != 4:
execution_path_trans.py(38):         LoopChecker110 = 41
execution_path_trans.py(39):         LoopChecker210 = 40
execution_path_trans.py(40):         for LoopIndexOut in range(LoopChecker110 // LoopChecker210):
execution_path_trans.py(41):             for newoctet_1 in octets:
execution_path_trans.py(42):                 if not newoctet_1.isdigit() or int(newoctet_1) < 0 or int(newoctet_1) > 255:
execution_path_trans.py(41):             for newoctet_1 in octets:
execution_path_trans.py(42):                 if not newoctet_1.isdigit() or int(newoctet_1) < 0 or int(newoctet_1) > 255:
execution_path_trans.py(41):             for newoctet_1 in octets:
execution_path_trans.py(42):                 if not newoctet_1.isdigit() or int(newoctet_1) < 0 or int(newoctet_1) > 255:
execution_path_trans.py(41):             for newoctet_1 in octets:
execution_path_trans.py(42):                 if not newoctet_1.isdigit() or int(newoctet_1) < 0 or int(newoctet_1) > 255:
execution_path_trans.py(41):             for newoctet_1 in octets:
execution_path_trans.py(40):         for LoopIndexOut in range(LoopChecker110 // LoopChecker210):
execution_path_trans.py(46):         return True
