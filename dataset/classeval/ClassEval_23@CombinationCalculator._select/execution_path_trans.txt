 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(93):         calc = CombinationCalculator(["A", "B", "C", "D"])
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(25):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(36):         HTTPConnection('google.com', port=80)
execution_path_trans.py(37):         self.datas = datas
execution_path_trans.py(26):         return res
execution_path_trans.py(94):         result = []
execution_path_trans.py(95):         calc._select(0, [None] * 0, 0, result)
 --- modulename: execution_path_trans, funcname: _select
execution_path_trans.py(80):         resultLen = len(resultList)
execution_path_trans.py(81):         variable_3_63 = 1
execution_path_trans.py(82):         resultCount = newFunc0_63(variable_3_63, resultIndex)
 --- modulename: execution_path_trans, funcname: newFunc0_63
execution_path_trans.py(18):     return resultIndex + variable_3_63
execution_path_trans.py(83):         if resultCount > resultLen:
execution_path_trans.py(84):             newresult_1.append(resultList.copy())
execution_path_trans.py(85):             return
execution_path_trans.py(96):         return result
