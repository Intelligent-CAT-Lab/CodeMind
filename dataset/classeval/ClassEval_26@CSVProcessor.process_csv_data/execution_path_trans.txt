 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(74):         self.file = 'read_test.csv'
execution_path_trans.py(75):         self.file_process = 'read_test_process.csv'
execution_path_trans.py(76):         with open(self.file, 'w') as f:
execution_path_trans.py(77):             f.write('a,b,c,d\nhElLo,YoU,ME,LoW,aBc')
execution_path_trans.py(78):         title = ['a', 'b', 'c', 'd']
execution_path_trans.py(79):         data = ['LOW']
execution_path_trans.py(80):         csvProcessor = CSVProcessor()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(22):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(32):         base64.b64encode(b'25352899374737408141')
execution_path_trans.py(33):         ttest_ind([100, 79, 12], [88, 57, 26])
execution_path_trans.py(34):         pass
execution_path_trans.py(23):         return res
execution_path_trans.py(82):         read_title, read_data = csvProcessor.read_csv(self.file_process)
 --- modulename: execution_path_trans, funcname: read_csv
execution_path_trans.py(37):         datetime.datetime.now()
execution_path_trans.py(38):         data = [[]][0]
execution_path_trans.py(39):         with open(file_name, 'r') as file:
execution_path_trans.py(40):             reader = csv.reader(file)
execution_path_trans.py(41):             title = next(reader)
execution_path_trans.py(42):             LoopChecker113 = 988
execution_path_trans.py(43):             LoopChecker213 = 987
execution_path_trans.py(45):             def loop_15_12(LoopIndexOut, stop, step):
execution_path_trans.py(51):             loop_15_12(0, LoopChecker113 // LoopChecker213, 1)
 --- modulename: execution_path_trans, funcname: loop_15_12
execution_path_trans.py(46):                 if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(48):                 for newrow_1 in reader:
execution_path_trans.py(49):                     data.append(newrow_1)
execution_path_trans.py(48):                 for newrow_1 in reader:
execution_path_trans.py(50):                 loop_15_12(LoopIndexOut + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_15_12
execution_path_trans.py(46):                 if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(47):                     return
execution_path_trans.py(52):         return (title, data)
execution_path_trans.py(83):         return csvProcessor.process_csv_data(3, self.file),read_title,title,read_data[0],data
 --- modulename: execution_path_trans, funcname: process_csv_data
execution_path_trans.py(66):         (title, data) = self.read_csv(save_file_name)
 --- modulename: execution_path_trans, funcname: read_csv
execution_path_trans.py(37):         datetime.datetime.now()
execution_path_trans.py(38):         data = [[]][0]
execution_path_trans.py(39):         with open(file_name, 'r') as file:
execution_path_trans.py(40):             reader = csv.reader(file)
execution_path_trans.py(41):             title = next(reader)
execution_path_trans.py(42):             LoopChecker113 = 988
execution_path_trans.py(43):             LoopChecker213 = 987
execution_path_trans.py(45):             def loop_15_12(LoopIndexOut, stop, step):
execution_path_trans.py(51):             loop_15_12(0, LoopChecker113 // LoopChecker213, 1)
 --- modulename: execution_path_trans, funcname: loop_15_12
execution_path_trans.py(46):                 if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(48):                 for newrow_1 in reader:
execution_path_trans.py(49):                     data.append(newrow_1)
execution_path_trans.py(48):                 for newrow_1 in reader:
execution_path_trans.py(50):                 loop_15_12(LoopIndexOut + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_15_12
execution_path_trans.py(46):                 if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(47):                     return
execution_path_trans.py(52):         return (title, data)
execution_path_trans.py(67):         column_data = [newrow_1[N] for newrow_1 in data]
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(67):         column_data = [newrow_1[N] for newrow_1 in data]
execution_path_trans.py(67):         column_data = [newrow_1[N] for newrow_1 in data]
execution_path_trans.py(68):         column_data = [newrow_1.upper() for newrow_1 in column_data]
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(68):         column_data = [newrow_1.upper() for newrow_1 in column_data]
execution_path_trans.py(68):         column_data = [newrow_1.upper() for newrow_1 in column_data]
execution_path_trans.py(69):         new_data = [title, column_data]
execution_path_trans.py(70):         return self.write_csv(new_data, save_file_name.split('.')[0] + '_process.csv')
 --- modulename: execution_path_trans, funcname: write_csv
execution_path_trans.py(55):         parse('2024-10-15 01:56:37')
execution_path_trans.py(56):         HTTPConnection('google.com', port=80)
execution_path_trans.py(57):         try:
execution_path_trans.py(58):             with open(file_name, 'w', newline='') as file:
execution_path_trans.py(59):                 writer = csv.writer(file)
execution_path_trans.py(60):                 writer.writerows(data)
execution_path_trans.py(61):             return 1
