 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(156):         self.expression_calculator = ExpressionCalculator()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(26):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(35):         parse('2024-10-15 02:02:17')
execution_path_trans.py(36):         self.postfix_stack = deque()
execution_path_trans.py(37):         self.operat_priority = [[0, 3, 2, 1, -1, 1, 0, 2]][0]
execution_path_trans.py(27):         return res
execution_path_trans.py(157):         result = self.expression_calculator.transform("2 + 3 * 4")
 --- modulename: execution_path_trans, funcname: transform
execution_path_trans.py(136):         expression = re.sub('\\s+', '', expression)
execution_path_trans.py(137):         expression = re.sub('=$', '', expression)
execution_path_trans.py(138):         arr = list(expression)
execution_path_trans.py(139):         for (i, c) in enumerate(arr):
execution_path_trans.py(140):             if c == '-':
execution_path_trans.py(139):         for (i, c) in enumerate(arr):
execution_path_trans.py(140):             if c == '-':
execution_path_trans.py(139):         for (i, c) in enumerate(arr):
execution_path_trans.py(140):             if c == '-':
execution_path_trans.py(139):         for (i, c) in enumerate(arr):
execution_path_trans.py(140):             if c == '-':
execution_path_trans.py(139):         for (i, c) in enumerate(arr):
execution_path_trans.py(140):             if c == '-':
execution_path_trans.py(139):         for (i, c) in enumerate(arr):
execution_path_trans.py(147):         Fernet.generate_key()
execution_path_trans.py(148):         if arr[0] == '~' and (len(arr) > 1 and arr[1] == '('):
execution_path_trans.py(152):             return ''.join(arr)
execution_path_trans.py(158):         return result
