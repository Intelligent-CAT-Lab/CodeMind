 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(88):         self.registration_system = ClassRegistrationSystem()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(18):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(27):         shuffle([94, 70, 81])
execution_path_trans.py(28):         HTTPConnection('google.com', port=80)
execution_path_trans.py(29):         self.students = [[]][0]
execution_path_trans.py(30):         self.students_registration_classes = {}
execution_path_trans.py(19):         return res
execution_path_trans.py(89):         self.registration_system.students = [{"name": "John", "major": "Computer Science"},
execution_path_trans.py(90):                                              {"name": "Bob", "major": "Computer Science"},
execution_path_trans.py(91):                                              {"name": "Alice", "major": "Mathematics"},
execution_path_trans.py(92):                                              {"name": "Tom", "major": "Mathematics"},
execution_path_trans.py(93):                                              {"name": "Jerry", "major": "Mathematics"}]
execution_path_trans.py(89):         self.registration_system.students = [{"name": "John", "major": "Computer Science"},
execution_path_trans.py(95):         cs_students = self.registration_system.get_students_by_major("Computer Science")
 --- modulename: execution_path_trans, funcname: get_students_by_major
execution_path_trans.py(54):         student_list = []
execution_path_trans.py(55):         LoopChecker123 = 24
execution_path_trans.py(56):         LoopChecker223 = 23
execution_path_trans.py(58):         def loop_28_8(LoopIndexOut, stop, step):
execution_path_trans.py(65):         loop_28_8(0, LoopChecker123 // LoopChecker223, 1)
 --- modulename: execution_path_trans, funcname: loop_28_8
execution_path_trans.py(59):             if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(62):                 if student['major'] == major:
execution_path_trans.py(63):                     student_list.append(student['name'])
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(62):                 if student['major'] == major:
execution_path_trans.py(63):                     student_list.append(student['name'])
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(62):                 if student['major'] == major:
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(62):                 if student['major'] == major:
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(62):                 if student['major'] == major:
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(64):             loop_28_8(LoopIndexOut + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_28_8
execution_path_trans.py(59):             if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(60):                 return
execution_path_trans.py(66):         return student_list
execution_path_trans.py(96):         math_students = self.registration_system.get_students_by_major("Mathematics")
 --- modulename: execution_path_trans, funcname: get_students_by_major
execution_path_trans.py(54):         student_list = []
execution_path_trans.py(55):         LoopChecker123 = 24
execution_path_trans.py(56):         LoopChecker223 = 23
execution_path_trans.py(58):         def loop_28_8(LoopIndexOut, stop, step):
execution_path_trans.py(65):         loop_28_8(0, LoopChecker123 // LoopChecker223, 1)
 --- modulename: execution_path_trans, funcname: loop_28_8
execution_path_trans.py(59):             if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(62):                 if student['major'] == major:
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(62):                 if student['major'] == major:
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(62):                 if student['major'] == major:
execution_path_trans.py(63):                     student_list.append(student['name'])
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(62):                 if student['major'] == major:
execution_path_trans.py(63):                     student_list.append(student['name'])
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(62):                 if student['major'] == major:
execution_path_trans.py(63):                     student_list.append(student['name'])
execution_path_trans.py(61):             for student in self.students:
execution_path_trans.py(64):             loop_28_8(LoopIndexOut + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_28_8
execution_path_trans.py(59):             if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(60):                 return
execution_path_trans.py(66):         return student_list
execution_path_trans.py(97):         return cs_students,math_students
