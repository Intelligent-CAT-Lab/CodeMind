class UserLoginDBTestDeleteUserByUsername(unittest.TestCase):
    def setUp(self):
        self.db_path = os.path.join(gettempdir(), 'test_db.db')
        conn = sqlite3.connect(self.db_path)
        cursor = conn.cursor()
        create_table_query = """
                CREATE TABLE IF NOT EXISTS users (
                    username TEXT,
                    password TEXT
                )
                """
        cursor.execute(create_table_query)

        conn.commit()
        conn.close()
        self.db = UserLoginDB(self.db_path)

    def tearDown(self):
        self.db.connection.close()
        os.unlink(self.db_path)

    def test_delete_user_by_username_1(self):
        self.db.insert_user('user1', 'pass1')
        self.db.delete_user_by_username('user1')
        user = self.db.search_user_by_username('user1')
        self.assertIsNone(user)

    def test_delete_user_by_username_2(self):
        self.db.insert_user('user2', 'pass2')
        self.db.delete_user_by_username('user2')
        user = self.db.search_user_by_username('user2')
        self.assertIsNone(user)

    def test_delete_user_by_username_3(self):
        self.db.insert_user('user3', 'pass3')
        self.db.delete_user_by_username('user3')
        user = self.db.search_user_by_username('user3')
        self.assertIsNone(user)

    def test_delete_user_by_username_4(self):
        self.db.insert_user('user4', 'pass4')
        self.db.delete_user_by_username('user4')
        user = self.db.search_user_by_username('user4')
        self.assertIsNone(user)

    def test_delete_user_by_username_5(self):
        self.db.insert_user('user5', 'pass5')
        self.db.delete_user_by_username('user5')
        user = self.db.search_user_by_username('user5')
        self.assertIsNone(user)