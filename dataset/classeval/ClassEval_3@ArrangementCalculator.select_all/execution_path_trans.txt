 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(49):             ac = ArrangementCalculator([1])
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(11):         self.datas = datas
execution_path_trans.py(50):             res = ac.select_all()
 --- modulename: execution_path_trans, funcname: select_all
execution_path_trans.py(36):         result = []
execution_path_trans.py(37):         for i in range(1, len(self.datas) + 1):
execution_path_trans.py(38):             result.extend(self.select(i))
 --- modulename: execution_path_trans, funcname: select
execution_path_trans.py(28):         if m is None:
execution_path_trans.py(30):         result = []
execution_path_trans.py(31):         for permutation in itertools.permutations(self.datas, m):
execution_path_trans.py(32):             result.append(list(permutation))
execution_path_trans.py(31):         for permutation in itertools.permutations(self.datas, m):
execution_path_trans.py(33):         return result
execution_path_trans.py(37):         for i in range(1, len(self.datas) + 1):
execution_path_trans.py(39):         return result
execution_path_trans.py(51):             expected = [[1]]
execution_path_trans.py(52):             return res,expected
