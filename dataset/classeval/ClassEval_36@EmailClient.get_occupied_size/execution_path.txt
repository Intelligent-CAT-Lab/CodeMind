 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(60):             sender = EmailClient('sender@example.com', 100)
 --- modulename: execution_path, funcname: __init__
execution_path.py(10):         self.addr = addr
execution_path.py(11):         self.capacity = capacity
execution_path.py(12):         self.inbox = []
execution_path.py(61):             receiver = EmailClient('receiver@example.com', 50)
 --- modulename: execution_path, funcname: __init__
execution_path.py(10):         self.addr = addr
execution_path.py(11):         self.capacity = capacity
execution_path.py(12):         self.inbox = []
execution_path.py(63):                 {'sender': 'sender@example.com', 'receiver': 'receiver@example.com', 'content': 'Hello', 'size': 20,
execution_path.py(64):                  'time': datetime.now, 'state': 'unread'},
execution_path.py(63):                 {'sender': 'sender@example.com', 'receiver': 'receiver@example.com', 'content': 'Hello', 'size': 20,
execution_path.py(65):                 {'sender': 'sender@example.com', 'receiver': 'receiver@example.com', 'content': 'Hello', 'size': 30,
execution_path.py(66):                  'time': datetime.now, 'state': 'unread'}]
execution_path.py(65):                 {'sender': 'sender@example.com', 'receiver': 'receiver@example.com', 'content': 'Hello', 'size': 30,
execution_path.py(62):             sender.inbox = [
execution_path.py(67):             return sender.get_occupied_size()
 --- modulename: execution_path, funcname: get_occupied_size
execution_path.py(45):         occupied_size = 0
execution_path.py(46):         for email in self.inbox:
execution_path.py(47):             occupied_size += email["size"]
execution_path.py(46):         for email in self.inbox:
execution_path.py(47):             occupied_size += email["size"]
execution_path.py(46):         for email in self.inbox:
execution_path.py(48):         return occupied_size
