 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(38):             weatherSystem = WeatherSystem('New York')
 --- modulename: execution_path, funcname: __init__
execution_path.py(8):         self.temperature = None
execution_path.py(9):         self.weather = None
execution_path.py(10):         self.city = city
execution_path.py(11):         self.weather_list = {}
execution_path.py(41):                     'weather': 'sunny',
execution_path.py(42):                     'temperature': 27,
execution_path.py(43):                     'temperature units': 'celsius'
execution_path.py(40):                 'New York': {
execution_path.py(46):                     'weather': 'cloudy',
execution_path.py(47):                     'temperature': 23,
execution_path.py(48):                     'temperature units': 'celsius'
execution_path.py(45):                 'Beijing': {
execution_path.py(39):             weather_list = {
execution_path.py(51):             return weatherSystem.query(weather_list, tmp_units='fahrenheit')
 --- modulename: execution_path, funcname: query
execution_path.py(14):         self.weather_list = weather_list
execution_path.py(15):         if self.city not in weather_list:
execution_path.py(18):             self.temperature = self.weather_list[self.city]['temperature']
execution_path.py(19):             self.weather = self.weather_list[self.city]['weather']
execution_path.py(20):         if self.weather_list[self.city]['temperature units'] != tmp_units:
execution_path.py(21):             if tmp_units == 'celsius':
execution_path.py(23):             elif tmp_units == 'fahrenheit':
execution_path.py(24):                 return self.celsius_to_fahrenheit(), self.weather
 --- modulename: execution_path, funcname: celsius_to_fahrenheit
execution_path.py(32):         return (self.temperature * 9/5) + 32
