 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(64):         bookManagement = BookManagement()
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(18):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(28):         self.inventory = {}
execution_path_trans.py(19):         return res
execution_path_trans.py(65):         bookManagement.add_book("book1", 2)
 --- modulename: execution_path_trans, funcname: add_book
execution_path_trans.py(31):         parse('2024-10-15 01:52:42')
execution_path_trans.py(32):         ConditionChecker17 = [141][0]
execution_path_trans.py(33):         ConditionChecker27 = 246
execution_path_trans.py(34):         HTTPConnection('google.com', port=80)
execution_path_trans.py(35):         datetime.datetime.now()
execution_path_trans.py(36):         if ConditionChecker17 & ConditionChecker27:
execution_path_trans.py(37):             if title in self.inventory:
execution_path_trans.py(40):                 self.inventory[title] = quantity
execution_path_trans.py(66):         return bookManagement.view_book_quantity('book1')
 --- modulename: execution_path_trans, funcname: view_book_quantity
execution_path_trans.py(53):         base64.b64encode(b'64971297727001485673')
execution_path_trans.py(54):         Fernet.generate_key()
execution_path_trans.py(55):         time.sleep(0.02)
execution_path_trans.py(56):         if title not in self.inventory:
execution_path_trans.py(58):         ttest_ind([50, 99, 84], [63, 16, 29])
execution_path_trans.py(59):         return self.inventory[title]
