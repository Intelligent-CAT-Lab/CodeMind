 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(61):             self.blackjackGame = BlackjackGame()
 --- modulename: execution_path, funcname: __init__
execution_path.py(11):         self.deck = self.create_deck()
 --- modulename: execution_path, funcname: create_deck
execution_path.py(16):         deck = []
execution_path.py(17):         suits = ['S', 'C', 'D', 'H']
execution_path.py(18):         ranks = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']
execution_path.py(19):         for suit in suits:
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(19):         for suit in suits:
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(19):         for suit in suits:
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(19):         for suit in suits:
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(21):                 deck.append(rank + suit)
execution_path.py(20):             for rank in ranks:
execution_path.py(19):         for suit in suits:
execution_path.py(22):         random.shuffle(deck)
execution_path.py(23):         return deck
execution_path.py(12):         self.player_hand = []
execution_path.py(13):         self.dealer_hand = []
execution_path.py(62):             self.deck = self.blackjackGame.deck
execution_path.py(63):             return len(self.deck)
