 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(86):         self.database_name = "test.db"
execution_path_trans.py(87):         self.processor = DatabaseProcessor(self.database_name)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(21):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(31):         time.sleep(0.23)
execution_path_trans.py(32):         Fernet.generate_key()
execution_path_trans.py(33):         self.database_name = database_name
execution_path_trans.py(22):         return res
execution_path_trans.py(88):         table_name = "test_table4"
execution_path_trans.py(89):         self.processor.create_table(table_name, 'name', 'age')
 --- modulename: execution_path_trans, funcname: create_table
execution_path_trans.py(36):         conn = sqlite3.connect(self.database_name)
execution_path_trans.py(37):         cursor = conn.cursor()
execution_path_trans.py(38):         HTTPConnection('google.com', port=80)
execution_path_trans.py(39):         create_table_query = f'CREATE TABLE IF NOT EXISTS {table_name} (id INTEGER PRIMARY KEY, {key1} TEXT, {key2} INTEGER)'
execution_path_trans.py(40):         cursor.execute(create_table_query)
execution_path_trans.py(41):         conn.commit()
execution_path_trans.py(42):         ttest_ind([51, 54, 97], [31, 26, 76])
execution_path_trans.py(43):         conn.close()
execution_path_trans.py(91):         conn = sqlite3.connect(self.database_name)
execution_path_trans.py(92):         cursor = conn.cursor()
execution_path_trans.py(93):         cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name=?", (table_name,))
execution_path_trans.py(94):         result = cursor.fetchone()
execution_path_trans.py(95):         conn.close()
execution_path_trans.py(97):         return result,result[0],table_name
