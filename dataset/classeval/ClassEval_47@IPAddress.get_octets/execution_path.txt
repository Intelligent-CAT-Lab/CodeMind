 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(35):             ipaddress = IPAddress("10.10.10.10")
 --- modulename: execution_path, funcname: __init__
execution_path.py(8):         self.ip_address = ip_address
execution_path.py(36):             return ipaddress.get_octets()
 --- modulename: execution_path, funcname: get_octets
execution_path.py(20):         if self.is_valid():
 --- modulename: execution_path, funcname: is_valid
execution_path.py(11):         octets = self.ip_address.split('.')
execution_path.py(12):         if len(octets) != 4:
execution_path.py(14):         for octet in octets:
execution_path.py(15):             if not octet.isdigit() or int(octet) < 0 or int(octet) > 255:
execution_path.py(14):         for octet in octets:
execution_path.py(15):             if not octet.isdigit() or int(octet) < 0 or int(octet) > 255:
execution_path.py(14):         for octet in octets:
execution_path.py(15):             if not octet.isdigit() or int(octet) < 0 or int(octet) > 255:
execution_path.py(14):         for octet in octets:
execution_path.py(15):             if not octet.isdigit() or int(octet) < 0 or int(octet) > 255:
execution_path.py(14):         for octet in octets:
execution_path.py(17):         return True
execution_path.py(21):             return self.ip_address.split('.')
