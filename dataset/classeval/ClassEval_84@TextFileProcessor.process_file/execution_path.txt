 --- modulename: execution_path, funcname: <module>
<string>(1):  --- modulename: execution_path, funcname: test
execution_path.py(34):             self.file = 'test.txt'
execution_path.py(35):             self.content = 'Hello, 123 World!'
execution_path.py(36):             self.expected_result = 'HelloWorld'
execution_path.py(37):             textFileProcessor = TextFileProcessor(self.file)
 --- modulename: execution_path, funcname: __init__
execution_path.py(11):         self.file_path = file_path
execution_path.py(38):             textFileProcessor.read_file = MagicMock(return_value=self.content)
execution_path.py(39):             textFileProcessor.write_file = MagicMock()
execution_path.py(40):             result = textFileProcessor.process_file()
 --- modulename: execution_path, funcname: process_file
execution_path.py(28):         content = self.read_file()
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
 --- modulename: execution_path, funcname: <listcomp>
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(29):         content = ''.join([char for char in content if char.isalpha()])
execution_path.py(30):         self.write_file(content)
execution_path.py(31):         return content
execution_path.py(41):             textFileProcessor.read_file.assert_called_once()
execution_path.py(42):             textFileProcessor.write_file.assert_called_once_with(self.expected_result)
execution_path.py(43):             return result,self.expected_result
