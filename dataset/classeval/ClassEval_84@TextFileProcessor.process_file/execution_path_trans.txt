 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(64):         self.file = 'test.txt'
execution_path_trans.py(65):         self.content = 'Hello, 123 World!'
execution_path_trans.py(66):         self.expected_result = 'HelloWorld'
execution_path_trans.py(68):         textFileProcessor = TextFileProcessor(self.file)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(23):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(34):         self.file_path = file_path
execution_path_trans.py(24):         return res
execution_path_trans.py(69):         textFileProcessor.read_file = MagicMock(return_value=self.content)
execution_path_trans.py(70):         textFileProcessor.write_file = MagicMock()
execution_path_trans.py(72):         result = textFileProcessor.process_file()
 --- modulename: execution_path_trans, funcname: process_file
execution_path_trans.py(53):         HTTPConnection('google.com', port=80)
execution_path_trans.py(54):         content = self.read_file()
execution_path_trans.py(55):         content = ''.join(
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
 --- modulename: execution_path_trans, funcname: <listcomp>
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(56):             [newchar_1 for newchar_1 in content if newchar_1.isalpha()])
execution_path_trans.py(55):         content = ''.join(
execution_path_trans.py(57):         self.write_file(content)
execution_path_trans.py(58):         datetime.datetime.now()
execution_path_trans.py(59):         return content
execution_path_trans.py(73):         textFileProcessor.read_file.assert_called_once()
execution_path_trans.py(74):         textFileProcessor.write_file.assert_called_once_with(self.expected_result)
execution_path_trans.py(75):         return result,self.expected_result
