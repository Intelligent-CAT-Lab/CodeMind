 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(82):         test_folder = 'test_folder'
execution_path_trans.py(83):         os.makedirs(test_folder, exist_ok=True)
execution_path_trans.py(84):         example_file_path = os.path.join(test_folder, 'example4.txt')
execution_path_trans.py(85):         with open(example_file_path, 'w') as file:
execution_path_trans.py(86):             file.write('This is an example file.')
execution_path_trans.py(88):         zip_file_name = 'example.zip'
execution_path_trans.py(89):         with zipfile.ZipFile(zip_file_name, 'w') as zip_file:
execution_path_trans.py(90):             zip_file.write(example_file_path, os.path.basename(example_file_path))
execution_path_trans.py(92):         processor = ZipFileProcessor(zip_file_name)
 --- modulename: execution_path_trans, funcname: dec_result
execution_path_trans.py(23):         res = func(*args, **kwargs)
 --- modulename: execution_path_trans, funcname: __init__
execution_path_trans.py(37):         self.file_name = file_name
execution_path_trans.py(24):         return res
execution_path_trans.py(93):         output_directory = 'output_directory'
execution_path_trans.py(94):         new_zip_file = 'new_zip_file.zip'
execution_path_trans.py(96):         files_to_zip = [example_file_path]
execution_path_trans.py(97):         success = processor.create_zip_file(files_to_zip, new_zip_file)
 --- modulename: execution_path_trans, funcname: create_zip_file
execution_path_trans.py(63):         try:
execution_path_trans.py(64):             with zipfile.ZipFile(output_file_name, 'w') as newzip_file_1:
execution_path_trans.py(65):                 LoopChecker134 = [927][0]
execution_path_trans.py(66):                 LoopChecker234 = 926
execution_path_trans.py(68):                 def loop_36_16(LoopIndexOut, stop, step):
execution_path_trans.py(74):                 loop_36_16(0, LoopChecker134 // LoopChecker234, 1)
 --- modulename: execution_path_trans, funcname: loop_36_16
execution_path_trans.py(69):                     if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(71):                     for file in files:
execution_path_trans.py(72):                         newzip_file_1.write(file)
execution_path_trans.py(71):                     for file in files:
execution_path_trans.py(73):                     loop_36_16(LoopIndexOut + step, stop, step)
 --- modulename: execution_path_trans, funcname: loop_36_16
execution_path_trans.py(69):                     if step == 0 or (step > 0 and LoopIndexOut >= stop) or (step < 0 and LoopIndexOut <= stop):
execution_path_trans.py(70):                         return
execution_path_trans.py(75):             return True
execution_path_trans.py(99):         os.remove(example_file_path)
execution_path_trans.py(100):         os.rmdir(test_folder)
execution_path_trans.py(101):         return success,os.path.exists(new_zip_file)
