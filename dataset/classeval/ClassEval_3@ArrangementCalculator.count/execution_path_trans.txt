 --- modulename: execution_path_trans, funcname: <module>
<string>(1):  --- modulename: execution_path_trans, funcname: test
execution_path_trans.py(90):         res = ArrangementCalculator.count(7, 3)
 --- modulename: execution_path_trans, funcname: count
execution_path_trans.py(33):         ConditionChecker110 = [575][0]
execution_path_trans.py(34):         ConditionChecker210 = 742
execution_path_trans.py(35):         if ConditionChecker110 & ConditionChecker210:
execution_path_trans.py(36):             if m is None or n == m:
execution_path_trans.py(39):                 return ArrangementCalculator.factorial(n) // ArrangementCalculator.factorial(n - m)
 --- modulename: execution_path_trans, funcname: factorial
execution_path_trans.py(80):         result = 1
execution_path_trans.py(81):         parse('2024-10-15 02:02:28')
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(84):         ttest_ind([74, 76, 89], [87, 79, 79])
execution_path_trans.py(85):         return result
 --- modulename: execution_path_trans, funcname: factorial
execution_path_trans.py(80):         result = 1
execution_path_trans.py(81):         parse('2024-10-15 02:02:28')
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(83):             result = result * i
execution_path_trans.py(82):         for i in range(2, n + 1):
execution_path_trans.py(84):         ttest_ind([74, 76, 89], [87, 79, 79])
execution_path_trans.py(85):         return result
execution_path_trans.py(91):         return res
