<s> [INST] <<SYS>>
You are an expert python programmer and assistant
<</SYS>>

Translate the following java code to python and enclose your solution inside ```python```.
A sample test case is provided below:

Test input:
9

Expected output:
48

```
import java.util.*;
import java.util.ArrayList;

public class codeforces_579_A {
    public static void main(String[] args) {
        Scanner str = new Scanner(System.in);
        int n = str.nextInt();
        String s = " ";
        
        while (n > 0) {
            int x = n % 2;
            n /= 2;
            s += x + " ";
        }
        
        int ans = 0;
        
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '1') {
                ans++;
            }
        }
        
        System.out.println(ans);
    }
}
```
[/INST]
```python
import sys

n = int(sys.stdin.readline().strip())
s = ""

while n > 0:
    x = n % 2
    n //= 2
    s += str(x) + " "

ans = 0

for i in range(len(s)):
    if s[i] == "1":
        ans += 1

print(ans)
```
This code reads an integer `n` from standard input, and then uses a while loop to convert `n` to binary and store the result in a string `s`. The binary representation of `n` is generated by repeatedly dividing `n` by 2 and taking the remainder, and then adding the remainder to the string `s`.

After the while loop, the code uses a for loop to iterate over the characters in the string `s` and count the number of times the character "1" appears. This number is stored in the variable `ans`. Finally, the code prints the value of `ans` to standard output.

Note that the code uses the `//` operator to perform integer division, which returns the integer part of the result instead of the floating-point part. This is necessary because the `n /= 2` statement in the while loop would otherwise perform floating-point division and return a floating-point result, which would cause the code to fail the test case.</s>
