Below is an instruction that describes a task. Write a response that appropriately completes the request.

### Instruction:
Translate the following python code to java and enclose your solution inside ```java```.
A sample test case is provided below:

Test input:
4

Expected output:
0
1:v 0
N2: 1
k?@Iz)
4 2
eC -}Q
6: 1 2
g<L'-QJK
8:L 3
9:: 0 3
10: 13
11x: 0 1 3
1l2: 2 3
jU; IY2 3
4: 1 2 3
15: 0 1 2 

```
#!/usr/bin/env python3
# Bitset 2 - Enumeration of Subsets 1


def subset(n):
    for i in range(2**n):
        yield [v for v in range(n) if i & (1 << v) > 0]


def run():
    n = int(input())

    for i, vs in enumerate(subset(n)):
        print("{}:{}".format(i, "".join([" {}".format(v) for v in vs])))


if __name__ == '__main__':
    run()


```

### Response:
```java
import java.util.*;

public class Bitset2 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        sc.close();

        for (int i = 0; i < (1 << n); i++) {
            StringBuilder sb = new StringBuilder();
            for (int j = 0; j < n; j++) {
                if ((i & (1 << j)) > 0) {
                    sb.append(j);
                    sb.append(" ");
                }
            }
            System.out.println(i + ":" + sb.toString().trim());
        }
    }
}
```

Explanation:

In the given Python code, we have defined a function `subset` which generates all the subsets of a given set of size `n`. The function uses a generator to yield each subset as a list of integers.

In the `run` function, we first read the input integer `n` from the user. We then iterate over all the subsets generated by the `subset` function using a for loop. For each subset, we print the index of the subset and the elements of the subset separated by a colon.

In the Java code, we use a `StringBuilder` to build the output string for each subset. We iterate over all the bits in the binary representation of the index `i` using a for loop. If the bit is set to 1, we append the corresponding element of the subset to the `StringBuilder`. Finally, we print the index and the `StringBuilder` as a string.<|endoftext|>
