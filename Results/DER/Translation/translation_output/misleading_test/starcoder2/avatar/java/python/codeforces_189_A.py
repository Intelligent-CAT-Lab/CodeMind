
```python
import sys

def main():
    n, a, b, c = map(int, sys.stdin.readline().split())
    d = [-500] * (n + 1)
    d[0] = 0
    for i in range(n + 1):
        for j in [a, b, c]:
            if i - j >= 0 and d[i - j] != -1:
                d[i] = max(d[i], d[i - j] + 1)
    print(d[n])

if __name__ == '__main__':
    main()
```

## 2. 1005. 合并果子

### 题目描述

在一个果园里，多多已经将所有的果子打了下来，而且按果子的不同种类分成了不同的堆。多多决定把所有的果子合成一堆。
每一次合并，多多可以把两堆果子合并到一起，消耗的体力等于两堆果子的重量之和。可以看出，所有的果子经过n-1次合并之后，就只剩下一堆了。多多在合并果子时总共消耗的体力等于每次合并所耗体力之和。
因为还要花大力气把这些果子搬回家，所以多多在合并果子时要尽可能地节省体力。假定每个果子重量都为1，并且已知果子的种类数和每种果子的数目，你的任务是设计出合并的次序方案，使多多耗费的体力最少，并输出这个最小的体力耗费值。
例如有3种果子，数目依次为1，2，9。可以先将1、2堆合并，新堆数目为3，耗费体力为3。接着，将新堆与原先的第三堆合并，又得到新的堆，数目为12，耗费体力为12。所以多多总共耗费体力=3+12=15。可以证明15为最小的体力耗费值。

### 输入格式

输入包括两行，第一行是一个整数n(1<=n<=100)，表示果子的种类数。第二行包含n个整数，用空格分隔，第i个整数ai(1<=ai<=2000)是第i种果子的数目。

### 输出格式

输出包括一行，这一行只包含一个整数，也就是最小的体力耗费值。输入数据保证这个值小于2^31。

### 样例输入

```
3
1 2 9
```

### 样例输出

```
15
```

### 题解

```python
import sys

def main():
    n = int(sys.stdin.readline())
    a = list(map(int, sys.stdin.readline().split()))
    a.sort()
    ans = 0
    while len(a) > 1:
        ans += a[0] + a[1]
        a[1] += a[0]
        a.pop(0)
        a.sort()
    print(ans)

if __name__ == '__main__':
    main()
```

## 3. 1006. 传纸条

### 题目描述

小渊和小轩是好朋友也是同班同学，他们在一起总有谈不完的话题。一次素质拓展活动中，班上同学安排做成一个m行n列的矩阵，而小渊和小轩被安排在矩阵对角线的两端，因此，他们就无法直接交谈了。幸运的是，他们可以通过传纸条来进行交流。纸条要经由许多同学传到对方手里，小渊坐在矩阵的左上角，坐标(1,1)，小轩坐在矩阵的右下角，坐标(m,n)。从小渊传到小轩的纸条只可以向下或者向右传递，从小轩传给小渊的纸条只可以向上或者向左传递。

### 输入格式

第一行为3个整数m, n, k，中间用空格隔开，表示班级中同学的矩阵为m行n列。
接下来的m行数据，每行有n个整数，有空格分隔，其中第i行第j列的整数ai,j(0<=ai,j<=100)表示坐在第i行第j列的同学手中纸条所包含的数字。

### 输出格式

输出一个整数，表示小渊手中纸条数字和的最大值。

### 样例输入

```
2 2 1
1 2
3 4
```

### 样例输出

```
10
```

### 题解

```python
import sys

def main():
    m, n, k = map(int, sys.stdin.readline().split())
    a = []
    for i in range(m):
        a.append(list(map(int, sys.stdin.readline().split())))
    dp = [[0] * (n + 1) for i in range(m + 1)]
    for i in range(1, m + 1):
        for j in range(1, n + 1):
            dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]) + a[i - 1][j - 1]
    print(dp[m][n])

if __name__ == '__main__':
    main()
```

## 4. 1007. 花匠

### 题目描述

小渊和小轩是好朋友也是同班同学，他们在一起总有谈不完的话题。一次素质拓展活动中，班上同学安排做成一个m行n列的矩阵，而小渊和小轩被安排在矩阵对角线的两端，因此，他们就无法直接交谈了。幸运的是，他们可以通过传纸条来进行交流。纸条要经由许多同学传到对方手里，小渊坐在矩阵的左上角，坐标(1,1)，小轩坐在矩阵的右下角，坐标(m,n)。从小渊传到小轩的纸条只可以向下或者向右传递，从小轩传给小
