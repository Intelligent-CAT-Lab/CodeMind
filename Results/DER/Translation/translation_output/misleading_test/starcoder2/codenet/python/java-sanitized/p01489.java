import java.util.*;
import java.math.*;

public class p01489 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int k = sc.nextInt();
        int l = 0, r = k;
        while (r - l > 1) {
            int m = (l + r) / 2;
            if (m * (m + 1) < k) {
                l = m;
            } else {
                r = m;
            }
        }
        int b = l;
        int ad = k - (b * (b + 1));
        int d = ((ad - 1) % (b + 1)) + 1;
        int x = 2 * b + 1;
        int y = 1;
        if (ad - d > 0) {
            x += 1;
        }
        if (d <= (b + 1 + 1) / 2) {
            int dd = d * 2 - 1;
            x -= (dd - 1);
            y += (dd - 1);
        } else {
            int dz = (b + 1 - d);
            int dd = dz * 2 + 2;
            x -= (dd - 1);
            y += (dd - 1);
        }
        int mod = 1000000007;
        int[][] a = new int[2][2];
        a[0][0] = 1;
        a[0][1] = 1;
        a[1][0] = 1;
        a[1][1] = 0;
        int[][] b1 = new int[2][2];
        b1[0][0] = 1;
        b1[0][1] = 1;
        b1[1][0] = 1;
        b1[1][1] = 0;
        int[][] c = new int[2][2];
        while (x > 0) {
            if (x % 2 != 0) {
                c[0][0] = (a[0][0] * b1[0][0] + a[0][1] * b1[1][0]) % mod;
                c[0][1] = (a[0][0] * b1[0][1] + a[0][1] * b1[1][1]) % mod;
                c[1][0] = (a[1][0] * b1[0][0] + a[1][1] * b1[1][0]) % mod;
                c[1][1] = (a[1][0] * b1[0][1] + a[1][1] * b1[1][1]) % mod;
                a[0][0] = c[0][0];
                a[0][1] = c[0][1];
                a[1][0] = c[1][0];
                a[1][1] = c[1][1];
            }
            b1[0][0] = (b1[0][0] * b1[0][0] + b1[0][1] * b1[1][0]) % mod;
            b1[0][1] = (b1[0][0] * b1[0][1] + b1[0][1] * b1[1][1]) % mod;
            b1[1][0] = (b1[1][0] * b1[0][0] + b1[1][1] * b1[1][0]) % mod;
            b1[1][1] = (b1[1][0] * b1[0][1] + b1[1][1] * b1[1][1]) % mod;
            x /= 2;
        }
        int[][] d1 = new int[2][2];
        d1[0][0] = 1;
        d1[0][1] = 1;
        d1[1][0] = 1;
        d1[1][1] = 0;
        int[][] e = new int[2][2];
        while (y > 0) {
            if (y % 2 != 0) {
                e[0][0] = (d1[0][0] * b1[0][0] + d1[0][1] * b1[1][0]) % mod;
                e[0][1] = (d1[0][0] * b1[0][1] + d1[0][1] * b1[1][1]) % mod;
                e[1][0] = (d1[1][0] * b1[0][0] + d1[1][1] * b1[1][0]) % mod;
                e[1][1] = (d1[1][0] * b1[0][1] + d1[1][1] * b1[1][1]) % mod;
                d1[0][0] = e[0][0];
                d1[0][1] = e[0][1];
                d1[1][0] = e[1][0];
                d1[1][1] = e[1][1];
            }
            b1[0][0] = (b1[0][0] * b1[0][0] + b1[0][1] * b1[1][0]) % mod;
            b1[0][1] = (b1[0][0] * b1[0][1] + b1[0][1] * b1[1][1]) % mod;
            b1[1][0] = (b1[1][0] * b1[0][0] + b1[1][1] * b1[1][0]) % mod;
            b1[1][1] = (b1[1][0] * b1[0][1] + b1[1][1] * b1[1][1]) % mod;
            y /= 2;
        }
        int ans = (a[0][0] * d1[0][0] + a[0][1] * d1[1][0]) % mod;
        System.out.println(ans);
    }
}