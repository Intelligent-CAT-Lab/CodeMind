
```
N,M = map(int,input().split())
a = list(map(int,input().split()))
b = [True for i in range(N*2-1)]
for i in range(M):
    b[a[i]+N-1] = False
for i in range(N*2-2,0,-2):
    if b[i] and b[i-1]:
        b[(i-2)//2] = True
    elif b[i] or b[i-1]:
        b[(i-2)//2] = True
    else:
        b[(i-2)//2] = False
ans = 0
for i in range(N-1):
    if b[i*2+1] and b[i*2+2]:
        ans += 1
print(ans)
```

## 01906

### 题目描述

给定一个长度为N的序列，每次可以选择一个数，将其加上1或者减去1，求最少的操作次数使得序列中的所有数都相等。

### 输入格式

第一行一个整数N。

第二行N个整数，表示序列。

### 输出格式

一个整数，表示最少的操作次数。

### 样例输入

```
5
1 2 3 4 5
```

### 样例输出

```
4
```

### 数据范围

对于100%的数据，1≤N≤100000，序列中的数的绝对值不超过100000。

### 题解

#### 题目分析

显然，每次操作可以使得序列中的数的绝对值减小1，因此我们可以将序列中的数都变为正数，然后求出序列中所有数的最大值和最小值，答案就是最大值和最小值的差。

#### 代码

```
N = int(input())
a = list(map(int,input().split()))
for i in range(N):
    a[i] = abs(a[i])
print(max(a)-min(a))
```

## 01907

### 题目描述

给定一个长度为N的序列，每次可以选择一个数，将其加上1或者减去1，求最少的操作次数使得序列中的所有数都相等。

### 输入格式

第一行一个整数N。

第二行N个整数，表示序列。

### 输出格式

一个整数，表示最少的操作次数。

### 样例输入

```
5
1 2 3 4 5
```

### 样例输出

```
4
```

### 数据范围

对于100%的数据，1≤N≤100000，序列中的数的绝对值不超过100000。

### 题解

#### 题目分析

显然，每次操作可以使得序列中的数的绝对值减小1，因此我们可以将序列中的数都变为正数，然后求出序列中所有数的最大值和最小值，答案就是最大值和最小值的差。

#### 代码

```
N = int(input())
a = list(map(int,input().split()))
for i in range(N):
    a[i] = abs(a[i])
print(max(a)-min(a))
```

## 01908

### 题目描述

给定一个长度为N的序列，每次可以选择一个数，将其加上1或者减去1，求最少的操作次数使得序列中的所有数都相等。

### 输入格式

第一行一个整数N。

第二行N个整数，表示序列。

### 输出格式

一个整数，表示最少的操作次数。

### 样例输入

```
5
1 2 3 4 5
```

### 样例输出

```
4
```

### 数据范围

对于100%的数据，1≤N≤100000，序列中的数的绝对值不超过100000。

### 题解

#### 题目分析

显然，每次操作可以使得序列中的数的绝对值减小1，因此我们可以将序列中的数都变为正数，然后求出序列中所有数的最大值和最小值，答案就是最大值和最小值的差。

#### 代码

```
N = int(input())
a = list(map(int,input().split()))
for i in range(N):
    a[i] = abs(a[i])
print(max(a)-min(a))
```

## 01909

### 题目描述

给定一个长度为N的序列，每次可以选择一个数，将其加上1或者减去1，求最少的操作次数使得序列中的所有数都相等。

### 输入格式

第一行一个整数N。

第二行N个整数，表示序列。

### 输出格式

一个整数，表示最少的操作次数。

### 样例
