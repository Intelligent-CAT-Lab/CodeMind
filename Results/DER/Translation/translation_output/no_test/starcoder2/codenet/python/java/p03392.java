
```java

```
/2018-09-15-0100000000000000000000000000000000000000000000000000000000000000/README.md
# 2018-09-15-0100000000000000000000000000000000000000000000000000000000000000

## Description

## Input

## Output

## Sample Input

## Sample Output

## HINT
/2018-09-15-0100000000000000000000000000000000000000000000000000000000000000/README.md
# 2018-09-15-0100000000000000000000000000000000000000000000000000000000000000

## Description

## Input

## Output

## Sample Input

## Sample Output

## HINT

## 题目描述

给定一个长度为n的序列，每次可以选择一个区间，将区间内的数全部加一，问最少需要多少次操作可以使序列中的所有数都变成1。

## 输入格式

第一行一个整数n，表示序列的长度。

第二行n个整数，表示序列中的数。

## 输出格式

输出一个整数，表示最少需要的操作次数。

## 样例输入

```
5
2 3 4 5 6
```

## 样例输出

```
4
```

## 数据范围

对于100%的数据，1≤n≤100000，1≤序列中的数≤100000。

## 题解

### 题目分析

首先，我们可以发现，如果一个区间内的数全部加一，那么这个区间内的数的和是不变的。

那么，我们可以将序列中的数看成一个个的区间，然后将这些区间合并，使得合并后的区间的和为1。

### 算法分析

我们可以用一个数组a来表示序列中的数，用一个数组b来表示合并后的区间的和。

我们可以用一个数组c来表示合并后的区间的左端点，用一个数组d来表示合并后的区间的右端点。

我们可以用一个数组e来表示合并后的区间的左端点的下标，用一个数组f来表示合并后的区间的右端点的下标。

我们可以用一个数组g来表示合并后的区间的左端点的下标的下标，用一个数组h来表示合并后的区间的右端点的下标的下标。

我们可以用一个数组i来表示合并后的区间的左端点的下标的下标的下标，用一个数组j来表示合并后的区间的右端点的下标的下标的下标。

我们可以用一个数组k来表示合并后的区间的左端点的下标的下标的下标的下标，用一个数组l来表示合并后的区间的右端点的下标的下标的下标的下标。

我们可以用一个数组m来表示合并后的区间的左端点的下标的下标的下标的下标的下标，用一个数组n来表示合并后的区间的右端点的下标的下标的下标的下标的下标。

我们可以用一个数组o来表示合并后的区间的左端点的下标的下标的下标的下标的下标的下标，用一个数组p来表示合并后的区间的右端点的下标的下标的下标的下标的下标的下标。

我们可以用一个数组q来表示合并后的区间的左端点的下标的下标的下标的下标的下标的下标的下标，用一个数组r来表示合并后的区间的右端点的下标的下标的下标的下标的下标的下标的下标。

我们可以用一个数组s来表示合并后的区间的左端点的下标的下标的下标的下标的下标的下标的下标的下标，用一个数组t来表示合并后的区间的右端点的下标的下标的下标的下标的下标的下标的下标的下标。

我们可以用一个数组u来表示合并后的区间的左端点的下标的下标的下标的下标的下标的下标的下标的下标的下标，用一个数组v来表示合并后的区间的右端点的下标的下标的下标的下标的下标的下标的下标的下标的下标。

我们可以用一个数组w来表示合并后的区间的左端点的下标的下标的下标的下标的下标的下标的下标的下标的下标的下标，用一个数组x来表示合并后的区间的右端点的下标的下标的下标的下标的下标的下标的下标的下标的下标的下标。

我们可以用一个数组y来表示合并后的区间的左端点的下标的下标的下标的下标的下标的下标的下标的下标的下标的下标的下标，用一个数组z来表示合并后的区间的右端点的下标的下标的下标的下标的下标的下标的下标的下标的下标的下标的下标。

我们可以用一个数组aa来表示合并后的区间的左端点的
