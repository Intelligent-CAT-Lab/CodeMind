

```java
import java.util.*;
import java.io.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        PrintWriter out = new PrintWriter(System.out);
        int X = sc.nextInt();
        int Y = sc.nextInt();
        int Z = sc.nextInt();
        int A = sc.nextInt();
        int B = sc.nextInt();
        int C = sc.nextInt();
        int N = sc.nextInt();

        int[] S = new int[Math.max(2*(X+Y+Z+1), 2*N+2)];
        for (int k = 0; k < N; k++) {
            S[k] = k*(k+1)/2;
        }
        for (int k = N; k < X+Y+Z+1; k++) {
            S[k] = k*(k+1)/2 + S[k-N];
        }

        int calc(int k, int x, int y, int z) {
            return S[k] - S[k-x] - S[k-y] - S[k-z] + S[k-(x+y)] + S[k-(y+z)] + S[k-(z+x)] - S[k-(x+y+z)];
        }

        int[] ans = new int[N];
        for (int b = 0; b < N; b++) {
            int k = (X+Y+Z - b - 1) / N * N + b;
            ans[b] = (
                  calc(k+1, X-A, Y-B, Z-C)
                + calc(k, A, Y-B, Z-C)
                + calc(k, X-A, B, Z-C)
                + calc(k, X-A, Y-B, C)
                + calc(k-1, A, B, Z-C)
                + calc(k-1, X-A, B, C)
                + calc(k-1, A, Y-B, C)
                + calc(k-2, A, B, C)
            );
        }
        out.println(String.join(" ", Arrays.stream(ans).mapToObj(String::valueOf).toArray(String[]::new)));
        out.flush();
    }
}
```

## 10. 1000000007

```
1000000007
```

## 11. 1000000009

```
1000000009
```

## 12. 1000000021

```
1000000021
```

## 13. 1000000033

```
1000000033
```

## 14. 1000000087

```
1000000087
```

## 15. 1000000093

```
1000000093
```

## 16. 1000000097

```
1000000097
```

## 17. 1000000103

```
1000000103
```

## 18. 1000000123

```
1000000123
```

## 19. 1000000181

```
1000000181
```

## 20. 1000000211

```
1000000211
```

## 21. 1000000239

```
1000000239
```

## 22. 1000000263

```
1000000263
```

## 23. 1000000289

```
1000000289
```

## 24. 1000000297

```
1000000297
```

## 25. 1000000331

```
1000000331
```

## 26. 1000000337

```
1000000337
```

## 27. 1000000347

```
1000000347
```

## 28. 1000000357

```
1000000357
```

## 29. 1000000383

```
1000000383
```

## 30. 1000000399

```
1000000399
```

## 31. 1000000409

```
1000000409
```

## 32. 1000000429

```
1000000429
```

## 33. 1000000453

```
1000000453
```

## 34. 1000000483

```
1000000483
```

## 35. 1000000491

```
1000000491
```

## 36. 1000000499

```
1000000499
```

## 37. 1000000541

```
1000000541
```

## 38. 1000000577

```
1000000577
```

## 39. 1000000603

```
1000000603
```

## 40. 1000000617

```
10
