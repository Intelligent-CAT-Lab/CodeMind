 <<<Analysis>>>
The function `count_Substrings` takes a string `s` as input.
It initializes two variables `count` and `sum` to 0, which will be used to count the number of substrings and the sum of their characters, respectively.
It also initializes a dictionary `mp` with a default value of 0 for each key.
The variable `n` is set to the length of the input string `s`.
The variable `i` is used as a counter in the loop that iterates from 0 to n-1.
For each character `s[i]`, the function calculates the sum of its ASCII value and subtracts the ASCII value of '0' to get the sum of its digits.
It then updates the variable `sum` with this value.
The function also updates the variable `count` by adding the number of substrings that have the same sum of digits as the current character `s[i]`.
It does this by looking up the value of `sum - (i + 1)` in the dictionary `mp` and adding 1 to it.
Finally, the function updates the dictionary `mp` by adding 1 to the value of `sum - (i + 1)` for the current character `s[i]`.
After the loop finishes, the function returns the value of `count`, which is the number of substrings with the same sum of digits.
<<<Output>>>
The return value of `count_Substrings('112112')` is 6.
This is because the substrings with the same sum of digits are: '1', '11', '12', '112', '21', and '121'.
[END-OF-RESPONSE]