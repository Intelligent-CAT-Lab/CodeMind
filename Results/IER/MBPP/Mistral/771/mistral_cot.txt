 <<<Analysis>>>
The function `check_expression` takes a string `exp` as input.
The function first checks if the length of the string is odd, if it is, it returns False.
Then it creates an empty deque called `stack`.
The function then iterates over each character in the string `exp`.
If the character is either '(', '{' or '[', it is added to the stack.
If the character is either ')', '}' or ']', it checks if the stack is empty. If it is, it returns False.
Then it pops the top element from the stack and checks if it matches the current character.
If the top element is '(' and the current character is ')', or if the top element is '{' and the current character is '}', or if the top element is '[' and the current character is ']', it returns False.
If all the checks pass, the function returns True.
<<<Output>>>
True
[END-OF-RESPONSE]