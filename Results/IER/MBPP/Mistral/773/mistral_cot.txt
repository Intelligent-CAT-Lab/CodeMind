
<<<Analysis>>>
The function `occurance_substring` takes two arguments: `text` and `pattern`.
The function uses the `re.finditer` method from the `re` module to find all occurrences of the `pattern` in the `text`.
For each match found, it extracts the substring using the `match.start()` and `match.end()` methods, and returns a tuple containing the substring, the starting index of the substring and the ending index of the substring.
In this case, the input text is 'python programming, python language' and the input pattern is 'python'.
The function finds two occurrences of the pattern 'python' in the text.
The first occurrence starts at index 10 and ends at index 16. The substring is 'python programming'.
The second occurrence starts at index 25 and ends at index 31. The substring is 'python language'.
The function returns a tuple containing two tuples, each containing the substring, the starting index of the substring and the ending index of the substring.
The final return value is a tuple of tuples: [('python programming', 10, 16), ('python language', 25, 31)]
<<<Output>>>
[('python programming', 10, 16), ('python language', 25, 31)]
[END-OF-RESPONSE]