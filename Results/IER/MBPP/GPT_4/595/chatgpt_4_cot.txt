<<<Analysis>>>
The function `min_Swaps` takes two strings `str1` and `str2` as input and initializes a variable `count` to 0.
The function then iterates over the indices of the strings, comparing the characters at each index.
If the characters at the current index are different, the `count` is incremented by 1.
For the input strings "1101" and "1110":
- At index 0, the characters are the same ('1' and '1'), so `count` remains 0.
- At index 1, the characters are the same ('1' and '1'), so `count` remains 0.
- At index 2, the characters are different ('0' and '1'), so `count` is incremented to 1.
- At index 3, the characters are different ('1' and '0'), so `count` is incremented to 2.
After the loop, `count` is 2, which is an even number.
Since `count` is even, the function returns `count // 2`, which is `2 // 2` equal to 1.
Therefore, the minimum number of swaps required to make `str1` equal to `str2` is 1.
<<<Output>>>
1
[END-OF-RESPONSE]