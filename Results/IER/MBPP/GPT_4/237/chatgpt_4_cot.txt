<<<Analysis>>>
The function `check_occurences` takes a list of tuples as an argument.
The `Counter` class from the `collections` module is used to count the occurrences of each tuple in the list.
Before counting, each tuple is sorted using `map(sorted, test_list)`, which means that the order of elements in the tuples does not matter for the counting. For example, (3, 1) and (1, 3) will be considered the same after sorting, as they both become (1, 3).
The sorted tuples are then converted to a dictionary using `dict(Counter(...))`, which will have the sorted tuples as keys and their counts as values.
The input list is `[(3, 1), (1, 3), (2, 5), (5, 2), (6, 3)]`.
After sorting each tuple, the list becomes `[(1, 3), (1, 3), (2, 5), (2, 5), (3, 6)]`.
The counts of each sorted tuple are then calculated, resulting in `{(1, 3): 2, (2, 5): 2, (3, 6): 1}`.
This dictionary is returned by the function.
<<<Output>>>
{(1, 3): 2, (2, 5): 2, (3, 6): 1}
[END-OF-RESPONSE]