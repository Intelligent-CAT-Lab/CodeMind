  <<<Analysis>>>
The function flatten_list takes a list as input and returns a flattened list.
The function first initializes an empty list result_list.
The function then checks if the input list is empty, if it is, it returns an empty list.
The function then initializes a stack with the input list.
The function then enters a while loop that iterates until the stack is empty.
The function pops the last element of the stack and assigns it to the variable c_num.
The function then pops the last element of c_num and assigns it to the variable next.
The function then checks if c_num is not empty, if it is, it appends c_num to the stack.
The function then checks if next is an instance of list, if it is, it appends next to the stack.
The function then checks if next is not an instance of list, if it is, it appends next to the result_list.
The function then reverses the result_list and returns it.

The input list is [0, 10, [20, 30], 40, 50, [60, 70, 80], [90, 100, 110, 120]].
The function first initializes an empty list result_list.
The function then checks if the input list is empty, if it is, it returns an empty list.
The function then initializes a stack with the input list.
The function then enters a while loop that iterates until the stack is empty.
The function pops the last element of the stack and assigns it to the variable c_num.
The function then pops the last element of c_num and assigns it to the variable next.
The function then checks if c_num is not empty, if it is, it appends c_num to the stack.
The function then checks if next is an instance of list, if it is, it appends next to the stack.
The function then checks if next is not an instance of list, if it is, it appends next to the result_list.
The function then reverses the result_list and returns it.

The output of the function is [0, 10, 20