<<<Analysis>>>
The function `remove_Occ` takes two parameters: `s` and `ch`. 
It initializes a loop that iterates over the length of the string `s`. 
Inside the loop, it checks if the current character `s[i]` is equal to the character `ch`. 
If it is, it removes the character `ch` from the string `s` by slicing the string and concatenating the parts before and after the character `ch`. 
After removing the first occurrence of `ch`, it breaks out of the loop.
Then, it initializes another loop that iterates over the length of the string `s` in reverse order. 
Inside this loop, it checks if the current character `s[i]` is equal to the character `ch`. 
If it is, it removes the character `ch` from the string `s` by slicing the string and concatenating the parts before and after the character `ch`. 
After removing the last occurrence of `ch`, it breaks out of the loop.
Finally, it returns the modified string `s`.

In this case, the string `s` is "hello" and the character `ch` is "l". 
The first loop removes the first occurrence of "l" from the string, resulting in "helo". 
The second loop removes the last occurrence of "l" from the string, resulting in "heo". 
Therefore, the return value of `remove_Occ("hello","l")` is "heo".
<<<Output>>>
heo
[END-OF-RESPONSE]