Below is an instruction that describes a task, paired with an input that provides further context.  Write a response that appropriately completes the request.

### Instruction:
I want you to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the return value of the code.
Below is an example:
Consider the following code:

[[[Example Start]]]
<Code>
def f(s):
    return s + "a"
</Code>
What would be the return value of `f("hi")`?
First analyze step by step about how the code processes the input to generate the output. 
<<<Analysis>>>
The function f takes a string s as input and returns the concatenation of s with the string "a".
To determine the output of executing the function f on the input "hi", we need to concatenate "hi" with "a".
Therefore, the output of executing the function f on the input "hi" is "hia".
<<<Output>>>
'hia'
[END-OF-RESPONSE]
[[[Example End]]]

Consider the following code:
<Code>
def f(sentences):
    if all([sentence.isdecimal() for sentence in sentences.split('.')]):
        return 'oscillating' 
    else:
        return 'not oscillating'
<Code>

What would be the return value of `f('not numbers')`?

First analyze step by step about how the code processes the input. 
Then print the return value of the code based on your analysis.
<<<Analysis>>>
The function f takes a string sentences as input.
The function checks if all the sentences in the input string are decimal numbers by using the isdecimal() method.
If all the sentences are decimal numbers, the function returns the string 'oscillating'.
If not, the function returns the string 'not oscillating'.
To determine the output of executing the function f on the input 'not numbers', we need to check if all the sentences in the input string are decimal numbers.
The input string 'not numbers' contains two sentences: 'not' and 'numbers'.
Both of these sentences are not decimal numbers, so the function returns 'not oscillating'.
<<<Output>>>
'not oscillating'