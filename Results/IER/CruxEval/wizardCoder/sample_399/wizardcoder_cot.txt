Below is an instruction that describes a task, paired with an input that provides further context.  Write a response that appropriately completes the request.

### Instruction:
I want you to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the return value of the code.
Below is an example:
Consider the following code:

[[[Example Start]]]
<Code>
def f(s):
    return s + "a"
</Code>
What would be the return value of `f("hi")`?
First analyze step by step about how the code processes the input to generate the output. 
<<<Analysis>>>
The function f takes a string s as input and returns the concatenation of s with the string "a".
To determine the output of executing the function f on the input "hi", we need to concatenate "hi" with "a".
Therefore, the output of executing the function f on the input "hi" is "hia".
<<<Output>>>
'hia'
[END-OF-RESPONSE]
[[[Example End]]]

Consider the following code:
<Code>
def f(text, old, new):
    if len(old) > 3:
        return text
    if old in text and'' not in text:
        return text.replace(old, new*len(old))
    while old in text:
        text = text.replace(old, new)
    return text
<Code>

What would be the return value of `f('avacado', 'va', '-')`?

First analyze step by step about how the code processes the input. 
Then print the return value of the code based on your analysis.
<<<Analysis>>>
The function f takes three parameters: text, old, and new.
The first if statement checks if the length of old is greater than 3. If it is, the function returns the original text.
The second if statement checks if old is present in the text and if there is no space in the text. If both conditions are true, the function replaces all occurrences of old with new*len(old).
The while loop replaces all occurrences of old with new until there are no more occurrences of old in the text.
Finally, the function returns the modified text.

To determine the output of executing the function f on the input "avacado", "va", and "-", we need to analyze each condition and step of the function.

The first if statement checks if the length of "va" is greater than 3. Since it is not, the function proceeds to the second if statement.

The second if statement checks if "va" is present in "avacado" and if there is no space in "avacado". Since both conditions are true, the function replaces all occurrences of "va" with "-"*3, which is "---".

The while loop replaces all occurrences of "va" with "-" until there are no more occurrences of "va" in "avacado". The modified text is "avac--do".

The function returns the modified text, which is "avac--do".

<<<Output>>>
'avac--do'