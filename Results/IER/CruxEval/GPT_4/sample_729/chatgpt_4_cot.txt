<<<Analysis>>>
The function f takes two strings, s1 and s2, as input and returns a list of indices. These indices represent the ending positions of occurrences of s2 within s1, but in reverse order (from the end of s1 to the beginning).

Here's a step-by-step analysis of what happens when we call `f('abcdefghabc', 'abc')`:

1. Initialize an empty list `res`.
2. Find the last occurrence of s2 ('abc') in s1 ('abcdefghabc') using `rfind`. The index of the last occurrence is 9.
3. Append the index of the last character of this occurrence to `res`. This is calculated as `i + len(s2) - 1`, which is `9 + 3 - 1 = 11`.
4. Search for the next occurrence of s2 before the current index `i` using `rfind` with the end parameter set to `i`. The new value of `i` is the index of the start of the next occurrence of 'abc', which is 0.
5. Append the index of the last character of this occurrence to `res`. This is `0 + 3 - 1 = 2`.
6. The `rfind` method is called again, but since there are no more occurrences of 'abc' before the index 0, it returns -1, and the while loop terminates.

The list `res` now contains the indices [11, 2], which represent the ending positions of the occurrences of 'abc' in 'abcdefghabc', in reverse order.

<<<Output>>>
[11, 2]
[END-OF-RESPONSE]