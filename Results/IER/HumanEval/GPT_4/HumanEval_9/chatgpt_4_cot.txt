<<<Analysis>>>
The function `rolling_max` takes a list of integers as input and returns a new list where each element is the maximum value encountered in the input list up to that index.

1. The input list is `[3, 2, 3, 100, 3]`.
2. The variable `running_max` is initialized to `None`.
3. The variable `result` is initialized to an empty list `[]`.

The function then enters a loop that iterates over each number `n` in the input list:
- For the first number `3`, since `running_max` is `None`, `running_max` is set to `3`. The `result` list becomes `[3]`.
- For the second number `2`, `running_max` is not `None`, so it compares `running_max` (which is `3`) with `2`. The maximum is `3`, so `running_max` remains `3`. The `result` list becomes `[3, 3]`.
- For the third number `3`, it compares `running_max` (which is `3`) with `3`. The maximum is `3`, so `running_max` remains `3`. The `result` list becomes `[3, 3, 3]`.
- For the fourth number `100`, it compares `running_max` (which is `3`) with `100`. The maximum is `100`, so `running_max` is updated to `100`. The `result` list becomes `[3, 3, 3, 100]`.
- For the fifth number `3`, it compares `running_max` (which is `100`) with `3`. The maximum is `100`, so `running_max` remains `100`. The `result` list becomes `[3, 3, 3, 100, 100]`.

After the loop finishes, the function returns the `result` list.

<<<Output>>>
[3, 3, 3, 100, 100]
[END-OF-RESPONSE]