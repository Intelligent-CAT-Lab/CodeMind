<<<Analysis>>>
The function `order_by_points` takes a list of numbers and sorts them based on the sum of their digits. It uses a helper function `digits_sum` to calculate the sum of the digits of each number, with a special consideration for negative numbers.

Here's the step-by-step analysis of the function call `order_by_points([1, 11, -1, -11, -12])`:

1. The `digits_sum` function is defined to calculate the sum of the digits of a number. If the number is negative, it multiplies the first digit by -1 after converting the number to positive. This is to ensure that the negative sign is considered in the sum.

2. The `order_by_points` function sorts the list `nums` using the `sorted` function with a key that is the `digits_sum` function.

3. The `digits_sum` function will be called for each element in the list:
   - `digits_sum(1)` will return 1.
   - `digits_sum(11)` will return 1 + 1 = 2.
   - `digits_sum(-1)` will return -1 (since the first digit is negated).
   - `digits_sum(-11)` will return -1 + 1 = 0.
   - `digits_sum(-12)` will return -1 + 2 = 1.

4. The sorted order based on the `digits_sum` will be:
   - First, the number with the smallest sum, which is -1.
   - Then, the number with the next smallest sum, which is -11.
   - Then, the numbers with the sum of 1, which are 1 and -12. Since 1 comes before -12 in the original list, it will be placed first.
   - Finally, the number with the sum of 2, which is 11.

5. The sorted list will be `[-1, -11, 1, -12, 11]`.

<<<Output>>>
[-1, -11, 1, -12, 11]
[END-OF-RESPONSE]