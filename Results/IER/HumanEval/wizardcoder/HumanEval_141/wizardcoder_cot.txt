Below is an instruction that describes a task, paired with an input that provides further context.  Write a response that appropriately completes the request.

### Instruction:
I want you to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the return value of the code.
Below is an example:
Consider the following code:

[[[Example Start]]]
<Code>
def sum_of_integer(N, A, B):
    sum_1 = 0
    for i in range(1,N+1):
        sum_order = 0
        i_str = str(i)
        n = len(i_str)
        for j in range(0,n):
            sum_order += int(i_str[j])
        if A <= sum_order <= B:
            sum_1 += i
    return sum_1
</Code>
What would be the return value of `sum_of_integer(20, 2, 5)`?
First analyze step by step about how the code processes the input to generate the output. 
<<<Analysis>>>
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code returns the final value of sum_1, which is 84.
<<<Output>>>
84
[END-OF-RESPONSE]
[[[Example End]]]

Consider the following code:
<Code>
def file_name_check(file_name):
    suf = ['txt', 'exe', 'dll']
    lst = file_name.split(sep='.')
    if len(lst)!= 2:
        return 'No'
    if not lst[1] in suf:
        return 'No'
    if len(lst[0]) == 0:
        return 'No'
    if not lst[0][0].isalpha():
        return 'No'
    t = len([x for x in lst[0] if x.isdigit()])
    if t > 3:
        return 'No'
    return 'Yes'

<Code>

What would be the return value of `file_name_check("example.txt") `?

First analyze step by step about how the code processes the input. 
Then print the return value of the code based on your analysis.
<<<Analysis>>>
The variable file_name is initialized to "example.txt".
The code splits the file_name into two parts using the separator '.', and stores them in a list lst.
The code checks if the length of lst is not equal to 2. If it is not, it returns 'No'.
The code checks if the second element of lst is in the list suf. If it is not, it returns 'No'.
The code checks if the length of the first element of lst is equal to 0. If it is, it returns 'No'.
The code checks if the first character of the first element of lst is an alphabet. If it is not, it returns 'No'.
The code counts the number of digits in the first element of lst using a list comprehension and stores the count in t.
The code checks if t is greater than 3. If it is, it returns 'No'.
If none of the above conditions are met, it returns 'Yes'.
<<<Output>>>
Yes
[END-OF-RESPONSE]