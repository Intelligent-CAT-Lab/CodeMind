<<<Analysis>>>
The variable n is initialized with 3 according to the input. And variable prev is calculated as (n + 1) / 4 * 4 - 1, which is 2.
Since prev is greater than 0 and (n & (n - 1)) != 0 is true, it enters the if block.
It prints "Yes" as output.
It initializes an array seq of size 2 * prev and fills it with values from 1 to prev and from n + 1 to n + prev.
Then it prints the pairs of values in seq array.
It initializes an array pxor of size seq.length + 1 and calculates the xor of each element in seq array with (seq[i] - 1) % n + 1 and stores it in pxor array.
It checks if pxor[seq.length / 2] and pxor[seq.length] are both 0. If not, it throws a RuntimeException.
Since n is greater than or equal to prev + 2, it enters the if block.
It prints the pairs of values (prev + 2, prev + 1), (prev + 1, 1), (1, n + prev + 2), (n + prev + 2, n + prev + 1).
If n is greater than prev + 2, it enters another if block.
It checks if pxor[dest + 1] is equal to n, n ^ (prev + 1) or n ^ (prev + 2) for each dest in seq array.
If any of the conditions is true, it prints the pairs of values (n, 1) and (seq[dest], n + n).
If none of the conditions is true, it throws a RuntimeException.
If n is equal to prev + 1, it enters another else if block.
It checks if (pxor[src] ^ pxor[dest + 1]) is equal to n for each src and dest in seq array.
If the condition is true, it prints the pairs of values (n, seq[src]) and (seq[dest], n + n).
If the condition is false, it throws a RuntimeException.
If n is not equal to prev, it throws a RuntimeException.
<<<Output>>>
Yes
2 1
3 4
4 5
5 6
6 7
7 8
8 9
9 10
10 11
11 12
12 13
13 14
14 15
15 16
16 17
17 18
18 19
19 20
20 21
21 22
22 23
23 24
24 25
25 26
26 27
27 28
28 29
29 30
30 31
31 32
32 33
33 34
34 35
35 36
36 37
37 38
38 39
39 40
40 41
41 42
42 43
43 44
44 45
45 46
46 47
47 48
48 49
49 50
50 51
51 52
52 53
53 54
54 55
55 56
56 57
57 58
58 59
59 60
60 61
61 62
62 63
63 64
64 65
65 66
66 67
67 68
68 69
69 70
70 71
71 72
72 73
73 74
74 75
75 76
76 77
77 78
78 79
79 80
80 81
81 82
82 83
83 84
84 85
85 86
86 87
87 88
88 89
89 90
90 91
91 92
92 93
93 94
94 95
95 96
96 97
97 98
98 99
99 100
100 101
101 102
102 103
103 104
104 105
105 106
106 107
107 108
108 109
109 110
110 111
111 112
112 113
113 114
114 115
115 116
116 117
117 118
118 119
119 120
120 121
121 122
122 123
123 124
124 125
125 126
126 127
127 128
128 129
129 130
130 131
131 132
132 133
133