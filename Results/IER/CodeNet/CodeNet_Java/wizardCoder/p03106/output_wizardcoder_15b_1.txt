Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
Below is an example:
[[[Example Start]]]
I want to act as a Java code executor. I will give you a piece of Java code and its input. You need to print the output of the code.
Consider the following code:
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {

    public static void main(String[] args) {
        try {
            InputStreamReader isr = new InputStreamReader(System.in);
            BufferedReader br = new BufferedReader(isr);
            String strArr[] = br.readLine().split(" ");

            int n = Integer.parseInt(strArr[0]);
            int a = Integer.parseInt(strArr[1]);
            int b = Integer.parseInt(strArr[2]);
            int answer = 0;

            for (int i = 1; i < n + 1; i++) {
                int num = i;
                int sum = 0;

                while (num!= 0) {
                        sum += num % 10;
                        num /= 10;
                }

                if (sum >= a && sum <= b ) {
                        answer = answer + i;
                }
            }
            System.out.println(answer);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
<<Question>>
What would be the output of code executiion given the following input:
20 2 5
Only print the output of code execution and end your response with "END-OF-OUTPUT":
<<Answer>>
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
		Scanner stdIn=new Scanner(System.in);
		int A=stdIn.nextInt();
		int B=stdIn.nextInt();
		int K=stdIn.nextInt();
		int s[]=new int[A+B];
		int z=1,y=0;
		while(z<=A&&z<=B){
			if(A%z==0&&B%z==0){
				s[y]=z;
				y++;
			}
			z++;
		}
		System.out.println(s[y-K]);
	}

}
<<Question>>
What would be the output of code executiion given the following input:
8 12 2

Only print the output of code execution and end your response with "END-OF-OUTPUT":\<<Answer>>
### Response:
The output of the code execution would be:

4

END-OF-OUTPUT

Explanation:

The given code is a Java program that takes three integers A, B, and K as input from the user. The program then finds the greatest common divisor (GCD) of A and B using the Euclidean algorithm. The GCD is then used to find the Kth number in the sequence of numbers from 1 to A+B that are divisible by the GCD. The program then prints the Kth number in the sequence.

For the given input, the program first initializes three variables A, B, and K with the values 8, 12, and 2 respectively. It then creates an array of size A+B to store the numbers that are divisible by the GCD.

The program then initializes two variables z and y to 1 and 0 respectively. It then enters a while loop that continues until