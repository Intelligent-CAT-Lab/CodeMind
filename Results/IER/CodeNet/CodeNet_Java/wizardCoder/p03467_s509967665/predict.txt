
The variable `s` is initialized with "011".
The function `doit` is called with `s` and an empty cache.
The base case is reached when `s` is empty, in which case the function returns 1.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function is called recursively with `s` without the first character and the result is stored in `woFirst`.
The function