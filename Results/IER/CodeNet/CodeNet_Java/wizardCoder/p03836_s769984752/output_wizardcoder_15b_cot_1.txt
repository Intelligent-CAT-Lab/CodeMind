Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
Below is an example:
[[[Example Start]]]
I want to act as a Java code executor. I will give you a piece of Java code and its input. You need to print the output of the code.
Consider the following code:
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {

    public static void main(String[] args) {
        try {
            InputStreamReader isr = new InputStreamReader(System.in);
            BufferedReader br = new BufferedReader(isr);
            String strArr[] = br.readLine().split(" ");

            int n = Integer.parseInt(strArr[0]);
            int a = Integer.parseInt(strArr[1]);
            int b = Integer.parseInt(strArr[2]);
            int answer = 0;

            for (int i = 1; i < n + 1; i++) {
                int num = i;
                int sum = 0;

                while (num!= 0) {
                        sum += num % 10;
                        num /= 10;
                }

                if (sum >= a && sum <= b ) {
                        answer = answer + i;
                }
            }
            System.out.println(answer);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
<<Question>>
What would be the output of code executiion given the following input:
20 2 5
First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT".
<<Answer>>
The variable `n`, variable `a` and variable `b` are initialized with 20, 2 and 5, respectively. And variable `answer` is initialized with 0.
It enters a for loop and it iterates from 1 to 20 to check each integer `i` in this range.
In each iteration, the value of variable `i` is passed to variable `num` and variable `sum` is first initialized with 0.
Then it calculates the sum of the digits of the variable `num` by repeatedlly extracting the digits of `num` with a while loop and adding it to variable `sum`.
After that it checks if the calculated variable `sum` fall within the range [2, 5]. If it does, it adds the value of variable `i` to variable `answer`. The condition is met when `i` is 2,3,4,5,11,12,13,14 and 20.
When the loop finishes, it print the fianl value of variable `answer` as output, which is 84.

The output of code execution is:
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
import java.util.*;

public class Main{
    
    public static void main(String args[]){
        Scanner sc = new Scanner(System.in);
        
        int sx = sc.nextInt();
        int sy = sc.nextInt();
        int tx = sc.nextInt();
        int ty = sc.nextInt();
        sc.close();

        for(int i = 0; i < tx-sx; i++){
            System.out.print("R");
        }
        for(int i = 0; i < ty-sy; i++){
            System.out.print("U");
        }
        
        for(int i = 0; i < tx-sx; i++){
            System.out.print("L");
        }
        for(int i = 0; i < ty-sy; i++){
            System.out.print("D");
        }

        System.out.print("D");
        for(int i = 0; i < tx-sx+1; i++){
            System.out.print("R");
        }
        for(int i = 0; i < ty-sy+1; i++){
            System.out.print("U");
        }
        System.out.print("L");

        System.out.print("U");
        for(int i = 0; i < tx-sx+1; i++){
            System.out.print("L");
        }
        for(int i = 0; i < ty-sy+1; i++){
            System.out.print("D");
        }
        System.out.print("R");
    }
}
<<Question>>
What would be the output of code executiion given the following input:
0 0 1 2

First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT"\<<Answer>>
### Response:
The variable `sx`, `sy`, `tx`, and `ty` are initialized with 0, 0, 1, and 2, respectively.

The first for loop prints "R" `tx-sx` times.
The second for loop prints "U" `ty-sy` times.
The third for loop prints "L" `tx-sx` times.
The fourth for loop prints "D" `ty-sy` times.

The fifth for loop prints "D" once.
The sixth for loop prints "R" `tx-sx+1` times.
The seventh for loop prints "U" `ty-sy+1` times.
The eighth for loop prints "L" once.
The ninth for loop prints "U" once.
The tenth for loop prints "L" `tx-sx+1` times.
The eleventh for loop prints "D" `ty-sy+1` times.
The twelfth for loop prints "R" once.

The output of code execution is:
RULDURDLRUDLRUDR
END-OF-OUTPUT