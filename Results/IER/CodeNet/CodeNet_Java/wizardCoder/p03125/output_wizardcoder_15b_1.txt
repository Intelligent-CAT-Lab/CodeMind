Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
Below is an example:
[[[Example Start]]]
I want to act as a Java code executor. I will give you a piece of Java code and its input. You need to print the output of the code.
Consider the following code:
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {

    public static void main(String[] args) {
        try {
            InputStreamReader isr = new InputStreamReader(System.in);
            BufferedReader br = new BufferedReader(isr);
            String strArr[] = br.readLine().split(" ");

            int n = Integer.parseInt(strArr[0]);
            int a = Integer.parseInt(strArr[1]);
            int b = Integer.parseInt(strArr[2]);
            int answer = 0;

            for (int i = 1; i < n + 1; i++) {
                int num = i;
                int sum = 0;

                while (num!= 0) {
                        sum += num % 10;
                        num /= 10;
                }

                if (sum >= a && sum <= b ) {
                        answer = answer + i;
                }
            }
            System.out.println(answer);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
<<Question>>
What would be the output of code executiion given the following input:
20 2 5
Only print the output of code execution and end your response with "END-OF-OUTPUT":
<<Answer>>
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
import java.util.*;
import java.util.stream.*;
import java.util.function.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int a = Integer.parseInt(sc.next());
        int b = Integer.parseInt(sc.next());
        
        System.out.println(b % a == 0? a + b : b - a);
    }
    
    // // パラメタ渡しもちゃんとクラス作るのも面倒なので手抜き
    // // 必要な値はここで全部取ってしまう
    // Scanner sc = new Scanner(System.in);
    // int n = Integer.parseInt(sc.next());
    // {sc.nextLine();}
    // int[] a = IntStream.range(0, n).map(i -> Integer.parseInt(sc.next())).toArray();
    
    // String solve() {
    //     return n + "" + Arrays.toString(a);
    // }
    
}

<<Question>>
What would be the output of code executiion given the following input:
4 12

Only print the output of code execution and end your response with "END-OF-OUTPUT":\<<Answer>>
### Response:
The output of the code execution would be:

8

END-OF-OUTPUT

Explanation:

The code takes two integers as input from the user, a and b. It then checks if b is divisible by a. If it is, it adds a and b and prints the result. If it is not, it subtracts a from b and prints the result. In this case, b is not divisible by a, so the code subtracts a from b, which is 12 - 4 = 8.