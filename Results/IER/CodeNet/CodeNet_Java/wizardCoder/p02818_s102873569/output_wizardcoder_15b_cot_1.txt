Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
Below is an example:
[[[Example Start]]]
I want to act as a Java code executor. I will give you a piece of Java code and its input. You need to print the output of the code.
Consider the following code:
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {

    public static void main(String[] args) {
        try {
            InputStreamReader isr = new InputStreamReader(System.in);
            BufferedReader br = new BufferedReader(isr);
            String strArr[] = br.readLine().split(" ");

            int n = Integer.parseInt(strArr[0]);
            int a = Integer.parseInt(strArr[1]);
            int b = Integer.parseInt(strArr[2]);
            int answer = 0;

            for (int i = 1; i < n + 1; i++) {
                int num = i;
                int sum = 0;

                while (num!= 0) {
                        sum += num % 10;
                        num /= 10;
                }

                if (sum >= a && sum <= b ) {
                        answer = answer + i;
                }
            }
            System.out.println(answer);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
<<Question>>
What would be the output of code executiion given the following input:
20 2 5
First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT".
<<Answer>>
The variable `n`, variable `a` and variable `b` are initialized with 20, 2 and 5, respectively. And variable `answer` is initialized with 0.
It enters a for loop and it iterates from 1 to 20 to check each integer `i` in this range.
In each iteration, the value of variable `i` is passed to variable `num` and variable `sum` is first initialized with 0.
Then it calculates the sum of the digits of the variable `num` by repeatedlly extracting the digits of `num` with a while loop and adding it to variable `sum`.
After that it checks if the calculated variable `sum` fall within the range [2, 5]. If it does, it adds the value of variable `i` to variable `answer`. The condition is met when `i` is 2,3,4,5,11,12,13,14 and 20.
When the loop finishes, it print the fianl value of variable `answer` as output, which is 84.

The output of code execution is:
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        
        Scanner sc = new Scanner(System.in);
        String line1 = sc.nextLine();
        String[] array = line1.split(" ");
        
        long a = Long.parseLong(array[0]);
        long b = Long.parseLong(array[1]);
        long k = Long.parseLong(array[2]);
        
        if(a > 0 && k > 0)
        {
            if(k >= a)
            {
                k -= a;
                a = 0;
            }
            else
            {
                a -= k;
                k = 0;
            }
        }
        if(b > 0 && k > 0)
        {
            if(k >= b)
            {
                k -= b;
                b = 0;
            }
            else
            {
                b -= k;
                k = 0;
            }
        }
        
        System.out.println(a + " " + b);
    }
}

<<Question>>
What would be the output of code executiion given the following input:
2 3 3

First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT"\<<Answer>>
### Response:
The variable `a`, `b` and `k` are initialized with 2, 3 and 3, respectively.

The first if statement checks if `a` is greater than 0 and `k` is greater than 0. If it is true, it subtracts `a` from `k` and sets `a` to 0. If `k` is less than `a`, it subtracts `k` from `a` and sets `k` to 0.

The second if statement checks if `b` is greater than 0 and `k` is greater than 0. If it is true, it subtracts `b` from `k` and sets `b` to 0. If `k` is less than `b`, it subtracts `k` from `b` and sets `k` to 0.

Finally, it prints the values of `a` and `b` as output, which is 0 0.

The output of code execution is:
0 0
END-OF-OUTPUT