Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
Below is an example:
[[[Example Start]]]
I want to act as a Java code executor. I will give you a piece of Java code and its input. You need to print the output of the code.
Consider the following code:
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {

    public static void main(String[] args) {
        try {
            InputStreamReader isr = new InputStreamReader(System.in);
            BufferedReader br = new BufferedReader(isr);
            String strArr[] = br.readLine().split(" ");

            int n = Integer.parseInt(strArr[0]);
            int a = Integer.parseInt(strArr[1]);
            int b = Integer.parseInt(strArr[2]);
            int answer = 0;

            for (int i = 1; i < n + 1; i++) {
                int num = i;
                int sum = 0;

                while (num!= 0) {
                        sum += num % 10;
                        num /= 10;
                }

                if (sum >= a && sum <= b ) {
                        answer = answer + i;
                }
            }
            System.out.println(answer);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
<<Question>>
What would be the output of code executiion given the following input:
20 2 5
First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT".
<<Answer>>
The variable `n`, variable `a` and variable `b` are initialized with 20, 2 and 5, respectively. And variable `answer` is initialized with 0.
It enters a for loop and it iterates from 1 to 20 to check each integer `i` in this range.
In each iteration, the value of variable `i` is passed to variable `num` and variable `sum` is first initialized with 0.
Then it calculates the sum of the digits of the variable `num` by repeatedlly extracting the digits of `num` with a while loop and adding it to variable `sum`.
After that it checks if the calculated variable `sum` fall within the range [2, 5]. If it does, it adds the value of variable `i` to variable `answer`. The condition is met when `i` is 2,3,4,5,11,12,13,14 and 20.
When the loop finishes, it print the fianl value of variable `answer` as output, which is 84.

The output of code execution is:
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
import java.util.*;
import java.math.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        double a, b, c;
        a = sc.nextDouble();
        b = sc.nextDouble();
        c = sc.nextDouble();
        System.out.println(0.5 * a * b * Math.sin(Math.toRadians(c)));
        System.out.println(a + b + Math.sqrt(a*a+b*b - (2 * (a * b * Math.cos(Math.toRadians(c))))));
        System.out.println(b * Math.sin(Math.toRadians(c)));
    }
}

<<Question>>
What would be the output of code executiion given the following input:
4 3 90

First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT"\<<Answer>>
### Response:
The variable `a`, `b` and `c` are initialized with 4, 3 and 90, respectively.

The first line of code calculates the area of a triangle given the base and height using the formula:

area = 0.5 * base * height

So, the area of the triangle with base 4 and height 3 is:

area = 0.5 * 4 * 3 = 6

The second line of code calculates the length of the hypotenuse of a right-angled triangle given the legs using the formula:

hypotenuse = sqrt(leg1^2 + leg2^2)

So, the length of the hypotenuse of the triangle with legs 4 and 3 is:

hypotenuse = sqrt(4^2 + 3^2) = sqrt(16 + 9) = sqrt(25) = 5

The third line of code calculates the length of the side of a right-angled triangle given the angle and the hypotenuse using the formula:

side = hypotenuse * sin(angle)

So, the length of the side of the triangle with angle 90 and hypotenuse 5 is:

side = 5 * sin(90) = 5 * 1 = 5

Therefore, the output of code execution is:

6.0
5.0
5.0
END-OF-OUTPUT