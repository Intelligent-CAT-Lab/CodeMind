Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
Below is an example:
[[[Example Start]]]
I want to act as a Java code executor. I will give you a piece of Java code and its input. You need to print the output of the code.
Consider the following code:
import java.io.BufferedReader;
import java.io.InputStreamReader;

public class Main {

    public static void main(String[] args) {
        try {
            InputStreamReader isr = new InputStreamReader(System.in);
            BufferedReader br = new BufferedReader(isr);
            String strArr[] = br.readLine().split(" ");

            int n = Integer.parseInt(strArr[0]);
            int a = Integer.parseInt(strArr[1]);
            int b = Integer.parseInt(strArr[2]);
            int answer = 0;

            for (int i = 1; i < n + 1; i++) {
                int num = i;
                int sum = 0;

                while (num!= 0) {
                        sum += num % 10;
                        num /= 10;
                }

                if (sum >= a && sum <= b ) {
                        answer = answer + i;
                }
            }
            System.out.println(answer);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
<<Question>>
What would be the output of code executiion given the following input:
20 2 5
Only print the output of code execution and end your response with "END-OF-OUTPUT":
<<Answer>>
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int ans = n;
        for(int a = 2; a <= n/2; a++) {
            int b = n - a;
            int sum = digit(a) + digit(b);
            ans = Math.min(sum,ans);
        }
        System.out.println(ans);
    }
    
    static int digit(int num) {
        int r = 0;
        while(true) {
            r += (num%10);
            num /= 10;
            if(num == 0) break;
        }
        return r;
    }
}
<<Question>>
What would be the output of code executiion given the following input:
15

Only print the output of code execution and end your response with "END-OF-OUTPUT":\<<Answer>>
### Response:
The output of the code execution would be:

15

END-OF-OUTPUT

Explanation:

The code takes an integer input n and finds the minimum sum of digits of all possible pairs of numbers (a,b) such that a+b=n and a and b are positive integers.

For example, if n=15, then the possible pairs are (2,13) and (3,12). The sum of digits of these pairs are 2+3=5 and 3+2=5 respectively. The minimum sum of digits is 5, which is the output of the code.