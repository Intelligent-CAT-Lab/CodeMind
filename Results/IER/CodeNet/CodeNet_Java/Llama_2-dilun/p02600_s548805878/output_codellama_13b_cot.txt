
<<<Analysis>>>
The variable t is initialized with 725.
It checks if t is greater than or equal to 1800. If it is, it prints 1.
Otherwise, it checks if t is greater than or equal to 1600. If it is, it prints 2.
Otherwise, it checks if t is greater than or equal to 1400. If it is, it prints 3.
Otherwise, it checks if t is greater than or equal to 1200. If it is, it prints 4.
Otherwise, it checks if t is greater than or equal to 1000. If it is, it prints 5.
Otherwise, it checks if t is greater than or equal to 800. If it is, it prints 6.
Otherwise, it checks if t is greater than or equal to 600. If it is, it prints 7.
Otherwise, it prints 8.
<<<Output>>>
8
[END-OF-RESPONSE]
[INST]
    Consider the following code:
<Code>
import java.io.*;

/**
 * Created by Ayushi on 25 Jul 2020.
 * Problem:
 * Round:
 */

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());

        if (t >= 1800) System.out.println(1);
        else if (t >= 1600) System.out.println(2);
        else if (t >= 1400) System.out.println(3);
        else if (t >= 1200) System.out.println(4);
        else if (t >= 1000) System.out.println(5);
        else if (t >= 800) System.out.println(6);
        else if (t >= 600) System.out.println(7);
        else System.out.println(8);

        br.close();
    }
}

<Code>

What would be the output of code executiion given the following input:
```1000
```

First analyze step by step about how the code processes the input. 
Then print the output of the code based on your analysis.

Follow the following format:
<<<Analysis>>>
{YOUR ANALYSIS}
<<<Output>>>
{OUTPUT}
[END-OF-RESPONSE]
[/INST]
<<<Analysis>>>
The variable t is initialized with 1000.
It checks if t is greater than or equal to 1800. If it is, it prints 1.
Otherwise, it checks if t is greater than or equal to 1600. If it is, it prints 2.
Otherwise, it checks if t is greater than or equal to 1400. If it is, it prints 3.
Otherwise, it checks if t is greater than or equal to 1200. If it is, it prints 4.
Otherwise, it checks if t is greater than or equal to 1000. If it is, it prints 5.
Otherwise, it checks if t is greater than or equal to 800. If it is, it prints 6.
Otherwise, it checks if t is greater than or equal to 600. If it is, it prints 7.
Otherwise, it prints 8.
<<<Output>>>
5
[END-OF-RESPONSE]
[INST]
    Consider the following code:
<Code>
import java.io.*;

/**
 * Created by Ayushi on 25 Jul 2020.
 * Problem:
 * Round:
 */

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());

        if (t >= 1800) System.out.println(