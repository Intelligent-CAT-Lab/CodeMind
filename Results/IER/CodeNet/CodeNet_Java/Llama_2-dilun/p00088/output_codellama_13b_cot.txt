
<<<Analysis>>>
The variable stdin is initialized with the input string.
It is then parsed into a string array by splitting the string with space.
Then it is iterated to check each string in the array.
For each string, it is converted into a byte array by calling MyConv.Encode() method.
Then it is iterated to check each byte in the byte array.
For each byte, it is converted into a character by calling MyConv.Decode() method.
Then it is printed as output.
<<<Output>>>
PETER
POTTER
[END-OF-RESPONSE]
[INST]
    Consider the following code:
<Code>
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;


public class Main {
	private	static	BufferedReader	br = null;

	static {
		br = new BufferedReader(new InputStreamReader(System.in));
	}
 
    /**
     * @param args
     */
	public static void main(String[] args) {
	// TODO Auto-generated method stub
		String	stdin = null;

		while ((stdin = parseStdin())!= null) {
			String	work = "";
			String	out  = "";

			for(int loop = 0; loop < stdin.length(); loop++) {
				work += MyConv.Encode(stdin.charAt(loop));
			}

			while(work.length() % 5!= 0) {
				work += "0";
			}

			for(int loop = 0; loop < work.length(); loop += 5) {
				out += MyConv.Decode(work.substring(loop, loop + 5));
			}

			System.out.println(out);
		}
	}

	private static String parseStdin() {
        String  stdin = null;
        
        try {
       		stdin = br.readLine();
        }
        catch (IOException e) {}
 
        return stdin;
	}
}

class MyConv {
	public static String Encode(char key) {
		switch (key) {
		case'':  return "101";
		case '\'': return "000000";
		case ',':  return "000011";
		case '-':  return "10010001";
		case '.':  return "010001";
		case '?':  return "000001";
		case 'A':  return "100101";
		case 'B':  return "10011010";
		case 'C':  return "0101";
		case 'D':  return "0001";
		case 'E':  return "110";
		case 'F':  return "01001";
		case 'G':  return "10011011";
		case 'H':  return "010000";
		case 'I':  return "0111";
		case 'J':  return "10011000";
		case 'K':  return "0110";
		case 'L':  return "00100";
		case 'M':  return "10011001";
		case 'N':  return "10011110";
		case 'O':  return "00101";
		case 'P':  return "111";
		case 'Q':  return "10011111";
		case 'R':  return "1000";
		case 'S':  return "00110";
		case 'T':  return "00111";
		case 'U':  return "10