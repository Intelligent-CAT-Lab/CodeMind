
<<<Analysis>>>
The variable cnta is initialized with 0.
It enters a for loop and it iterates from 0 to 3 to check each integer i in this range. The value of variable i is also passed to variable c.
Inside the for loop, it calculates the sum of the digits of the current interger c by repeatedlly extracting the digits of number with a while loop and adding it to variable sum.
Then it checks if the calculated variable sum falls within the range [0, 2]. If it does, it adds the current interger i to variable cnta. The condition is met when i is 0,1,2 and 3.
After the loop finishes, it print the fianl value of variable cnta as output, which is 2.
<<<Output>>>
2
[END-OF-RESPONSE]
[INST]
    Consider the following code:
<Code>
import java.io.*;
import java.util.*;


public class Main {

	private static Scanner sc;
	private static Printer pr;

	private static void solve() {
		char[] s = sc.next().toCharArray();

		int cnta = 0, cntb = 0, cntc = 0;
		for (char c : s) {
			if (c == 'a') {
				cnta++;
			} else if (c == 'b') {
				cntb++;
			} else if (c == 'c') {
				cntc++;
			}
		}

		if (Math.abs(cnta - cntb) > 1 || Math.abs(cntb - cntc) > 1 || Math.abs(cntc - cnta) > 1) {
			pr.println("NO");
		} else {
			pr.println("YES");
		}
	}

	// ---------------------------------------------------
	public static void main(String[] args) {
		sc = new Scanner(System.in);
		pr = new Printer(System.out);

		solve();

		pr.close();
		sc.close();
	}

	@SuppressWarnings("unused")
	private static class Scanner {
		BufferedReader br;

		Scanner (InputStream in) {
			br = new BufferedReader(new InputStreamReader(in));
		}

		private boolean isPrintable(int ch) {
			return ch >= '!' && ch <= '~';
		}

		private boolean isCRLF(int ch) {
			return ch == '\n' || ch == '\r' || ch == -1;
		}

		private int nextPrintable() {
			try {
				int ch;
				while (!isPrintable(ch = br.read())) {
					if (ch == -1) {
						throw new NoSuchElementException();
					}
				}

				return ch;
			} catch (IOException e) {
				throw new NoSuchElementException();
			}
		}

		String next() {
			try {
				int ch = nextPrintable();
				StringBuilder sb = new StringBuilder();
				do {
					sb.appendCodePoint(ch);
				} while (isPrintable(ch = br.read()));

				return sb.toString();
			} catch (IOException e) {
				throw new NoSuchElementException();
			}
		}

		int nextInt() {
			try {
				// parseInt from Integer.parseInt()
				boolean negative = false;
				int res = 0;
				int limit = -Integer.MAX_VALUE;
				int radix = 10;

		