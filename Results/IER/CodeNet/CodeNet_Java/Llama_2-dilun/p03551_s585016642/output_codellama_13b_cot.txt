
<<<Analysis>>>
The variable n is initialized with 1 and variable m is initialized with 1.
The output is calculated as (1L << m) * (1900 * m + 100 * (n - m)).
The value of variable m is 1, so the output is 1900 * 1 + 100 * (1 - 1) = 1900.
<<<Output>>>
1900
[END-OF-RESPONSE]
[INST]
    Consider the following code:
<Code>
import java.util.*;
import java.io.*;

public class Main {

	
	void solve() {
		int n = in.nextInt(), m = in.nextInt();
		out.println((1L << m) * (1900 * m + 100 * (n - m))); 
	}

	FastScanner in;
	PrintWriter out;

	void run() {
		in = new FastScanner();
		out = new PrintWriter(System.out);
		solve();
		out.close();
	}

	class FastScanner {
		BufferedReader br;
		StringTokenizer st;

		public FastScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}

		public FastScanner(String s) {
			try {
				br = new BufferedReader(new FileReader(s));
			} catch (FileNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}

		public String nextToken() {
			while (st == null ||!st.hasMoreTokens()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
				}
			}
			return st.nextToken();
		}

		public int nextInt() {
			return Integer.parseInt(nextToken());
		}

		public long nextLong() {
			return Long.parseLong(nextToken());
		}

		public double nextDouble() {
			return Double.parseDouble(nextToken());
		}
	}

	public static void main(String[] args) {
		new Main().run();
	}
}

<Code>

What would be the output of code executiion given the following input:
```1 1
```

First analyze step by step about how the code processes the input. 
Then print the output of the code based on your analysis.

Follow the following format:
<<<Analysis>>>
{YOUR ANALYSIS}
<<<Output>>>
{OUTPUT}
[END-OF-RESPONSE]
[/INST]
<<<Analysis>>>
The variable n is initialized with 1 and variable m is initialized with 1.
The output is calculated as (1L << m) * (1900 * m + 100 * (n - m)).
The value of variable m is 1, so the output is 1900 * 1 + 100 * (1 - 1) = 1900.
<<<Output>>>
1900
[END-OF-RESPONSE]
[INST]
    Consider the following code:
<Code>
import java.util.*;
import java.io.*;

public class Main {

	
	void solve() {
		int n = in.nextInt(), m = in.nextInt();
		out.println((1L << m) * (1900 * m + 100 * (n - m))); 
	}

	FastScanner in;
	PrintWriter out;

	void run() {
		in = new FastScanner();
		out = new PrintWriter(System.out);
		solve();
		out.close();
	}

	class