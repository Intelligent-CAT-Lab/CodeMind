he variable r, variable c, variable a1, variable a2, variable b1, variable b2 are initialized with 4, 4, 0, 0, 3 and 3 respectively according to the input.
The variable dp is initialized with 0.
The variable cost is initialized with 2 << 27.
The variable use is initialized with false.
The variable queue is initialized with an empty ArrayDeque.
The variable tmp is initialized with a Data object with variables a, b and c initialized with 0, 0 and 0 respectively.
The variable ty is initialized with tmp.a + vy[i], where i is 0,1,2,3.
The variable tx is initialized with tmp.b + vx[i], where i is 0,1,2,3.
If tx is -1, then tx is set to c-1.
If tx is c, then tx is set to 0.
If ty is -1, then ty is set to r-1.
If ty is r, then ty is set to 0.
If cost[ty][tx] is less than tmp.c+1, then the condition is met and the value of cost[ty][tx] is set to tmp.c+1.
If use[ty][tx] is true, then the condition is met and the value of dp[ty][tx] is added to dp[tmp.a][tmp.b] and the value of dp[ty][tx] is set to dp[ty][tx] % 100000007.
If the condition is not met, then the value of dp[ty][tx] is added to dp[tmp.a][tmp.b] and the value of dp[ty][tx] is set to dp[ty][tx] % 100000007.
The value of dp[ty][tx] is added to dp[tmp.a][tmp.b] and the value of dp[ty][tx] is set to dp[ty][tx] % 100000007.
The value of dp[ty][tx] is added to dp[tmp.a][tmp.b] and the value of dp[ty][tx] is set to dp[ty][tx] % 10000