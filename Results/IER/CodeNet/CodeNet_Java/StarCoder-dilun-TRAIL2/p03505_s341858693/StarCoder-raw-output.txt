e variable k, variable a and variable b are initialized with 4000, 2000 and 500 respectively according to the input.
It checks if k is less than or equal to a. If it is, it prints 1 as output.
If it is not, it checks if a minus b is less than or equal to 0. If it is, it prints -1 as output.
If it is not, it calculates the value of expression (k minus b minus 1) divided by (a minus b) times 2 plus 1.
<<<Output>>>
1
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
import java.io.InputStream;
import java.io.OutputStream;
import java.io.InputStreamReader;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.util.StringTokenizer;
import java.io.UncheckedIOException;
import java.nio.charset.Charset;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 *
 * @author mikit
 */
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        LightScanner in = new LightScanner(inputStream);
        LightWriter out = new LightWriter(outputStream);
        AKaiden solver = new AKaiden();
        solver.solve(1, in, out);
        out.close();
    }

    static class AKaiden {
        public void solve(int testNumber, LightScanner in, LightWriter out) {
            // out.setBoolLabel(LightWriter.BoolLabel.YES_NO_FIRST_UP);
            long n = in.longs(), k = in.longs();
            if (n == 1) {
                out.ans(k).ln();
            } else {
                long ans = 0;
                for (long i = 1; i <= n; i++) {
                    ans += k * i;
                }
                out.ans(ans).ln();
            }
        }

    }

    static class LightWriter implements AutoCloseable {
        private final Writer out;
        private boolean autoflush = false;