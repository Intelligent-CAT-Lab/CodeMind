 variable ans is initialized with 0.
It enters a for loop and it iterates from 0 to 3 to check each integer i in this range. The value of variable i is also passed to variable input.
Inside the for loop, it adds the current interger input to variable ans. The condition is met when i is 0,1,2 and 3.
After the loop finishes, it print the fianl value of variable ans as output, which is 8.
<<<Output>>>
8
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        FastScanner sc = new FastScanner(System.in);
        PrintWriter out = new PrintWriter(System.out);
        int n = sc.nextInt();
        int[] arr = new int[n];
        for(int i=0; i<n; i++){
            arr[i] = sc.nextInt();
        }
        int ans = 0;
        for(int i=0; i<n; i++){
            ans += arr[i];
        }
        out.println(ans);
        out.flush();

    }

    static class FastScanner {
        private BufferedReader reader = null;
        private StringTokenizer tokenizer = null;

        public FastScanner(InputStream in) {
            reader = new BufferedReader(new InputStreamReader(in));
            tokenizer = null;
        }

        public String next() {
            if (tokenizer == null ||!tokenizer.hasMoreTokens()) {
                try {
                    tokenizer = new StringTokenizer(reader.readLine());
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
            return tokenizer.nextToken();
        }

        public String nextLine() {
            if (tokenizer == null ||!tokenizer.hasMoreTokens()) {
                try {
                    return reader.readLine();
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }

            return tokenizer.nextToken("\n");
        }

        public long nextLong() {
            return Long.parseLong(next());
        }

        public int nextInt() {
            return Integer.parseInt(next());
        }

    }
}

</Code>
<<<Question>>>
What would be the output of code executiion given the following input:
```4 