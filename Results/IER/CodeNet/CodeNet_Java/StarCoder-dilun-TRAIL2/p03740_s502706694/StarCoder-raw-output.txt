e variable x and variable y are initialized with 2 and 1 respectively according to the input.
Then it calculates the difference between x and the minimum of x and y.
Then it calculates the difference between y and the minimum of x and y.
Then it checks if the sum of the two differences is less than or equal to 1. If it is, it prints "Brown". Otherwise, it prints "Alice".
<<<Output>>>
Alice
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
import java.io.*;
import java.math.BigInteger;

public class Main  implements Runnable {
    static ContestScanner in;
    static Writer out;
    public static void main(String[] args) {
        new Thread(null, new Main(), "", 16 * 1024 * 1024).start();
    }

    public void run() {
        Main main = new Main();
        try {
            in = new ContestScanner();
            out = new Writer();
            main.solve();
            out.close();
            in.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    void solve() throws IOException {
        int n = in.nextInt();
        int m = in.nextInt();
        int k = in.nextInt();
        int[] a = new int[n];
        int[] b = new int[m];
        for (int i = 0; i < n; i++) {
            a[i] = in.nextInt();
        }
        for (int i = 0; i < m; i++) {
            b[i] = in.nextInt();
        }
        int[] c = new int[n + m];
        int i = 0, j = 0, l = 0;
        while (i < n && j < m) {
            if (a[i] < b[j]) {
                c[l++] = a[i++];
            } else {
                c[l++] = b[j++];
            }
        }
        while (i < n) {
            c[l++] = a[i++];
        }
        while (j < m) {
            c[l++] = b[j++];
        }
        int[] d = new int[k];
        for (int i = 0; i < k; i++) {
            d