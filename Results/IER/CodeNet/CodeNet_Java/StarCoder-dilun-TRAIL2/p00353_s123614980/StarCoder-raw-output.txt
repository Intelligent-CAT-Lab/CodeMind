he variable k1 is initialized with 3 integers, which are 1000, 3000 and 3000 respectively according to the input.
It enters a while loop and it reads the input line by line.
Inside the while loop, it splits the input line into tokens using the StringTokenizer class.
Then it checks if the second token is greater than or equal to the third token. If it is, it prints the second token as output.
If it is not, it prints "NA" as output.
<<<Output>>>
3000
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

class Main{
	public static void main(String[] args) {

		BufferedReader bfr=new BufferedReader(new InputStreamReader(System.in));
		String str="";
		StringTokenizer stk;
		int[] k1=new int[3];
		int i=0;
		try {
			while(true) {

				str = bfr.readLine();

				if(str==null) {
					System.exit(0);
				}

				stk=new StringTokenizer(str," ");

				while(stk.hasMoreTokens()) {
					k1[i]=Integer.parseInt(stk.nextToken());
					i++;
				}
				i=0;

				int kariiregaku=k1[2]-k1[0];
				if(kariiregaku<0) {
					kariiregaku=0;
				}

				if(k1[1]>=kariiregaku) {
					System.out.println(kariiregaku);
				}
				else {
					System.out.println("NA");
				}
			}
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}


</Code>
<<<Question>>>
What would be the output of code executiion given the following input:
```1000 3000 3000
```
First analyze step by step about how the code processes the input.