ariable s is initialized with the string "CODEFESTIVAL".
It prints the substring of variable s from index 0 to index 8.
<<<Output>>>
CODEFESTI
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.BufferedReader;
import java.io.OutputStreamWriter;
import java.io.BufferedWriter;
import java.util.StringTokenizer;
import java.io.IOException;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        OutputWriter out = new OutputWriter(outputStream);
        Task solver = new Task();
        solver.solve(1, in, out);
        out.close();
    }

    static class Task {
        public void solve(int testNumber, InputReader in, OutputWriter out) {
            int n = in.readInt();
            int[] a = in.readIntArray(n);
            int[] b = in.readIntArray(n);
            int[] c = in.readIntArray(n);
            int[] d = in.readIntArray(n);
            int[] e = in.readIntArray(n);
            int[] f = in.readIntArray(n);
            int[] g = in.readIntArray(n);
            int[] h = in.readIntArray(n);
            int[] i = in.readIntArray(n);
            int[] j = in.readIntArray(n);
            int[] k = in.readIntArray(n);
            int[] l = in.readIntArray(n);
            int[] m = in.readIntArray(n);
            int[] n1 = in.readIntArray(n);
            int[] o = in.readIntArray(n);
            int[] p = in.readIntArray(n);
            int[] q = in.readIntArray(n);
            int[] r = in.readIntArray(n);
            int[] s = in.readIntArray(n);
            int[]