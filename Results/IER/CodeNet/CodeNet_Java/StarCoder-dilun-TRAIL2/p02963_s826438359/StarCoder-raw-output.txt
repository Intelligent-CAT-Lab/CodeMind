ariable s is initialized with 3.
It calculates the square root of variable s and stores it in variable sq.
Then it checks if sq*sq is equal to s. If it is, it prints the value of sq, 0, 0, sq, 0 and 0.
If it is not, it calculates the value of variable t by subtracting sq*sq from s.
Then it prints the value of sq, 1, t, sq, 0 and 0.
<<<Output>>>
3 0 0 3 0 0
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>

public class Main {

  private static void solve() {
    int n = ni();
    int[] a = na(n);
    int[] b = na(n);
    int[] c = new int[n];
    int[] d = new int[n];
    int[] e = new int[n];
    int[] f = new int[n];
    int[] g = new int[n];
    int[] h = new int[n];
    int[] i = new int[n];
    int[] j = new int[n];
    int[] k = new int[n];
    int[] l = new int[n];
    int[] m = new int[n];
    int[] n1 = new int[n];
    int[] o = new int[n];
    int[] p = new int[n];
    int[] q = new int[n];
    int[] r = new int[n];
    int[] s = new int[n];
    int[] t = new int[n];
    int[] u = new int[n];
    int[] v = new int[n];
    int[] w = new int[n];
    int[] x = new int[n];
    int[] y = new int[n];
    int[] z = new int[n];
    int[] aa = new int[n];
    int[] bb = new int[n];
    int[] cc = new int[n];
    int[] dd = new int[n];
    int[] ee = new int[n];
    int[] ff = new int[n];
    int[] gg = new int[n];
    int[] hh = new int[n];
    int[] ii = new int[n