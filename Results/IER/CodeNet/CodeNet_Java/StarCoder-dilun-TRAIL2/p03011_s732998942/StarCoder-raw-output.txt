ariable n is initialized with 3 integers 1, 3 and 4.
It enters a for loop and it iterates from 0 to 2 to check each integer i in this range. The value of variable i is also passed to variable j.
Inside the for loop, it calculates the sum of the two integers n[i] and n[j] and stores it in variable min.
After the loop finishes, it print the fianl value of variable min as output, which is 2.
<<<Output>>>
2
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
import java.io.OutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.InputMismatchException;
import java.io.IOException;
import java.io.InputStream;

/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        FastScanner in = new FastScanner(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        TaskA solver = new TaskA();
        solver.solve(1, in, out);
        out.close();
    }

    static class TaskA {
        public void solve(int testNumber, FastScanner in, PrintWriter out) {
            int[] n = in.nextIntArray(3);
            int max = Integer.MIN_VALUE;
            for (int i = 0; i < 3; i++)
                for (int j = 0; j < 3; j++)
                    if (i!= j)
                        max = Math.max(n[i] + n[j], max);
            out.println(max);
        }

    }

    static class FastScanner {
        private InputStream in;
        private byte[] buffer = new byte[1024];
        private int bufPointer;
        private int bufLength;

        public FastScanner(InputStream in) {
            this.in = in;
            this.bufPointer = 0;
            this.bufLength = 0;
        }

        private int readByte() {
            if (bufPointer >= bufLength) {
                if (bufLength == -1)
                    throw