ble a and variable b are initialized with 4 and 11 respectively according to the input.
It checks if the sum of a and b is equal to 15. If it is, it prints '+' as output.
If it is not, it checks if the product of a and b is equal to 15. If it is, it prints '*' as output.
If it is not, it prints 'x' as output.
<<<Output>>>
*
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.BigDecimal;

public class Main{

    public static void main (String[] args) throws java.lang.Exception {
        InputReader in = new InputReader(System.in);
        PrintWriter w = new PrintWriter(System.out);
        int a = in.nextInt(), b = in.nextInt();
        if (a + b == 15)
            w.println("+");
        else if (a * b == 15)
            w.println("*");
        else
            w.println("x");

        w.close();
    }
    static class InputReader {
        private InputStream stream;
        private byte[] buf = new byte[1024];
        private int curChar;
        private int numChars;

        public InputReader(InputStream stream) {
            this.stream = stream;
        }

        public int read() {
            if (numChars == -1)
                throw new UnknownError();
            if (curChar >= numChars) {
                curChar = 0;
                try {
                    numChars = stream.read(buf);
                } catch (IOException e) {
                    throw new UnknownError();
                }
                if (numChars <= 0)
                    return -1;
            }
            return buf[curChar++];
        }

        public int peek() {
            if (numChars == -1)
                return -1;
            if (curChar >= numChars) {
                curChar = 0;
                try {
                    numChars = stream.read(buf);
                } catch (IOException e) {
                    return -1;
                }
                if (numChars <= 0)
                    return -1;
            }
            return buf[curChar];
        }

        public void skip(int x) {
            while (x-- >