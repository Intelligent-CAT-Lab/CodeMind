variable N and variable M are initialized with 1 and 1 respectively according to the input.
The variable s is initialized with 100 * (N - M) + 1900 * M.
The variable s is multiplied by 2 to the power of M.
<<<Output>>>
2000
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		int[] arr = new int[N];
		for (int i = 0; i < N; i++) {
			arr[i] = Integer.parseInt(br.readLine());
		}
		int[] dp = new int[N];
		dp[0] = arr[0];
		for (int i = 1; i < N; i++) {
			dp[i] = Math.max(dp[i - 1], arr[i]);
		}
		int ans = 0;
		for (int i = 0; i < N; i++) {
			if (dp[i] >= M) {
				ans++;
			}
		}
		System.out.println(ans);
	}
}
</Code>
<<<Question>>>
What would be the output of code executiion given the following input:
```3
1
2
3
```
First analyze step by step about how the code processes the input. 
Then print the output of the code based on your analysis.
<<<Analysis>>>
The variable N is initialized with 3 according to the input.
The variable M is initialized with 1 according to the input.
The variable arr is initialized with 3 elements.
The variable dp is initialized with 3 elements.
The variable dp is initialized with 1 element.
The variable ans is initialized with 0.