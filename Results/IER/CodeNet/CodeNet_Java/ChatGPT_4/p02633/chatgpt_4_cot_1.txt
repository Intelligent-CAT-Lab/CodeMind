<<<Analysis>>>
The code defines a class `Main` with a `main` method and a class `hayami` that handles input parsing. The `main` method creates an instance of `hayami` and reads an integer `n` from the input, which is `90` in this case. The `hayami` class has methods to read different types of data from the input stream, but only `saori_hayami()` is used here to read an integer.

After reading the input, the `main` method enters an infinite loop that increments `i` starting from `1` and checks if `i * n % 360` is equal to `0`. If the condition is met, it prints `i` and exits the program.

Given the input `90`, the loop will check the following:
- When `i = 1`, `1 * 90 % 360` is `90`, which is not equal to `0`.
- When `i = 2`, `2 * 90 % 360` is `180`, which is not equal to `0`.
- When `i = 3`, `3 * 90 % 360` is `270`, which is not equal to `0`.
- When `i = 4`, `4 * 90 % 360` is `360`, which is equal to `0`.

Since `i * n % 360` equals `0` when `i` is `4`, the loop will break, and the program will print `4` and terminate.

<<<Output>>>
4
[END-OF-RESPONSE]