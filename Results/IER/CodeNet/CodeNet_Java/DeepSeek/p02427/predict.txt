
The output will be a list of all binary representations of numbers from 0 to 2^n-1. For example, if the input is 4, the output will be:

0: 0
1: 1
2: 1 0
3: 1 1
4: 1 0 0
5: 1 0 1
6: 1 1 0
7: 1 1 1
8: 1 0 0 0
9: 1 0 0 1
10: 1 0 1 0
11: 1 0 1 1
12: 1 1 0 0
13: 1 1 0 1
14: 1 1 1 0
15: 1 1 1 1
16: 1 0 0 0 0
17: 1 0 0 0 1
18: 1 0 0 1 0
19: 1 0 0 1 1
20: 1 0 1 0 0
21: 1 0 1 0 1
22: 1 0 1 1 0
23: 1 0 1 1 1
24: 1 1 0 0 0
25: 1 1 0 0 1
26: 1 1 0 1 0
27: 1 1 0 1 1
28: 1 1 1 0 0
29: 1 1 1 0 1
30: 1 1 1 1 0
31: 1 1 1 1 1
32: 1 0 0 0 0 0
33: 1 0 0 0 0 1
34: 1 0 0 0 1 0
35: 1 0 0 0 1 1
36: 1 0 0 1 0 0
37: 1 0 0 1 0 1
38: 1 0 0 1 1 0
39: 1 0 0 1 1 1
40: 1 0 1 0 0 0
41: 1 0 1 0 0 1
42: 1 0 1 0 1 0
43: 1 0 1 0 1 1
44: 1 0 1 1 0 0
45: 1 0 1 1 0 1
46: 1 0 1 1 1 0
47: 1 0 1 1 1 1
48: 1 1 0 0 0 0
49: 1 1 0 0 0 1
50: 1 1 0 0 1 0
51: 1 1 0 0 1 1
52: 1 1 0 1 0 0
53: 1 1 0 1 0 1
54: 1 1 0 1 1 0
55: 1 1 0 1 1 1
56: 1 1 1 0 0 0
57: 1 1 1 0 0 1
58: 1 1 1 0 1 0
59: 1 1 1 0 1 1
60: 1 1 1 1 0 0
61: 1 1 1 1 0 1
62: 1 1 1 1 1 0
63: 1 1 1 1 1 1
64: 1 0 0 0 0 0 0
65: 1 0 0 0 0 0 1
66: 1 0 0 0 0 1 0
67: 1 0 0 0 0 1 1
68: 1 0 0 0 1 0 0
69: 1 0 0 0 1 0 1
70: 1 0 0 0 1 1 0
71: 1 0 0 0 1 1 1
72: 1 0 0 1 0 0 0
73: 1 0 0 1 0 0 1
74: 1 0 0 1 0 1 0
75: 1 0 0 1 0 1 1
76: 1 0 0 1 1 0 0
77: 1 0 0 1 1 0 1
78: 1 0 0 1 1 1 0
79: 1 0 0 1 1 1 1
80: 1 0 1 0 0 0 0
81: 1 0 1 0 0 0 1
82: 1 0 1 0 0 1 0
83: 1 0 1 0 0 1 1
84: 1 0 1 0 1 0 0
85: 1 0 1 0 1 0 1
86: 1 0 1 0 1 1 0
87: 1 0 1 0 1 1 1
88: 1 0 1 1 0 0 0
89: 1 0 1 1 0 0 1
90: 1 0 1 1 0 1 0
91: 1 0 1 1 0 1 1
92: 1 0 1 1 1 0 0
93: 1 0 1 1 1 0 1
94: 1 0 1 1 1 1 0
95: 1 0 1 1 1 1 1
96: 1 1 0 0 0 0 0
97: 1 1 0 0 0 0 1
98: 1 1 0 0 0 1 0
99: 1 1 0 0 0 1 1
100: 1 1 0 0 1 0 0
101: 1 1 0 0 1 0 1
102: 1 1 0 0 1 1 0
103: 1 1 0 0 1 1 1
104: 1 1 0 1 0 0 0
105: 1 1 0 1 0 0 1
106: 1 1 0 1 0 1 0
107: 1 1 0 1 0 1 1
108: 1 1 0 1 1 0 0
109: 1 1 0 1 1 0 1
110: