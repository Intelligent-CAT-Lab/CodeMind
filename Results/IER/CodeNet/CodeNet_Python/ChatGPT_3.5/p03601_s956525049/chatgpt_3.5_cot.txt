<<<Analysis>>>
The code reads the input values A, B, C, D, E, and F.
It initializes two lists, wdp and sdp, with zeros. These lists will be used to store intermediate results.
The code sets the first element of wdp and sdp to 1.
Then, it enters a loop that iterates from 0 to F (inclusive).
Inside this loop, it checks if adding A * 100 or B * 100 to the current index is within the range [0, F]. If it is, it adds the value of wdp[i] to the corresponding index in wdp.
After that, it enters another loop that also iterates from 0 to F (inclusive).
Inside this loop, it checks if adding C or D to the current index is within the range [0, F]. If it is, it adds the value of sdp[i] to the corresponding index in sdp.
Next, it enters a loop that iterates from 1 to F (inclusive).
Inside this loop, it checks if the value of sdp[i] is 0. If it is, it continues to the next iteration.
Otherwise, it initializes a variable w to 0.
Then, it enters another loop that iterates from 1 to F (inclusive).
Inside this loop, it checks if the sum of i and j is greater than F. If it is, it breaks out of the loop.
If the value of wdp[j] is 0, it continues to the next iteration.
If the value of i is less than or equal to j * E // 100, it sets the value of w to j and breaks out of the loop.
If the value of w is still 0, it continues to the next iteration.
Finally, it checks if the ratio of resb to resa is less than the ratio of i to i + w. If it is, it updates the values of resb and resa.
After the loop finishes, it prints the values of resa and resb.

<<<Output>>>
100 0
[END-OF-RESPONSE]