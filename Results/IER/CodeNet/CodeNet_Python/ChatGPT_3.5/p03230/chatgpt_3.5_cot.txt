<<<Analysis>>>
The code reads an integer N from the input.
It then enters a loop that iterates from 1 to 1000 (exclusive). For each iteration, it checks if the formula i * (i-1) // 2 is equal to N. If it is, it assigns the value of i to the variable K and breaks out of the loop. This loop is used to find the value of K such that K * (K-1) // 2 is equal to N.
If K is still 0 after the loop, it means no value of K was found and the code prints "No" and exits.
If K is not 0, the code initializes a list S with K empty lists.
The code then enters a while loop that iterates as long as i is less than or equal to N. In each iteration, it appends the value of i to the k-th list in S, where k starts at 0 and increments by 1 every K - (k+1) iterations. This loop is used to populate the first K lists in S with the numbers from 1 to N.
After the first while loop finishes, the code enters another while loop that iterates as long as j is less than or equal to N. In each iteration, it appends the value of j to the k-th list in S, where k starts at col + 1 and increments by 1 every K - (col+1) iterations. This loop is used to populate the remaining lists in S with the numbers from 1 to N.
Finally, the code prints "Yes" and the value of K. It then prints the contents of each list in S, with each list preceded by K - 1 and separated by a space.
<<<Output>>>
Yes
2
1 2
1 3