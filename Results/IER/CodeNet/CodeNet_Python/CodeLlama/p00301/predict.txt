  <<<Analysis>>>
The code first imports several modules, including heapq, deque, enum, sys, math, and copy.
It then sets the recursion limit to 3**12 and defines some constants, including BIG_NUM, HUGE_NUM, MOD, EPS, and SIZE.
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
If tmp_sum is greater than 0, the function also recursively calls itself with digit-1 and tmp_sum-POW[digit].
The code then defines a function called recursive, which takes two arguments: digit and tmp_sum.
The function first checks if digit is -1, and if so, it checks if tmp_sum is equal to W. If so, it sets the value of ans[i] to work[i] for each i from max_digit to 0.
The function then recursively calls itself with digit-1 and tmp_sum, and then with digit-1 and tmp_sum+POW[digit].
