Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
I want to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
Below is an example:
[[[Example Start]]]
Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)

<<Question>>
What would be the output of code executiion given the following input:
20 2 5
First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT".
<<Answer>>
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.


The output of code execution is:
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
n,y=map(int,input().split())
for i in range(n+1):
    for j in range(n-i+1):
        if (y-(i*10000+j*5000))/1000==(n-i-j):
            print(str(i)+' '+str(j)+' '+str(n-i-j))
            exit()
print('-1 -1 -1')
<<Question>>
What would be the output of code executiion given the following input:
9 45000

First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT"\<<Answer>>
### Response:
The variable n and variable y are initialized to 9 and 45000, respectively.
The code then enters a nested loop that iterates over all possible combinations of i and j, where 0 <= i <= n and 0 <= j <= n-i.
For each combination, it calculates the value of y-(i*10000+j*5000), which is the remaining amount of money after paying the cost of i*10000 and j*5000.
It then divides this value by 1000 to get the number of 1000 notes that can be used to pay the remaining amount.
If this value is equal to n-i-j, it prints the values of i, j, and n-i-j as a triplet, and exits the loop.
If no such triplet is found, it prints -1 -1 -1 as the output.

The output of code execution is:
3 2 4
END-OF-OUTPUT