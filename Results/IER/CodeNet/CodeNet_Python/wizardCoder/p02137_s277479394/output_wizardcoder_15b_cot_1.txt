Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
I want you to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
Below is an example:
[[[Example Start]]]
Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)

<<Question>>
What would be the output of code executiion given the following input:
20 2 5
First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT".
<<Answer>>
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.


The output of code execution is:
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
p = int(input())
sum = 0
if p >= 10000:
    sum += p//10000*10000
    p -= p//10000*10000
if p >= 5000:
    sum += p//5000*5000
    p -= p//5000*5000
if p >= 1000:
    sum += p//1000*1000
    p -= p//1000*1000
if p >= 500:
    sum += p//500*500
    p -= p//500*500
print(sum)


<<Question>>
What would be the output of code executiion given the following input:
5700

First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT"\<<Answer>>
### Response:
The variable p is initialized to 5700.
The variable sum is initialized to 0, which will be used to accumulate the sum of coins.
The code checks if p is greater than or equal to 10000. If it is, it adds 10000 to sum and subtracts 10000 from p.
The code then checks if p is greater than or equal to 5000. If it is, it adds 5000 to sum and subtracts 5000 from p.
The code then checks if p is greater than or equal to 1000. If it is, it adds 1000 to sum and subtracts 1000 from p.
The code then checks if p is greater than or equal to 500. If it is, it adds 500 to sum and subtracts 500 from p.
After the loop finishes, the code prints the final value of sum, which is 10000.

The output of code execution is:
10000
END-OF-OUTPUT