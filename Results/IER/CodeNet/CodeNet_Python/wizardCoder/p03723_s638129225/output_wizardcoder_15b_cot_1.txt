Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
I want you to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
Below is an example:
[[[Example Start]]]
Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)

<<Question>>
What would be the output of code executiion given the following input:
20 2 5
First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT".
<<Answer>>
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.


The output of code execution is:
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
a,b,c = map(int, input().split())
if  a==b==c and a%2 ==0:
    print(-1)
else:
    res = 0
    while True:
        if a%2!= 0 or b%2!= 0 or c%2!= 0:
            break
        a, b, c = (b+c)//2, (a+c)//2, (a+b)//2
        res += 1
    print(res)
<<Question>>
What would be the output of code executiion given the following input:
4 12 20

First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT"\<<Answer>>
### Response:
The variable a, variable b and variable c are initialized to 4, 12 and 20, respectively.
The code checks if a, b and c are equal and if they are even. If they are, the code prints -1 and exits.
If they are not equal or not even, the code enters a while loop that will run until a, b and c are all odd.
Inside the loop, the code calculates the average of a, b and c and assigns it to a, b and c respectively.
The code increments the variable res by 1.
After the loop finishes, the code prints the final value of res, which is 2.

The output of code execution is:
2
END-OF-OUTPUT