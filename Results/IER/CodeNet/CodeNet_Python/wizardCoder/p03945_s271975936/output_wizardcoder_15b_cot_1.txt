Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
I want you to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
Below is an example:
[[[Example Start]]]
Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)

<<Question>>
What would be the output of code executiion given the following input:
20 2 5
First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT".
<<Answer>>
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.


The output of code execution is:
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
import sys

def solve():
    input = sys.stdin.readline
    S = input().strip("\n")
    turn = 0
    current = S[0]
    for i in range(1, len(S)):
        if S[i]!= current:
            turn += 1
            current = S[i]
    print(turn)

    return 0

if __name__ == "__main__":
    solve()
<<Question>>
What would be the output of code executiion given the following input:
BBBWW

First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT"\<<Answer>>
### Response:
The code is a function that takes input from the standard input and returns the number of turns it takes to convert the input string into a palindrome.

The input string is "BBBWW".

The first character "B" is the first character of the input string, so it is the first character of the first turn.

The second character "B" is the second character of the input string, which is the same as the first character of the input string. Therefore, the second character is the second character of the second turn.

The third character "W" is the third character of the input string, which is the same as the second character of the input string. Therefore, the third character is the third character of the third turn.

The fourth character "W" is the fourth character of the input string, which is the same as the third character of the input string. Therefore, the fourth character is the fourth character of the fourth turn.

Therefore, the number of turns it takes to convert the input string into a palindrome is 4.

The output of code execution is:
4
END-OF-OUTPUT