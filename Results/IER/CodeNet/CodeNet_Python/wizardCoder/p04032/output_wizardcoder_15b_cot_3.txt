Below is an instruction that describes a task, paired with an input that
provides further context.  Write a response that appropriately completes
the request.

### Instruction:
I want to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
Below is an example:
[[[Example Start]]]
Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)

<<Question>>
What would be the output of code executiion given the following input:
20 2 5
First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT".
<<Answer>>
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.


The output of code execution is:
84
END-OF-OUTPUT
[[[Example End]]]


Consider the following code: 
S = input()

if len(S) == 2:
    if S[0] == S[1]:
        print(1, 2)
    else:
        print(-1, -1)
    exit()

for i in range(len(S)-3):
    s = list(S[i:i+3])
    if len(set(s)) <= 2:
        print(i+1, i+3)
        break
else:
    print(-1, -1)
<<Question>>
What would be the output of code executiion given the following input:
needed

First think step by step then print the output of code execution and end the output with "END-OF-OUTPUT"\<<Answer>>
### Response:
The variable S is initialized to "needed".
The code checks if the length of S is equal to 2. If it is, it checks if the first and second characters of S are equal. If they are, it prints "1 2" and exits the program. If they are not, it prints "-1 -1" and exits the program.
If the length of S is not equal to 2, the code enters a loop that iterates from 0 to len(S)-3 (inclusive), meaning it will consider substrings of S of length 3.
For each substring s of length 3, it checks if there are at most 2 distinct characters in s. If there are, it prints the starting index of s and the ending index of s (i.e., i+1 and i+3, respectively) and exits the program. If the loop finishes without finding a substring that meets the condition, it prints "-1 -1" and exits the program.

The output of code execution is:
1 3
END-OF-OUTPUT