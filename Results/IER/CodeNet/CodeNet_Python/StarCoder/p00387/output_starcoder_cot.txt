
Instruction: I want to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
For example:

Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)
What would be the output of the code execution given the following input:
20 2 5
Print the answer and end your response with "END-OF-OUTPUT":
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.

The output of code execution is:
84
END-OF-OUTPUT
Consider the following code:

l=input().split()
A=int(l[0])
B=int(l[1])
kimawasi=B//A
if B%A>0:
    kimawasi=kimawasi+1
print(kimawasi)

What would be the output of the code execution given the following input:
3 5

Print the answer and end your response with "END-OF-OUTPUT":
The code first reads the input and stores it in a list l.
The code then initializes the variables A and B to 3 and 5, respectively.
kimawasi is initialized to B//A, which is 1.
The code checks if B%A is greater than 0. If it is, kimawasi is incremented by 1.
The code then prints the final value of kimawasi, which is 2.

The output of code execution is:
2
END-OF-OUTPUT

'''

# Solution

# Solution 1

N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)

# Solution 2

l=input().split()
A=int(l[0])
B=int(l[1])
kimawasi=B//A
if B%A>0:
    kimawasi=kimawasi+1
print(kimawasi)
