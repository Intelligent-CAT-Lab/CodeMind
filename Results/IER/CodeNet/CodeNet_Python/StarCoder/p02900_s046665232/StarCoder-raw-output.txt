Print the answer and end your response with "END-OF-OUTPUT":
The code first defines a function gcd(a, b) that calculates the greatest common divisor of a and b.
The function then defines a function lcm(a, b) that calculates the least common multiple of a and b.
The function factorization(n) calculates the factorization of a number n.
The code then reads two numbers n and m from the input.
The code then calculates the greatest common divisor of n and m and stores it in g.
If g is equal to 1, the code prints 1 and ends the execution.
Otherwise, the code calculates the factorization of g and stores it in arr.
The code then calculates the length of arr and stores it in cnt.
The code then prints cnt+1 and ends the execution.
<<<Output>>>
3
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a // gcd (a, b) * b

def factorization(n):
    arr = []
    temp = n
    for i in range(2, int(-(-n**0.5//1))+1):
        if temp%i==0:
            cnt=0
            while temp%i==0:
                cnt+=1
                temp //= i
            arr.append([i, cnt])

    if temp!=1:
        arr.append([temp, 1])

    if arr==[]:
        arr.append([n, 1])

    return arr

n, m = map(int, input().split())
g = gcd(n,m)
if g == 1:
    print(1)
