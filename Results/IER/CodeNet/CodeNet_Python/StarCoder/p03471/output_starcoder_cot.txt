
Instruction: I want to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
For example:

Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)
What would be the output of the code execution given the following input:
20 2 5
Print the answer and end your response with "END-OF-OUTPUT":
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.

The output of code execution is:
84
END-OF-OUTPUT
Consider the following code:

n,y=map(int,input().split())
for i in range(n+1):
    for j in range(n-i+1):
        if (y-(i*10000+j*5000))/1000==(n-i-j):
            print(str(i)+' '+str(j)+' '+str(n-i-j))
            exit()
print('-1 -1 -1')
What would be the output of the code execution given the following input:
9 45000

Print the answer and end your response with "END-OF-OUTPUT":
The variable n is initialized to 9, and variable y is initialized to 45000.
The code enters a loop that iterates from 0 to n (inclusive), meaning it will consider numbers from 0 to 9.
For each number i in this range, it enters another loop that iterates from 0 to n-i (inclusive), meaning it will consider numbers from 0 to 8.
For each number j in this range, it calculates the value of (y-(i*10000+j*5000))/1000, which is the number of 1000-dollar bills that can be bought with the current amount of money.
The code checks if this value is equal to n-i-j, which is 9-0-1=8. If it is, it prints the values of i, j and n-i-j, which are 0, 1 and 8, respectively.
After the loop finishes, the code prints -1 -1 -1, which is the output of the code execution.

The output of code execution is:
0 1 8
END-OF-OUTPUT

'''

# Solution

# Solution 1

n, y = map(int, input().split())
for i in range(n + 1):
    for j in range(n - i + 1):
        if (y - (i * 10000 + j * 5000)) / 1000 == (n - i - j):
            print(str(i) +'' + str(j) +'' + str(n - i - j))
            exit()
print('-1 -1 -1')

# Solution 2

n, y = map