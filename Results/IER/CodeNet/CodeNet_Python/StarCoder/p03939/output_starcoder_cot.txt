
Instruction: I want to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
For example:

Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)
What would be the output of the code execution given the following input:
20 2 5
Print the answer and end your response with "END-OF-OUTPUT":
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.

The output of code execution is:
84
END-OF-OUTPUT
Consider the following code:

import sys

read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines

N, d, x = map(int, read().split())

def main(N, d, x):
    ret = 0
    while N:
        ret += d + (N-0.5) * x
        d = d + (d/N) + (5*x)/(2*N)
        x += 2*x/N
        N -= 1
    return ret

print(main(N, d, x))
What would be the output of the code execution given the following input:
1 3 3

Print the answer and end your response with "END-OF-OUTPUT":
The variable N is initialized to 1, variable d is initialized to 3, and variable x is initialized to 3.
The code enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 1.
The code calculates the value of ret as 3 + (1-0.5) * 3 = 3 + 2 = 5.
The code calculates the value of d as 3 + (3/1) + (5*3)/(2*1) = 3 + 3 + 15/2 = 18.
The code calculates the value of x as 3 + 6 = 9.
After the loop finishes, the code prints the final value of ret, which is 5.

The output of code execution is:
5
END-OF-OUTPUT

"""

import sys

read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines

N, d, x = map(int, read().split())

def main(N, d, x):
    ret = 0
    while N:
        ret += d + (N-0.5) * x
        d = d + (d/N) + (5*x)/(2*N)
        x += 2*x/N
        N -= 1
    return ret

print(main(N, d, x))
