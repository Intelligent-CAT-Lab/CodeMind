Print the answer and end your response with "END-OF-OUTPUT":
The variable n is initialized to 5, and variable l is initialized to 2.
The code checks if l is greater than or equal to 0.
If it is, it prints the answer as follows:
```
2 * (n - 1) + (n - 1) * n // 2
```
The code checks if l + n - 1 is less than 0.
If it is, it prints the answer as follows:
```
2 * (n - 1) + (n - 1) * n // 2 - (n - 1)
```
The code checks if l + n - 1 is greater than or equal to 0.
If it is, it prints the answer as follows:
```
2 * n + (n - 1) * n // 2
```
