
Instruction: I want to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
For example:

Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)
What would be the output of the code execution given the following input:
20 2 5
Print the answer and end your response with "END-OF-OUTPUT":
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.

The output of code execution is:
84
END-OF-OUTPUT
Consider the following code:

import math
from fractions import Fraction
N,K=map(int,input().split())
s=0
if N >= K:
  s=s+Fraction(N-K,N)
  d=0
  for i in range(K):
    a=math.log(K/(i+1),2)
    d=d+Fraction(1, 2)**(math.ceil(a))*Fraction(1, N)
else:
  d=0
  for i in range(N):
    a=math.log(K/(i+1),2)
    d=d+Fraction(1, 2)**(math.ceil(a))*Fraction(1, N)
print(float(s+d))
  
What would be the output of the code execution given the following input:
3 10

Print the answer and end your response with "END-OF-OUTPUT":
The variable N is initialized to 3, and variable K is initialized to 10.
The code enters a conditional block that checks if N is greater than or equal to K.
If it is, the code calculates the sum of the first K fractions, which is 1/3 + 1/6 + 1/10 + 1/15 + 1/21 + 1/28 + 1/36 + 1/45 + 1/55.
If N is less than K, the code calculates the sum of the first N fractions, which is 1/3 + 1/6 + 1/10.
The sum of the fractions is then printed.

The output of code execution is:
0.6666666666666666
END-OF-OUTPUT

'''

import math
from fractions import Fraction
N,K=map(int,input().split())
s=0
if N >= K:
  s=s+Fraction(N-K,N)
  d=0
  for i in range(K):
    a=math.log(K/(i+1),2)
    d=d+Fraction(1, 2)**(math.ceil(a))*Fraction(1, N)
else:
  d=0
  for i in range(N):
    a=math.log(K/(i+1),2)
    d=d+Fraction(1, 2)**(math.ceil(a))*Fraction(1, N)
print(float(s+d))
