Print the answer and end your response with "END-OF-OUTPUT":
The code first reads the input and initializes the variables N, V, X, Y to 0, 7, 3 and 1, respectively.
The code then reads the input for N lines, each line containing 4 integers L, B, R and T.
The code then checks if X is 0. If it is, it checks if V*V/(2*g) < Y-eps. If it is, it checks if there is an obstacle that is above the pig. If there is, the code prints 'No' and exits.
If X is not 0, the code then checks if the pig can hit the ground directly. If it can, it prints 'Yes' and exits.
If the pig cannot hit the ground directly, the code then checks if it can hit the left and right side of the obstacle. If it can, it prints 'Yes' and exits.
If the pig cannot hit the left and right side of the obstacle, it prints 'No' and exits.
<<<Output>>>
Yes
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
# aoj 2309
import sys
input = sys.stdin.readline


def calc_y(vy, t):
    return vy*t - g/2*t*t


def loc(y, b, t):
    if y < b+eps:
        return -1
    if y > t-eps:
        return 1
    return 0


def can_hit(x, y):
    if x == 0:
        return False
    a = g*g/4
    b = g*y-V*V
    c = x*x+y*y
    D = b*b-