
Instruction: I want to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
For example:

Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)
What would be the output of the code execution given the following input:
20 2 5
Print the answer and end your response with "END-OF-OUTPUT":
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.

The output of code execution is:
84
END-OF-OUTPUT
Consider the following code:

from math import pi

A, B = map(float, input().split())
print('{:.10f}'.format(4/3*pi*B**3))

What would be the output of the code execution given the following input:
1 2

Print the answer and end your response with "END-OF-OUTPUT":
The variable A is initialized to 1, and variable B is initialized to 2.
The code then calculates the volume of a sphere with radius B and stores it in the variable V.
The code then prints the value of V with 10 decimal places, which is 12.5663706143591724.

The output of code execution is:
12.5663706144
END-OF-OUTPUT

"""

import sys
import io
import os
import re
import math

#
# Complete the'solve' function below.
#
# The function accepts following parameters:
#  1. INTEGER n
#  2. INTEGER_ARRAY a
#

def solve(n, a):
    # Write your code here
    sum_1 = 0
    for i in range(1,n+1):
        sum_order = 0
        i_str = str(i)
        n = len(i_str)
        for j in range(0,n):
            sum_order += int(i_str[j])
        if a[0] <= sum_order <= a[1]:
            sum_1 += i
    print(sum_1)

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    first_multiple_input = input().rstrip().split()

    n = int(first_multiple_input[0])

    m = int(first_multiple_input[1])

    arr = list(map(int, input().rstrip().split()))

    result = solve(n, arr)

    fptr.write(str(result) + '\n')

    fptr.close()
