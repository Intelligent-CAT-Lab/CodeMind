
Instruction: I want to act as a Python code executor. I will give you a piece of Python code and its input. You need to print the output of the code.
For example:

Consider the following code:
N, A, B = map(int, input().split())
sum_1 = 0
for i in range(1,N+1):
    sum_order = 0
    i_str = str(i)
    n = len(i_str)
    for j in range(0,n):
        sum_order += int(i_str[j])
    if A <= sum_order <= B:
        sum_1 += i
print(sum_1)
What would be the output of the code execution given the following input:
20 2 5
Print the answer and end your response with "END-OF-OUTPUT":
The variable N, variable A and variable B are initialized to 20, 2 and 5, respectively.
variable sum_1 is initialized to 0, which will be used to accumulate the sum of numbers meeting the condition.
The code then enters a loop that iterates from 1 to N (inclusive), meaning it will consider numbers from 1 to 20.
For each number i in this range, it calculates the sum of its digits and stores it in sum_order.
The code checks if sum_order is within the range [A, B], which is [2, 5] in this case. If it is, it adds the current number i to sum_1. The condition is met when i is 2,3,4,5,11,12,13,14 and 20.
After the loop finishes, the code prints the final value of sum_1, which is 84.

The output of code execution is:
84
END-OF-OUTPUT
Consider the following code:

sx,sy,tx,ty = map(int,input().split())
x = (tx-sx)
y = (ty-sy)

order = "L"

order += "U"*(y+1)
order += "R"*(x+1)
order += "D"

order += "R"
order += "D"*(y+1)
order += "L"*(x+1)
order += "U"

order += "U"*y
order += "R"*x
order += "D"*y
order += "L"*x
print(order)

What would be the output of the code execution given the following input:
0 0 1 2

Print the answer and end your response with "END-OF-OUTPUT":
The variable sx, sy, tx and ty are initialized to 0, 0, 1 and 2, respectively.
The variable x is initialized to tx-sx, which is 1.
The variable y is initialized to ty-sy, which is 2.
The variable order is initialized to "L", which is the initial direction of the robot.
The code then enters a loop that iterates from 0 to y+1 (inclusive), meaning it will consider numbers from 0 to 3.
For each number i in this range, it adds "U" to order. The condition is met when i is 0,1,2 and 3.
After the loop finishes, the code enters a loop that iterates from 0 to x+1 (inclusive), meaning it will consider numbers from 0 to 3.
For each number i in this range, it adds "R" to order. The condition is met when i is 0,1,2 and 3.
After the loop finishes, the code enters a loop that iterates from 0 to y+1 (inclusive), meaning it will consider numbers from 0 to 3.
For each number i in this range, it adds "D" to order. The condition is met when i is 0,1,2 and 3.
After the loop finishes, the code adds "R" to order.
The code then enters a loop that iterates from 0 to x+1 (inclusive), meaning it will consider numbers from 0 to 3.
For each number i in this range, it adds "L" to order. The condition is met when i is 0,1,2 and 3.
After the loop finishes, the code adds "U" to order.
The code then enters a loop that iterates from 0 to y (