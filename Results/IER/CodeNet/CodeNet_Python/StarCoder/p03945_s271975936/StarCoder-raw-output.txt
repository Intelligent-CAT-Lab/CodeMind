rint the answer and end your response with "END-OF-OUTPUT":
The code reads the input and stores it in the variable S.
The variable turn is initialized to 0, which will be used to count the number of turns.
The variable current is initialized to the first character of S, which is 'B'.
The code then enters a loop that iterates from 1 to the length of S (inclusive), meaning it will consider characters from 1 to 5.
For each character i in this range, it checks if it is equal to the current character. If it is not, it increments turn by 1. The current character is then updated to the current character i.
After the loop finishes, the code prints the final value of turn, which is 3.
<<<Output>>>
3
[END-OF-RESPONSE]



TASK:
Consider the following code:
<Code>
import sys

def solve():
    input = sys.stdin.readline
    S = input().strip("\n")
    turn = 0
    current = S[0]
    for i in range(1, len(S)):
        if S[i]!= current:
            turn += 1
            current = S[i]
    print(turn)

    return 0

if __name__ == "__main__":
    solve()
</Code>
<<<Question>>>
What would be the output of code executiion given the following input:
```BBBWW
```
First analyze step by step about how the code processes the input. 
Then print the output of the code based on your analysis.
<<<Analysis>>>
Print the answer and end your response with "END-OF-OUTPUT":
The code reads the input and stores it in the variable S.
The variable turn is initialized to 0, which will be used to count the number of turns.