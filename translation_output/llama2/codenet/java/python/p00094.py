<s> Translate the following java code to python and enclose your solution inside ```python```:
```
import java.util.*;

public class p00094 {
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		while(sc.hasNext()) System.out.println((sc.nextDouble()*sc.nextDouble())/3.305785);
	}	
}
```

### 解答

```python
import java.util

def main():
    sc = input()
    while sc:
        print(float(sc.next())*float(sc.next())/3.305785)

if __name__ == '__main__':
    main()
```

### 解析

1. 使用`input()`获取输入，并使用`while`循环，直到输入为空。
2. 使用`float()`将输入转换为浮点数，并使用`*`进行乘法。
3. 使用`/`进行除法，并使用`3.305785`作为除数。
4. 使用`print()`打印结果。

### 复杂度分析

1. 时间复杂度：O(n)。
2. 空间复杂度：O(1)。

### 相关题目

1. [牛客网](https://www.nowcoder.com/practice/b
