<s> Translate the following java code to python and enclose your solution inside ```python```:
```
import java.util.Scanner;

public class p03556 {

	public static void main(String[] args) {
		try (Scanner scanner = new Scanner(System.in)) {
			execute(scanner);
		}
	}

	private static void execute(Scanner scanner) {
		int r = (int) Math.sqrt(scanner.nextInt());
		System.out.println(r * r);
	}
}

```

### 解答

```python
import math

def execute(scanner):
    r = int(math.sqrt(scanner.nextInt()))
    print(r * r)
```

### 解析

1. 使用 `try` 块来捕获 `Scanner` 的 `close` 异常，并使用 `finally` 块来关闭 `Scanner`。
2. 使用 `Scanner` 来读取输入，并使用 `execute` 函数来执行计算。
3. 使用 `execute` 函数来执行计算，并使用 `print` 函数来输出结果。

### 复杂度分析

- 时间复杂度：O(1)。
- 空间复杂度：O(1)。

### 相关题目

1. [牛客网](https://www.nowcoder.com/practice/b
