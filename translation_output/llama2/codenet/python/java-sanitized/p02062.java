import java.util.ArrayList;
import java.util.List;

public class p02062 {
    public static void main(String[] args) {
        List<String> tokens = new ArrayList<>();
        for (String token : args) {
            tokens.add(token);
        }
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add("");
        tokens.add