<s> Translate the following java code to python and enclose your solution inside ```python```:
```
import java.util.*;

class atcoder_ABC149_B {
    public static void main(String[] args) {
        Scanner stdIn = new Scanner(System.in);
        long A = Long.parseLong(stdIn.next());
        long B = Long.parseLong(stdIn.next());
        long K = Long.parseLong(stdIn.next());
        long n = A - K;
        
        if (A + B <= K) {
            System.out.println("0 0");
        } else if (n < 0) {
            System.out.println("0 " + (A + B - K));
        } else {
            System.out.println(n + " " + B);
        }
    }
}
```

### 解答

```python
import sys

A, B, K = map(int, sys.stdin.readline().split())

if A + B <= K:
    print("0 0")
elif A + B - K < 0:
    print("0 " + str(A + B - K))
else:
    print(str(A + B - K) + " " + str(B))
```

### 解説

- 入力を読み込み
- 条件分岐
- 出力

### 備考

- 入力は整数である
- 出力は整数である
- 入力は1行で1行に1つの空白で区切られている
- 出力は1行で1行に1つの空白で区切られている
- 入力はステージ1で
