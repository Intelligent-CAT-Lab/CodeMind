
```
n, m = map(int, input().split())
MOD = 1000000007
dp = [[0 for i in range(n+1)] for j in range(n+1)]
dp[1][0] = 1
for i in range(m):
    next = [[0 for i in range(n+1)] for j in range(n+1)]
    for a in range(n+1):
        for b in range(n+1):
            if dp[a][b] == 0:
                continue
            next[a+b][0] = (next[a+b][0] + dp[a][b] * a) % MOD
            next[a][b+1] = (next[a][b+1] + dp[a][b] * (n-a-b)) % MOD
            next[a][b] = (next[a][b] + dp[a][b] * b) % MOD
    dp = next
print(dp[n][0])
```

## 4. 10844 쉬운 계단 수

### 문제
45656이란 수를 보자.

이 수는 인접한 모든 자리수의 차이가 1이 난다. 이런 수를 계단 수라고 한다.

세준이는 수의 길이가 N인 계단 수가 몇 개 있는지 궁금해졌다.

N이 주어질 때, 길이가 N인 계단 수가 총 몇 개 있는지 구하는 프로그램을 작성하시오. (0으로 시작하는 수는 없다.)

### 입력
첫째 줄에 N이 주어진다. N은 1보다 크거나 같고, 100보다 작거나 같은 자연수이다.

### 출력
첫째 줄에 정답을 1,000,000,000으로 나눈 나머지를 출력한다.

### 예제 입력 1 
1
### 예제 출력 1 
9
### 예제 입력 2 
2
### 예제 출력 2 
17

### 풀이

```
n = int(input())
dp = [[0 for i in range(10)] for j in range(n+1)]
for i in range(1, 10):
    dp[1][i] = 1
for i in range(2, n+1):
    for j in range(10):
        if j == 0:
            dp[i][j] = dp[i-1][j+1]
        elif j == 9:
            dp[i][j] = dp[i-1][j-1]
        else:
            dp[i][j] = dp[i-1][j-1] + dp[i-1][j+1]
print(sum(dp[n]) % 1000000000)
```

## 5. 11057 오르막 수

### 문제
오르막 수는 수의 자리가 오름차순을 이루는 수를 말한다. 이때, 인접한 수가 같아도 오름차순으로 친다.

예를 들어, 2234와 3678, 11119는 오르막 수이지만, 2232, 3676, 91111은 오르막 수가 아니다.

수의 길이 N이 주어졌을 때, 오르막 수의 개수를 구하는 프로그램을 작성하시오. 수는 0으로 시작할 수 있다.

### 입력
첫째 줄에 N (1 ≤ N ≤ 1,000)이 주어진다.

### 출력
첫째 줄에 길이가 N인 오르막 수의 개수를 10,007로 나눈 나머지를 출력한다.

### 예제 입력 1 
1
### 예제 출력 1 
10
### 예제 입력 2 
2
### 예제 출력 2 
55
### 예제 입력 3 
3
### 예제 출력 3 
220

### 풀이

```
n = int(input())
dp = [[0 for i in range(10)] for j in range(n+1)]
for i in range(10):
    dp[1][i] = 1
for i in range(2, n+1):
    for j in range(10):
        for k in range(j+1):
            dp[i][j] += dp[i-1][k]
print(sum(dp[n]) % 10007)
```

## 6. 2193 이친수

### 문제
0과 1로만 이루어진 수를 이진수라 한다. 이러한 이진수 중 특별한 성질을 갖는 것들이 있는데, 이들을 이친수(pinary number)라 한다. 이친수는 다음의 성질을 만족한다.

이친수는 0으로 시작하지 않는다.
이친수에서는 1이 두 번 연속으로 나타나지 않는다. 즉, 11을 부분 문자열로 갖지 않는다.
예를 들면 1, 10, 100, 101, 1000, 1001 등이 이친수가 된다. 하지만 0010101이나 101101은 각각 1, 2번 규칙에 위배되므로 이친수가 아니다.

N(1 ≤ N ≤ 90)이 주어졌을 때, N자리 이친수의 개수를 구하는 프로그램을 작성하시오.

### 입력
첫째 줄에 N이 주어진다.

### 출력
첫째 줄에 N자리 이친수의 개수를 출력한다.

### 예제 입력 1 
3
### 예제 출력 1 
2

### 풀이

```
n = int(input())
dp = [[0 for i in range(2)] for j in range(n+1)]
dp[1][1] = 1
for i in range(2, n+1):
    dp[i][0] = dp[i-1][0] + dp[i-1][1]
    dp[i][1] = dp[i-1][0]
print(sum(dp[n]))
```

## 7. 9465 스티커

### 문제
상근이의 여동생 상냥이는 문방구에서 스티커 2n개를 구매했다. 스티커는 그림 (a)와 같이 2행 n열로 배
