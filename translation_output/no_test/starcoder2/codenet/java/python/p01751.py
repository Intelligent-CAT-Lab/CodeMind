
```python
a,b,c = map(int,input().split())
d = a+b
e = -1
for i in range(1000):
    if 0 <= (60*i+c)%d and (60*i+c)%d <= a:
        e = i
        break
if e == -1:
    print(-1)
else:
    print(60*e+c)
```

## 1752

### 题目描述

给定一个长度为n的数组a，求a的最长连续递增子序列的长度。

### 输入格式

第一行一个整数n，表示数组a的长度。

第二行n个整数，表示数组a。

### 输出格式

一个整数，表示a的最长连续递增子序列的长度。

### 数据范围

1≤n≤100000

### 输入样例：

```
5
1 2 3 4 5
```

### 输出样例：

```
5
```

### 题解

```python
n = int(input())
a = list(map(int,input().split()))
dp = [1]*n
for i in range(1,n):
    if a[i] > a[i-1]:
        dp[i] = dp[i-1]+1
print(max(dp))
```

## 1753

### 题目描述

给定一个长度为n的数组a，求a的最长连续递减子序列的长度。

### 输入格式

第一行一个整数n，表示数组a的长度。

第二行n个整数，表示数组a。

### 输出格式

一个整数，表示a的最长连续递减子序列的长度。

### 数据范围

1≤n≤100000

### 输入样例：

```
5
1 2 3 4 5
```

### 输出样例：

```
1
```

### 题解

```python
n = int(input())
a = list(map(int,input().split()))
dp = [1]*n
for i in range(1,n):
    if a[i] < a[i-1]:
        dp[i] = dp[i-1]+1
print(max(dp))
```

## 1754

### 题目描述

给定一个长度为n的数组a，求a的最长连续上升子序列的长度。

### 输入格式

第一行一个整数n，表示数组a的长度。

第二行n个整数，表示数组a。

### 输出格式

一个整数，表示a的最长连续上升子序列的长度。

### 数据范围

1≤n≤100000

### 输入样例：

```
5
1 2 3 4 5
```

### 输出样例：

```
5
```

### 题解

```python
n = int(input())
a = list(map(int,input().split()))
dp = [1]*n
for i in range(1,n):
    if a[i] > a[i-1]:
        dp[i] = dp[i-1]+1
print(max(dp))
```

## 1755

### 题目描述

给定一个长度为n的数组a，求a的最长连续下降子序列的长度。

### 输入格式

第一行一个整数n，表示数组a的长度。

第二行n个整数，表示数组a。

### 输出格式

一个整数，表示a的最长连续下降子序列的长度。

### 数据范围

1≤n≤100000

### 输入样例：

```
5
1 2 3 4 5
```

### 输出样例：

```
1
```

### 题解

```python
n = int(input())
a = list(map(int,input().split()))

